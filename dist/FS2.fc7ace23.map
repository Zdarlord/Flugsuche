{"version":3,"sources":["node_modules\\ol\\util.js","node_modules\\ol\\AssertionError.js","node_modules\\ol\\CollectionEventType.js","node_modules\\ol\\ObjectEventType.js","node_modules\\ol\\obj.js","node_modules\\ol\\events.js","node_modules\\ol\\functions.js","node_modules\\ol\\Disposable.js","node_modules\\ol\\events\\Event.js","node_modules\\ol\\events\\EventTarget.js","node_modules\\ol\\events\\EventType.js","node_modules\\ol\\Observable.js","node_modules\\ol\\Object.js","node_modules\\ol\\Collection.js","node_modules\\ol\\MapEvent.js","node_modules\\ol\\MapBrowserEvent.js","node_modules\\ol\\webgl.js","node_modules\\ol\\has.js","node_modules\\ol\\MapBrowserEventType.js","node_modules\\ol\\MapBrowserPointerEvent.js","node_modules\\ol\\pointer\\EventType.js","node_modules\\ol\\pointer\\EventSource.js","node_modules\\ol\\pointer\\MouseSource.js","node_modules\\ol\\pointer\\MsSource.js","node_modules\\ol\\pointer\\NativeSource.js","node_modules\\ol\\pointer\\PointerEvent.js","node_modules\\ol\\array.js","node_modules\\ol\\pointer\\TouchSource.js","node_modules\\ol\\pointer\\PointerEventHandler.js","node_modules\\ol\\MapBrowserEventHandler.js","node_modules\\ol\\MapEventType.js","node_modules\\ol\\MapProperty.js","node_modules\\ol\\TileState.js","node_modules\\ol\\asserts.js","node_modules\\ol\\structs\\PriorityQueue.js","node_modules\\ol\\TileQueue.js","node_modules\\ol\\tilegrid\\common.js","node_modules\\ol\\math.js","node_modules\\ol\\centerconstraint.js","node_modules\\ol\\resolutionconstraint.js","node_modules\\ol\\rotationconstraint.js","node_modules\\ol\\ViewHint.js","node_modules\\ol\\ViewProperty.js","node_modules\\ol\\string.js","node_modules\\ol\\coordinate.js","node_modules\\ol\\easing.js","node_modules\\ol\\extent\\Corner.js","node_modules\\ol\\extent\\Relationship.js","node_modules\\ol\\extent.js","node_modules\\ol\\geom\\GeometryType.js","node_modules\\ol\\geom\\GeometryLayout.js","node_modules\\ol\\geom\\flat\\transform.js","node_modules\\ol\\sphere.js","node_modules\\ol\\proj\\Units.js","node_modules\\ol\\proj\\Projection.js","node_modules\\ol\\proj\\epsg3857.js","node_modules\\ol\\proj\\epsg4326.js","node_modules\\ol\\proj\\projections.js","node_modules\\ol\\proj\\transforms.js","node_modules\\ol\\proj.js","node_modules\\ol\\transform.js","node_modules\\ol\\geom\\Geometry.js","node_modules\\ol\\geom\\SimpleGeometry.js","node_modules\\ol\\geom\\flat\\area.js","node_modules\\ol\\geom\\flat\\closest.js","node_modules\\ol\\geom\\flat\\deflate.js","node_modules\\ol\\geom\\flat\\inflate.js","node_modules\\ol\\geom\\flat\\simplify.js","node_modules\\ol\\geom\\LinearRing.js","node_modules\\ol\\geom\\Point.js","node_modules\\ol\\geom\\flat\\contains.js","node_modules\\ol\\geom\\flat\\interiorpoint.js","node_modules\\ol\\geom\\flat\\segments.js","node_modules\\ol\\geom\\flat\\intersectsextent.js","node_modules\\ol\\geom\\flat\\reverse.js","node_modules\\ol\\geom\\flat\\orient.js","node_modules\\ol\\geom\\Polygon.js","node_modules\\ol\\View.js","node_modules\\ol\\dom.js","node_modules\\ol\\layer\\Property.js","node_modules\\ol\\layer\\Base.js","node_modules\\ol\\source\\State.js","node_modules\\ol\\layer\\Group.js","node_modules\\ol\\size.js","node_modules\\ol\\PluggableMap.js","node_modules\\ol\\control\\Control.js","node_modules\\ol\\css.js","node_modules\\ol\\render\\EventType.js","node_modules\\ol\\layer\\Layer.js","node_modules\\ol\\control\\Attribution.js","node_modules\\ol\\control\\Rotate.js","node_modules\\ol\\control\\Zoom.js","node_modules\\ol\\control\\util.js","node_modules\\ol\\Kinetic.js","node_modules\\ol\\interaction\\Property.js","node_modules\\ol\\interaction\\Interaction.js","node_modules\\ol\\interaction\\DoubleClickZoom.js","node_modules\\ol\\events\\condition.js","node_modules\\ol\\interaction\\Pointer.js","node_modules\\ol\\interaction\\DragPan.js","node_modules\\ol\\interaction\\DragRotate.js","node_modules\\ol\\render\\Box.js","node_modules\\ol\\interaction\\DragBox.js","node_modules\\ol\\interaction\\DragZoom.js","node_modules\\ol\\events\\KeyCode.js","node_modules\\ol\\interaction\\KeyboardPan.js","node_modules\\ol\\interaction\\KeyboardZoom.js","node_modules\\ol\\interaction\\MouseWheelZoom.js","node_modules\\ol\\interaction\\PinchRotate.js","node_modules\\ol\\interaction\\PinchZoom.js","node_modules\\ol\\interaction\\DragAndDrop.js","node_modules\\ol\\interaction\\DragRotateAndZoom.js","node_modules\\ol\\color.js","node_modules\\ol\\colorlike.js","node_modules\\ol\\ImageState.js","node_modules\\ol\\structs\\LRUCache.js","node_modules\\ol\\render\\canvas.js","node_modules\\ol\\style\\Image.js","node_modules\\ol\\style\\RegularShape.js","node_modules\\ol\\style\\Circle.js","node_modules\\ol\\style\\Fill.js","node_modules\\ol\\style\\Stroke.js","node_modules\\ol\\style\\Style.js","node_modules\\ol\\Feature.js","node_modules\\ol\\geom\\Circle.js","node_modules\\ol\\geom\\flat\\interpolate.js","node_modules\\ol\\geom\\flat\\length.js","node_modules\\ol\\geom\\LineString.js","node_modules\\ol\\geom\\MultiLineString.js","node_modules\\ol\\geom\\MultiPoint.js","node_modules\\ol\\geom\\flat\\center.js","node_modules\\ol\\geom\\MultiPolygon.js","node_modules\\ol\\LayerType.js","node_modules\\ol\\layer\\VectorRenderType.js","node_modules\\ol\\layer\\Vector.js","node_modules\\ol\\format\\FormatType.js","node_modules\\ol\\featureloader.js","node_modules\\ol\\loadingstrategy.js","node_modules\\ol\\source\\Source.js","node_modules\\ol\\source\\VectorEventType.js","node_modules\\quickselect\\quickselect.js","node_modules\\rbush\\index.js","node_modules\\ol\\structs\\RBush.js","node_modules\\ol\\source\\Vector.js","node_modules\\ol\\interaction\\Draw.js","node_modules\\ol\\interaction\\Extent.js","node_modules\\ol\\interaction\\Modify.js","node_modules\\ol\\interaction\\Select.js","node_modules\\ol\\interaction\\Snap.js","node_modules\\ol\\interaction\\Translate.js","node_modules\\ol\\interaction.js","node_modules\\ol\\reproj\\common.js","node_modules\\ol\\ImageBase.js","node_modules\\ol\\ImageCanvas.js","node_modules\\ol\\render\\Event.js","node_modules\\ol\\render\\VectorContext.js","node_modules\\ol\\render\\canvas\\Immediate.js","node_modules\\ol\\style\\IconImageCache.js","node_modules\\ol\\renderer\\Map.js","node_modules\\ol\\renderer\\canvas\\Map.js","node_modules\\ol\\renderer\\Layer.js","node_modules\\ol\\renderer\\canvas\\Layer.js","node_modules\\ol\\renderer\\canvas\\IntermediateCanvas.js","node_modules\\ol\\renderer\\canvas\\ImageLayer.js","node_modules\\ol\\TileRange.js","node_modules\\ol\\renderer\\canvas\\TileLayer.js","node_modules\\ol\\render\\ReplayGroup.js","node_modules\\ol\\render\\ReplayType.js","node_modules\\ol\\geom\\flat\\textpath.js","node_modules\\ol\\render\\canvas\\Instruction.js","node_modules\\ol\\render\\replay.js","node_modules\\ol\\render\\canvas\\Replay.js","node_modules\\ol\\render\\canvas\\ImageReplay.js","node_modules\\ol\\render\\canvas\\LineStringReplay.js","node_modules\\ol\\render\\canvas\\PolygonReplay.js","node_modules\\ol\\geom\\flat\\straightchunk.js","node_modules\\ol\\style\\TextPlacement.js","node_modules\\ol\\render\\canvas\\TextReplay.js","node_modules\\ol\\render\\canvas\\ReplayGroup.js","node_modules\\ol\\renderer\\vector.js","node_modules\\ol\\renderer\\canvas\\VectorLayer.js","node_modules\\ol\\layer\\VectorTileRenderType.js","node_modules\\ol\\renderer\\canvas\\VectorTileLayer.js","node_modules\\ol\\Map.js","node_modules\\ol\\layer\\TileProperty.js","node_modules\\ol\\layer\\Tile.js","node_modules\\ol\\style\\Atlas.js","node_modules\\ol\\style\\AtlasManager.js","node_modules\\ol\\style\\IconAnchorUnits.js","node_modules\\ol\\style\\IconImage.js","node_modules\\ol\\style\\IconOrigin.js","node_modules\\ol\\style\\Icon.js","node_modules\\ol\\style\\Text.js","node_modules\\ol\\style.js","node_modules\\ol\\format\\Feature.js","node_modules\\ol\\xml.js","node_modules\\ol\\format\\XMLFeature.js","node_modules\\ol\\format\\xsd.js","node_modules\\ol\\geom\\GeometryCollection.js","node_modules\\ol\\format\\KML.js","node_modules\\ol\\Tile.js","node_modules\\ol\\ImageTile.js","node_modules\\ol\\tilecoord.js","node_modules\\ol\\TileCache.js","node_modules\\ol\\reproj.js","node_modules\\ol\\reproj\\Triangulation.js","node_modules\\ol\\reproj\\Tile.js","node_modules\\ol\\tileurlfunction.js","node_modules\\ol\\tilegrid\\TileGrid.js","node_modules\\ol\\tilegrid.js","node_modules\\ol\\source\\Tile.js","node_modules\\ol\\source\\TileEventType.js","node_modules\\ol\\source\\UrlTile.js","node_modules\\ol\\source\\TileImage.js","node_modules\\ol\\source\\XYZ.js","node_modules\\ol\\source\\OSM.js","node_modules\\ol\\source\\Stamen.js","index.js"],"names":["inherits","childCtor","parentCtor","prototype","Object","create","constructor","getUid","uidCounter_","obj","ol_uid","VERSION","AssertionError","code","path","split","message","name","Error","clear","getValues","isEmpty","assign","target","var_sources","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","object","property","values","push","bindListener","findListener","getListeners","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","listenerObj","boundListener","evt","listener","bindTo","callOnce","call","listeners","opt_this","opt_setDeleteIndex","deleteIndex","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","keys","opt_once","addEventListener","indexOf","splice","TRUE","FALSE","UNDEFINED","Disposable","disposed_","dispose","disposeInternal","Event","stopPropagation","preventDefault","propagationStopped","EventTarget","pendingRemovals_","dispatching_","listeners_","dispatchEvent","event","propagate","pendingRemovals","hasListener","opt_type","index","Observable","unByKey","revision_","Array","isArray","changed","EventType","CHANGE","getRevision","on","len","once","un","BaseObject","getChangeEventType","ObjectEvent","oldValue","opt_values","values_","setProperties","changeEventTypeCache","get","value","getKeys","getProperties","notify","eventType","ObjectEventType","PROPERTYCHANGE","set","opt_silent","unset","Collection","Property","CollectionEvent","opt_element","element","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","arr","forEach","f","array","getArray","item","LENGTH","insertAt","elem","CollectionEventType","ADD","removeAt","n","remove","prev","REMOVE","setAt","j","opt_except","MapEvent","map","opt_frameState","frameState","MapBrowserEvent","browserEvent","opt_dragging","originalEvent","pixel","getEventPixel","coordinate","getCoordinateFromPixel","dragging","EXTENSIONS","getContext","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINK_STATUS","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","COMPILE_STATUS","FRAMEBUFFER","CONTEXT_IDS","canvas","opt_attributes","context","e","DEBUG","MAX_TEXTURE_SIZE","HAS","window","gl","document","createElement","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","ua","navigator","userAgent","toLowerCase","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","CANVAS_LINE_DASH","has","setLineDash","GEOLOCATION","TOUCH","POINTER","MSPOINTER","msPointerEnabled","CLICK","DBLCLICK","MapBrowserPointerEvent","pointerEvent","EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","MouseSource","mousedown","mousemove","mouseup","mouseover","mouseout","pointerMap","lastTouches","POINTER_ID","POINTER_TYPE","DEDUP_DIST","prepareEvent","inEvent","cloneEvent","pd","pointerId","isPrimary","pointerType","isEventSimulatedFromTouch_","lts","x","clientX","y","clientY","t","l","dx","Math","abs","dy","toString","cancel","down","move","p","button","up","cleanupMouse","enterOver","leaveOut","MsSource","msPointerDown","msPointerMove","msPointerUp","msPointerOut","msPointerOver","msPointerCancel","msGotPointerCapture","msLostPointerCapture","POINTER_TYPES","prepareEvent_","cleanup","makeEvent","NativeSource","pointerDown","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","gotPointerCapture","lostPointerCapture","fireNativeEvent","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","view","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","width","height","tiltX","tiltY","hwTimestamp","HAS_BUTTONS","which","ev","MouseEvent","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","a","b","includes","linearFindNearest","direction","reverseSubArray","begin","end","tmp","data","extension","find","func","equals","arr1","arr2","len1","stableSort","compareFnc","sort","findIndex","every","el","idx","isSorted","opt_func","opt_strict","compare","currentVal","res","TouchSource","mouseSource","touchstart","touchmove","touchend","touchcancel","firstTouchId_","clickCount_","resetId_","dedupTimeout_","CLICK_COUNT_TIMEOUT","isPrimaryTouch_","inTouch","identifier","setPrimaryTouch_","count","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","setTimeout","resetClickCountHandler_","bind","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","processTouches_","inFunction","touches","slice","changedTouches","pointer","findTouch_","touchList","searchId","touch","vacuumTouches_","d","out","cancelOut_","dedupSynthMouse_","overDown_","over","enter","moveOverOut_","outEvent","outTarget","upOut_","leave","cleanUpPointer_","lt","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","CLONE_PROPS","registerSource","register_","s","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","events","eventName","eventCopy","fireEvent","PointerEventType","POINTERDOWN","POINTERMOVE","POINTERUP","POINTERENTER","POINTERLEAVE","POINTEROVER","POINTEROUT","POINTERCANCEL","contains_","container","contained","contains","inType","wrapMouseEvent","MapBrowserEventHandler","moveTolerance","map_","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","MapBrowserEventType","SINGLECLICK","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","POINTERDRAG","assert","assertion","errorCode","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","DROP","Infinity","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","apply","getKey","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","handleTileChange","getTilesLoading","state","getState","TileState","LOADED","ERROR","EMPTY","ABORT","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","abortedTiles","IDLE","load","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","clamp","roundUpToPowerOfTwo","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","min","max","cosh","exp","pow","ceil","log","LN2","x1","y1","x2","y2","mat","maxRow","maxEl","r","absValue","coef","k","m","angleInRadians","PI","angleInDegrees","createExtent","none","extent","center","createSnapToResolutions","createSnapToPower","resolutions","resolution","delta","z","floor","power","maxResolution","opt_maxLevel","offset","oldLevel","newLevel","disable","createSnapToN","createSnapToZero","rotation","theta","opt_tolerance","tolerance","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","parseInt","n2","add","closestOnCircle","closestOnSegment","createStringXY","degreesToStringHDMS","format","rotate","scale","distance","squaredDistanceToSegment","toStringHDMS","toStringXY","circle","getRadius","getCenter","x0","y0","sqrt","segment","start","along","opt_fractionDigits","hemispheres","degrees","normalizedDegrees","dflPrecision","precision","deg","sec","charAt","template","replace","coordinate1","coordinate2","angle","cosAngle","cos","sinAngle","sin","coord1","coord2","easeIn","easeOut","inAndOut","linear","upAndDown","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getArea","getBottomLeft","getBottomRight","getCorner","getEnlargedArea","getForViewAndSize","getHeight","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","getWidth","intersects","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","coordinates","_boundingExtentXYs","xs","ys","opt_extent","extent1","extent2","minX","minY","maxX","maxY","relationship","Relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","flatCoordinates","stride","rings","callback","val","area","corner","Corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x3","y3","intersection","deltaX","deltaY","startRel","endRel","startX","startY","endX","endY","slope","transformFn","transform2D","transform","opt_dest","dest","anchor","anchorX","anchorY","sx","sy","translate","getDistance","DEFAULT_RADIUS","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","getLengthInternal","geometry","projection","getType","GeometryType","GEOMETRY_COLLECTION","coords","jj","POINT","MULTI_POINT","LINE_STRING","LINEAR_RING","getCoordinates","MULTI_LINE_STRING","POLYGON","MULTI_POLYGON","geometries","getGeometries","getAreaInternal","bearing","lon1","dByR","lat","asin","lon","Units","METERS_PER_UNIT","DEGREES","FEET","METERS","USFEET","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","getPointResolutionFunc","fromEPSG4326","toEPSG4326","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","EPSG3857Projection","point","PROJECTIONS","input","opt_output","opt_dimension","dimension","halfSize","tan","atan","EPSG4326Projection","opt_axisOrientation","cache","transforms","destination","sourceCode","destinationCode","addCommon","cloneTransform","identityTransform","addProjection","addProjections","addEquivalentProjections","addEquivalentTransforms","clearAllProjections","createProjection","createTransformFromCoordinateTransform","addCoordinateTransforms","fromLonLat","toLonLat","equivalent","getTransformFromProjections","getTransform","transformExtent","transformWithProjections","projections","projectionLike","opt_units","pointResolution","getter","vertices","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","defaultCode","coordTransform","forward","inverse","sourceProj","destProj","opt_projection","lonLat","equalUnits","transformFunc","sourceProjection","destinationProjection","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","reset","multiply","setFromArray","compose","invert","determinant","tmp_","transform1","transform2","a1","b1","d1","e1","f1","a2","b2","d2","e2","f2","c","dx1","dy1","dx2","dy2","det","Geometry","extentRevision_","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","tmpTransform","closestPointXY","closestPoint","minSquaredDistance","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","opt_sy","opt_anchor","simplify","getSimplifiedGeometry","squaredTolerance","intersectsExtent","TILE_PIXELS","inCoordinates","outCoordinates","pixelExtent","projectedExtent","SimpleGeometry","getStrideForLayout","transformGeom2D","layout","GeometryLayout","XY","getLayoutForStride","XYZ","XYZM","XYM","simpleGeometry","getFlatCoordinates","getStride","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","simplifiedFlatCoordinates","setFlatCoordinatesInternal","setCoordinates","opt_layout","setLayout","nesting","linearRing","twiceArea","linearRings","ends","linearRingss","endss","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","opt_ends","deflateMultiCoordinatesArray","coordinatesss","opt_endss","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","inflateMultiCoordinatesArray","opt_coordinatesss","simplifyLineString","douglasPeucker","douglasPeuckerArray","douglasPeuckerMultiArray","radialDistance","snap","quantize","quantizeArray","quantizeMultiArray","highQuality","opt_simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","simplifiedEnds","simplifiedEndss","round","LinearRing","maxDelta_","maxDeltaRevision_","setFlatCoordinates","simplifiedLinearRing","Point","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","getInteriorPointOfArray","getInteriorPointsOfMultiArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","isNaN","interiorPoints","point1","point2","ret","intersectsLineString","intersectsLineStringArray","intersectsLinearRing","intersectsLinearRingArray","intersectsLinearRingMultiArray","coordinatesExtent","linearRingIsClockwise","linearRingIsOriented","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","edge","opt_right","right","isClockwise","circular","fromExtent","fromCircle","makeRegular","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","opt_n","opt_sphereRadius","polygon","opt_sides","opt_angle","sides","arrayLength","getEnds","startAngle","appendLinearRing","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","simplifiedPolygon","View","createCenterConstraint","createResolutionConstraint","createRotationConstraint","isNoopAnimation","DEFAULT_MIN_ZOOM","hints_","animations_","updateAnimationKey_","updateAnimations_","projection_","applyOptions_","centerNone","resolutionConstraint","minResolution","minZoom","maxZoom","zoomFactor","defaultMaxResolution","defaultMinResolution","constraint","enableRotation","constrainRotation","rotationNone","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","properties","ViewProperty","CENTER","resolutionConstraintInfo","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","rotationConstraint","constraints_","RESOLUTION","zoom","constrainResolution","Number","getResolution","ROTATION","options_","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","animationCount","isDef","setCenter","setZoom","setRotation","Date","now","series","duration","easing","complete","setHint","ViewHint","ANIMATING","getAnimating","getInteracting","INTERACTING","cancelAnimations","more","seriesComplete","elapsed","fraction","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","getSizeFromViewport_","selector","querySelector","metrics","getComputedStyle","constrainCenter","opt_delta","opt_direction","getConstraints","getHints","opt_hints","calculateExtent","opt_size","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","getProjection","getResolutions","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","nearest","getResolutionForZoom","fit","geometryOrExtent","CIRCLE","padding","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerX","setResolution","centerOn","position","centerY","hint","createCanvasContext2D","opt_width","opt_height","outerWidth","offsetWidth","style","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","BaseLayer","LayerProperty","OPACITY","opacity","VISIBLE","visible","Z_INDEX","zIndex","MAX_RESOLUTION","MIN_RESOLUTION","state_","getLayerState","getOpacity","sourceState","getSourceState","getVisible","getZIndex","getLayersArray","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","LayerGroup","baseOptions","layers","layersListenerKeys_","listenerKeys_","LAYERS","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","id","layersArray","layer","collectionEvent","states","pos","ownLayerState","layerState","SourceState","READY","num","hasArea","ratio","toSize","PluggableMap","optionsInternal","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","pixelRatio_","pixelRatio","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","overflow","msTouchAction","touchAction","overlayContainer_","appendChild","overlayContainerStopEvent_","overlayEvents","MOUSEDOWN","TOUCHSTART","MSPOINTERDOWN","MOUSEWHEEL","WHEEL","mapBrowserEventHandler_","handleMapBrowserEvent","keyboardEventTarget_","keyboardEventTarget","keyHandlerKeys_","CONTEXTMENU","handleBrowserEvent","controls","interactions","overlays_","overlays","overlayIdIndex_","renderer_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","MapProperty","LAYERGROUP","handleLayerGroupChanged_","VIEW","handleViewChanged_","SIZE","handleSizeChanged_","TARGET","handleTargetChanged_","control","setMap","interaction","addOverlayInternal_","overlay","getId","getElementById","layerGroup","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","getOverlays","RESIZE","setTarget","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","feature","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","left","top","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getRenderer","getView","getOverlayContainer","getOverlayContainerStopEvent","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","hints","viewHints","postRenderFunctions","render","targetElement","KEYDOWN","KEYPRESS","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","time","viewState","previousFrameState","layerStatesArray","layerStates","pixelResolution","renderFrame","MapEventType","MOVESTART","MOVEEND","POSTRENDER","setLayerGroup","setSize","setView","skipFeature","featureUid","computedStyle","parseFloat","unskipFeature","Control","target_","listenerKeys","getMap","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","font","family","fontFamily","Layer","visibleAtResolution","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","SOURCE","handleSourcePropertyChange_","setSource","getSource","handleSourceChange_","RenderEventType","PRECOMPOSE","managed","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","tipLabel","collapseLabel","collapseLabel_","textContent","label","label_","activeLabel","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","mapEvent","updateElement_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","display","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","Rotate","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","msTransform","webkitTransform","resetNorth_","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","newResolution","defaults","zoomOptions","rotateOptions","attribution","attributionOptions","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","Interaction","pan","rotateWithoutConstraints","zoomByDelta","zoomWithoutConstraints","setActive","opt_duration","currentRotation","InteractionProperty","ACTIVE","active","DoubleClickZoom","delta_","stopEvent","altKeyOnly","altShiftKeysOnly","activeElement","always","click","mouseActionButton","never","singleClick","doubleClick","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","primaryAction","PointerInteraction","centroid","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","handleDownEvent_","handleDragEvent_","handleMoveEvent_","handleUpEvent_","handlingDownUpSequence","trackedPointers_","targetPointers","pointerEvents","isPointerDraggingEvent","updateTrackedPointers_","handledUp","handled","shouldStopEvent","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","condition_","condition","noKinetic_","centerpx","DragRotate","lastAngle_","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","setPixels","createOrUpdateGeometry","getGeometry","DragBox","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","BOXDRAG","onBoxEnd","BOXEND","BOXSTART","DragZoom","out_","mapExtent","boxPixelExtent","factor","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","keyCode","KeyCode","DOWN","UP","mapUnitsDelta","KeyboardZoom","charCode","charCodeAt","MouseWheelZoom","MAX_DELTA","Mode","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","trackpadZoomBuffer_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","TRACKPAD","decrementInteractingHint_","rebound","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","DragAndDrop","DragAndDropEventType","DragAndDropEvent","file","opt_features","formatConstructors_","formatConstructors","dropListenKeys_","source_","handleDrop","files","dataTransfer","reader","FileReader","LOAD","handleResult_","readAsText","handleStop","dropEffect","result","formatConstructor","tryReadFeatures_","addFeatures","ADD_FEATURES","registerListeners_","dropArea","DRAGENTER","DRAGOVER","unregisterListeners_","text","readFeatures","DragRotateAndZoom","lastMagnitude_","magnitude","angleDelta","asString","asArray","normalize","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromNamed","body","rgb","fromString","MAX_CACHE_SIZE","cacheSize","fromStringInternal_","g","exec","hasAlpha","substr","asColorLike","isColorLike","CanvasPattern","CanvasGradient","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","canExpireCache","CLEAR","containsKey","entry","value_","key_","newer","older","peekLast","peekLastKey","peekFirstKey","prune","measureTextWidth","rotateAtOffset","drawImage","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkedFonts","measureContext","textHeights","checkFont","retries","checked","referenceFonts","interval","referenceWidth","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","fontSpec","fontFamilies","setInterval","measureTextHeight","span","heights","margin","offsetX","offsetY","resetTransform","image","originX","originY","w","h","alpha","globalAlpha","setTransform","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","snapToPixel_","snapToPixel","getRotateWithView","getScale","getSnapToPixel","getAnchor","getImage","getHitDetectionImage","getImageState","getImageSize","getHitDetectionImageSize","getOrigin","setRotateWithView","setScale","setSnapToPixel","listenImageChange","thisArg","unlistenImageChange","RegularShape","checksums_","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","imageSize_","hitDetectionImageSize_","atlasManager_","atlasManager","getFill","getPoints","getRadius2","getStroke","ImageState","imageSize","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","draw_","createHitDetectionCanvas_","hasCustomHitDetectionImage","renderHitDetectionCallback","drawHitDetectionCanvas_","getChecksum","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","fillStyle","lineWidth","closePath","strokeChecksum","fillChecksum","recalculate","checksum","CircleStyle","setRadius","Fill","color_","checksum_","setColor","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","toFunction","createDefaultStyle","createEditingStyle","geometryFunction_","defaultGeometryFunction","setGeometry","image_","renderer","text_","zIndex_","styleFunction","styles","getText","setRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","defaultStyles","white","blue","concat","Feature","createStyleFunction","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","setGeometryName","getGeometryName","getStyle","setStyle","getStyleFunction","handleGeometryChange_","setId","Circle","setCenterAndRadius","getRadiusSquared_","circleExtent","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","pointY","cumulativeLengths","o","extrapolate","lo","hi","m0","m1","interpolate","lineStringLength","linearRingLength","perimeter","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getFlatMidpoint","simplifiedLineString","MultiLineString","appendLineString","multiLineString","opt_interpolate","getLineString","getLineStrings","lineStrings","getFlatMidpoints","midpoints","midpoint","simplifiedMultiLineString","setLineStrings","MultiPoint","appendPoint","multiPoint","getPoint","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","multiPolygon","newEndss","getEndss","getFlatInteriorPoints","getInteriorPoints","simplifiedMultiPolygon","getPolygon","prevEnds","getPolygons","polygons","lastEnds","setPolygons","VectorLayer","RenderType","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","renderMode","VectorRenderType","VECTOR","LayerType","getDeclutter","setDeclutter","getRenderBuffer","getRenderOrder","RENDER_ORDER","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","getRenderMode","loadFeaturesXhr","xhr","url","success","failure","XMLHttpRequest","open","FormatType","responseType","onload","status","JSON","TEXT","responseText","XML","responseXML","DOMParser","parseFromString","response","featureProjection","readProjection","getLastExtent","onerror","send","dataProjection","all","bbox","getZForResolution","tileRange","getTileRangeForExtentAndZ","extents","tileCoord","getTileCoordExtent","Source","attributions_","adaptAttributions_","wrapX_","wrapX","attributionLike","getWrapX","refresh","setAttributions","setState","RBush","opt_maxEntries","rbush_","items_","insert","items","uid","getAll","getInExtent","search","forEach_","forEachInExtent","rbush","VectorSource","VectorSourceEvent","opt_feature","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","ADDFEATURE","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","REMOVEFEATURE","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeatures","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","CHANGEFEATURE","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed","setLoader","Draw","createRegularPolygon","createBox","DrawEventType","DrawEvent","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","features_","snapTolerance_","snapTolerance","type_","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","Constructor","mode","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","getDefaultStyleFunction","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","pass","handlePointerEvent","addToDrawing_","startDrawing_","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","finishCoordinate","finishPixel","updateSketchFeatures_","DRAWSTART","sketchLineGeom","ring","removeLastPoint","sketchFeature","DRAWEND","sketchFeatures","overlaySource","ExtentInteraction","ExtentEventType","ExtentInteractionEvent","EXTENTCHANGED","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","getDefaultExtentStyleFunction","vertexOverlay_","pointerStyle","getDefaultPointerStyleFunction","vertex","snapToVertex_","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","pixelCoordinate","createOrUpdatePointerFeature_","fixedPoint","fixedP1","fixedP2","getSegments","sortByDistance","segments","closestSegment","vertexPixel","pixel1","pixel2","squaredDist1","squaredDist2","dist","createOrUpdateExtentFeature_","extentFeature","vertexFeature","Modify","ModifyEventType","ModifyEvent","mapBrowserPointerEvent","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","CIRCLE_CENTER_INDEX","CIRCLE_CIRCUMFERENCE_INDEX","compareIndexes","handlePointerAtPixel_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","segmentDataMatch","depth","closestVertex","closestOnSegmentData","willModifyFeatures_","insertVertex_","dragSegment","segmentData","setGeometryCoordinates_","createOrUpdateVertexFeature_","centerSegmentData","featureSegments","circumferenceSegmentData","MODIFYEND","removePoint","pointDistanceToSegmentDataSquared","pointCoordinates","circleGeometry","distanceToCenterSquared","distanceToCircumference","MODIFYSTART","removeFeature_","removeFeatureSegmentData_","rBush","nodesToRemove","lines","kk","getGeometriesArray","box","nodes","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","dragSegments","segmentsByFeature","deleted","component","newIndex","Select","SelectEventType","SelectEvent","selected","deselected","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureOverlay","featureOverlay_","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","SELECT","getHitTolerance","getLayer","setHitTolerance","currentMap","selectedFeatures","Snap","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","pixelCoordinate_","sortByDistance_","snapTo","snapped","featuresToUpdate","updateFeature_","deltaA","opt_listen","register","feature_uid","segmentWriter","forEachFeatureAdd_","forEachFeatureRemove_","getFeatures_","opt_unlisten","unregister","lowerLeft","upperRight","snappedToVertex","isCircle","Translate","TranslateEventType","TranslateEvent","lastCoordinate_","lastFeature_","handleActiveChanged_","featuresAtPixel_","TRANSLATESTART","TRANSLATEEND","newCoordinate","geom","TRANSLATING","oldMap","default","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","ImageBase","getPixelRatio","ImageCanvas","opt_loader","error_","getError","handleLoad_","err","LOADING","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","VectorContext","drawCustom","drawGeometry","drawCircle","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterGroup","setTextStyle","textStyle","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageSnapToPixel_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","drawImages_","pixelCoordinates","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","moveTo","drawRings_","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","textAlign","textBaseline","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","getFont","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","getTextAlign","textTextBaseline","getTextBaseline","IconImageCache","cache_","cacheSize_","maxCacheSize_","src","crossOrigin","expire","iconImage","maxCacheSize","shared","MapRenderer","sortByZIndex","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","expireIconCache","state1","state2","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","skippedFeatureUids","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","CanvasMapRenderer","layerRendererConstructors","insertBefore","childNodes","dispatchComposeEvent_","composeEvent","clearRect","save","prepareFrame","composeFrame","restore","POSTCOMPOSE","numLayers","forEachLayerAtCoordinate","ctor","LayerRenderer","layer_","createLoadedTileFinder","tiles","forEachLoadedTile","handleImageChange_","renderIfReadyAndVisible","loadImage","imageState","scheduleExpireCache","tileSource","postRenderFunction","usedTiles","expireCache","updateUsedTiles","zKey","manageTilePyramid","currentZ","preload","opt_tileCallback","getTile","getTileCoordCenter","useTile","CanvasLayerRenderer","renderedResolution","clip","topLeft","topRight","bottomRight","bottomLeft","opt_transform","postCompose","preCompose","dispatchRenderEvent","RENDER","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","imageData","getImageData","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","IMAGE","mapRenderer","viewCenter","imageSource","vectorRenderer","renderedExtent","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","imageExtent","imageResolution","imagePixelRatio","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","TILE","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","getPreload","getInterimTile","sourceRevision","getTileGridForProjection","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","animatingOrInteracting","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","zs","currentScale","currentTilePixelSize","tileExtent","tileGutter","tilesToDraw","getGutter","tileCoordKey","getTileCoord","drawTileImage","gutter","transition","getOpaque","alphaChanged","endTransition","ReplayGroup","getReplay","replayType","drawTextOnPath","measure","startM","maxAngle","reverse","numChars","previousAngle","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","fillInstruction","FILL","strokeInstruction","STROKE","beginPathInstruction","BEGIN_PATH","closePathInstruction","CLOSE_PATH","ORDER","ReplayType","DEFAULT","TEXT_ALIGN","CanvasReplay","maxExtent","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p1","p2","p3","p4","setStrokeStyle_","replayImage_","declutterGroup","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastCoord","nextCoord","skipped","lastRel","nextRel","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayBegin","replayEndss","myEnds","CanvasInstruction","CUSTOM","endGeometry","BEGIN_GEOMETRY","origin","repeatSize","instruction","renderDeclutter_","groupCount","collides","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","skipFeatures","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","DRAW_IMAGE","backgroundFill","backgroundStroke","DRAW_CHARS","baseline","fillKey","strokeKey","textKey","pathLength","textLength","textStates","parts","cc","chars","part","END_GEOMETRY","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","replay","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","CanvasImageReplay","declutterGroup_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","chunkStart","acos","m12","m23","x12","y12","x23","y23","chunkEnd","chunkM","CanvasTextReplay","measureTextWidths","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","widths","numLines","currentWidth","geometryType","placement","TextPlacement","LINE","flatOffset","flatEnd","oo","range","drawChars_","drawTextImage_","align","lineHeight","renderWidth","leftRight","getOverflow","getMaxAngle","getPlacement","getBackgroundFill","getBackgroundStroke","getPadding","CanvasReplayGroup","getCircleArray","replayDeclutter","BATCH_CONSTRUCTORS","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","resolution_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","circleArrayCache","fillCircleArrayRowToMiddle","arraySize","error","declutterReplays","zz","replayData","addDeclutter","group","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","contextSize","hitExtent","mask","declutteredFeatures","zIndexKey","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","defaultOrder","getSquaredTolerance","getTolerance","renderFeature","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","feature1","feature2","replayGroup","circleReplay","textReplay","loading","renderFeatureInternal","renderGeometry","lineStringReplay","polygonReplay","imageReplay","CanvasVectorLayerRenderer","vectorLayer","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","handleFontsChanged_","vectorSource","clipExtent","drawOffsetX","replayContext","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","handleStyleImageChange_","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","dirty","CanvasVectorTileLayerRenderer","IMAGE_REPLAYS","VECTOR_REPLAYS","renderedLayerRevision_","tmpTransform_","VectorTileRenderType","VECTOR_TILE","createReplayGroup_","renderTileImage_","layerRevision","revision","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","tt","tileKeys","sourceTile","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","setProjection","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","clips","worldOffset","currentClip","renderedTileRevision","wrappedTileCoord","pixelScale","Map","TileLayer","setPreload","setUseInterimTilesOnError","TileProperty","PRELOAD","USE_INTERIM_TILES_ON_ERROR","Atlas","space","space_","emptyBlocks_","renderCallback","block","split_","newBlock1","newBlock2","updateBlocks_","args","AtlasManager","INITIAL_ATLAS_SIZE","MAX_ATLAS_SIZE","currentSize_","initialSize","maxSize_","maxSize","WEBGL_MAX_TEXTURE_SIZE","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","atlas","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","IconImage","Image","imageListenerKeys_","imageState_","src_","tainting_","determineTainting_","iconImageCache","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","ctx","imgData","putImageData","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","FRACTION","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","iconImage_","offset_","offsetOrigin_","offsetOrigin","iconImageSize","Text","DEFAULT_FILL_COLOR","font_","textAlign_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","transformWithOptions","FeatureFormat","defaultFeatureProjection","write","transformed","decimals","getReadOptions","adaptOptions","readFeature","readGeometry","writeFeature","writeFeatures","writeGeometry","createElementNS","getAllTextContent","getAllTextContent_","isDocument","isNode","getAttributeNS","parse","makeArrayExtender","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","makeObjectPropertySetter","makeChildAppender","makeArraySerializer","makeSimpleNodeFactory","makeSequence","makeStructureNS","parseNode","pushParseAndPop","serialize","pushSerializeAndPop","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","namespaceURI","qualifiedName","normalizeWhitespace","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","String","nodeValue","firstChild","nextSibling","Document","xml","valueReader","objectStack","opt_property","localName","nodeWriter","serializersNS","nodeFactory","serializers","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","orderedKeys","sequence","namespaceURIs","structure","opt_structureNS","structureNS","parsersNS","firstElementChild","nextElementSibling","parsers","parser","opt_keys","XMLFeature","xmlSerializer_","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","doc","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","readBoolean","readBooleanString","readDateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","readString","writeBooleanTextNode","writeCDATASection","writeDateTimeTextNode","writeDecimalTextNode","writeNonNegativeIntegerTextNode","writeStringTextNode","string","dateTime","trim","bool","createCDATASection","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","toPrecision","nonNegativeInteger","GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","cloneGeometries","clonedGeometries","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","KML","getDefaultFillStyle","getDefaultImageStyle","getDefaultStrokeStyle","getDefaultTextStyle","getDefaultStyle","getDefaultStyleArray","readFlatCoordinates","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","createStyleDefaults","PIXELS","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","GX_NAMESPACE_URIS","NAMESPACE_URIS","SCHEMA_LOCATION","ICON_ANCHOR_UNITS_MAP","createNameStyleFunction","foundStyle","textOffset","imageScale","foundText","nameStyle","createFeatureStyleFunction","styleUrl","sharedStyles","drawName","findStyle","styleValue","readColor","hexColor","re","readURI","baseURI","location","href","URL","readVec2","xunits","getAttribute","yunits","readScale","STYLE_MAP_PARSERS","pairDataParser","readStyleMapValue","ICON_STYLE_PARSERS","readIcon","iconStyleParser","styleObject","IconObject","drawIcon","hotSpot","test","heading","LABEL_STYLE_PARSERS","labelStyleParser","LINE_STYLE_PARSERS","lineStyleParser","POLY_STYLE_PARSERS","polyStyleParser","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","gxCoordParser","gxTrackObject","GX_MULTITRACK_GEOMETRY_PARSERS","readGxTrack","readGxMultiTrack","GX_TRACK_PARSERS","whenParser","whens","ICON_PARSERS","iconObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","readLineString","readLinearRing","MULTI_GEOMETRY_PARSERS","readMultiGeometry","readPoint","readPolygon","multiGeometry","homogeneous","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIsParser","outerBoundaryIsParser","flatLinearRings","STYLE_PARSERS","readStyle","setCommonGeometryProperties","extrudes","tessellates","altitudeModes","hasExtrude","hasTessellate","hasAltitudeMode","DATA_PARSERS","dataParser","featureObject","displayName","EXTENDED_DATA_PARSERS","schemaDataParser","extendedDataParser","REGION_PARSERS","latLonAltBoxParser","lodParser","regionParser","PAIR_PARSERS","pairObject","placemarkStyleMapParser","styleMapValue","placemarkObject","SCHEMA_DATA_PARSERS","simpleDataParser","LAT_LON_ALT_BOX_PARSERS","regionObject","LOD_PARSERS","lodObject","INNER_BOUNDARY_IS_PARSERS","flatLinearRing","OUTER_BOUNDARY_IS_PARSERS","NETWORK_LINK_PARSERS","linkParser","LINK_PARSERS","when","PLACEMARK_PARSERS","writeColorTextNode","rgba","abgr","hex","writeCoordinatesTextNode","readDocumentOrFolder_","readPlacemark_","readSharedStyle_","readSharedStyleMap_","styleUri","fs","readName","readNameFromDocument","readNameFromNode","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","EXTENDEDDATA_NODE_SERIALIZERS","writeDataNode","writeDataNodeValue","writeDataNodeName","pair","DOCUMENT_SERIALIZERS","writePlacemark","DOCUMENT_NODE_FACTORY","writeDocument","DATA_NODE_FACTORY","writeExtendedData","namesAndValues","names","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","writeIcon","icon","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","writeVec2","writeScaleTextNode","writeIconStyle","iconProperties","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","writeLabelStyle","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","writeLineStyle","GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","factory","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","writeStyle","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","v","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","outerRing","shift","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","writePolyStyle","STYLE_SEQUENCE","STYLE_SERIALIZERS","vec2","KML_SEQUENCE","KML_SERIALIZERS","kml","xmlnsUri","setAttributeNS","Tile","interimTile","transition_","transitionStarts_","refreshInterimChain","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","opt_tileCoord","getKeyZXY","fromKey","hash","quadKey","digits","fromCharCode","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","p0","Triangulation","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","createFromTemplate","createFromTemplates","createFromTileUrlFunctions","nullTileUrlFunction","expandUrl","zRegEx","xRegEx","yRegEx","dashYRegEx","templates","tileUrlFunctions","urls","match","startCharCode","stopCharCode","stop","TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","tmpTileCoord","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","getForProjection","createForExtent","createXYZ","createForProjection","extentFromProjection","worldsAway","opt_maxZoom","opt_tileSize","opt_corner","resolutionsFromExtent","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","TileSourceEvent","UrlTile","tileUrlFunction","fixedTileUrlFunction","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","TileEventType","TILELOADSTART","TILELOADERROR","TILELOADEND","setTileLoadFunction","opt_key","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","imageTile","usedTileCache","getGutterInternal","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","OSM","ATTRIBUTION","Stamen","ATTRIBUTIONS","OSM_ATTRIBUTION","LayerConfig","ProviderConfig","provider","providerConfig","layerConfig","local","getTime","getTimezoneOffset","getHours","getMinutes","$","tooltip","displayFeatureInfo","css","attr","flightsSource","then","json","flightsData","flights","flight","from","to","arcLine","GreatCircle","Arc","line","animateFlights","flightsLayer","pointsPerMs","elapsedPoints","maxIndex","currentLine","addLater","flightSearch","FlightSearchAPI","params","endpoint","requestAPI","action","request","onreadystatechange","readyState","successCallback","flug","leg","airportFrom","CityName","airportTo","latFrom","PositionLat","lonFrom","PositionLon","latTo","lonTo","schedule","depTime","ScheduledDepartureTime","arrTime","ScheduledArrivalTime","Id","CodeIATA","showOverlay","startId","mapAirportCodeToName","mapAirportCodeToId","destinationId","mapAirportCodeToLon","mapAirportCodeToLat","hideOverlay","addListItemRoute","departureTime","arrivalTime","listItem","newListItem","cloneNode","getElementsByClassName","innerText","addListItemAirport","city","airportCodes","airportNames","airportId","airportLon","airportLat"],"mappings":"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","file":"FS2.fc7ace23.map","sourceRoot":"..","sourcesContent":["/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '5.0.3';\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION, inherits} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error}\n * @constructor\n * @extends {Error}\n * @param {number} code Error code.\n */\nconst AssertionError = function(code) {\n\n  const path = VERSION.split('-')[0];\n\n  /**\n   * @type {string}\n   */\n  this.message = 'Assertion failed. See https://openlayers.org/en/' + path +\n      '/doc/errors/#' + code + ' for details.';\n\n  /**\n   * Error code. The meaning of the code can be found on\n   * {@link https://openlayers.org/en/latest/doc/errors/} (replace `latest` with\n   * the version found in the OpenLayers script's header comment if a version\n   * other than the latest is used).\n   * @type {number}\n   * @api\n   */\n  this.code = code;\n\n  this.name = 'AssertionError';\n\n};\n\ninherits(AssertionError, Error);\n\nexport default AssertionError;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n *\n * @see https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {EventTarget|module:ol/events/EventTarget} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array.<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object.<string, Array.<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * {@link https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html}\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {undefined} Nothing.\n */\nexport function UNDEFINED() {}\n","/**\n * @module ol/Disposable\n */\nimport {UNDEFINED} from './functions.js';\n\n/**\n * Objects that need to clean up after themselves.\n * @constructor\n */\nconst Disposable = function() {};\n\n/**\n * The object has already been disposed.\n * @type {boolean}\n * @private\n */\nDisposable.prototype.disposed_ = false;\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function() {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = UNDEFINED;\nexport default Disposable;\n","/**\n * @module ol/events/Event\n */\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * @see {@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface}\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/EventTarget~EventTarget}.\n *\n * @constructor\n * @param {string} type Type.\n */\nconst Event = function(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n\n};\n\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault =\n\n  /**\n   * Stop event propagation.\n   * @function\n   * @api\n   */\n  Event.prototype.stopPropagation = function() {\n    this.propagationStopped = true;\n  };\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n","/**\n * @module ol/events/EventTarget\n */\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {UNDEFINED} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/EventTarget} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * @see {@link https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget}\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n *\n * @constructor\n * @extends {module:ol/Disposable}\n */\nconst EventTarget = function() {\n\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.pendingRemovals_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, number>}\n   */\n  this.dispatching_ = {};\n\n  /**\n   * @private\n   * @type {!Object.<string, Array.<module:ol/events~ListenerFunction>>}\n   */\n  this.listeners_ = {};\n\n};\n\ninherits(EventTarget, Disposable);\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.addEventListener = function(type, listener) {\n  let listeners = this.listeners_[type];\n  if (!listeners) {\n    listeners = this.listeners_[type] = [];\n  }\n  if (listeners.indexOf(listener) === -1) {\n    listeners.push(listener);\n  }\n};\n\n\n/**\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|module:ol/events/Event|\n *     string} event Event or event type.\n * @return {boolean|undefined} `false` if anyone called preventDefault on the\n *     event object or if any of the listeners returned false.\n */\nEventTarget.prototype.dispatchEvent = function(event) {\n  const evt = typeof event === 'string' ? new Event(event) : event;\n  const type = evt.type;\n  evt.target = this;\n  const listeners = this.listeners_[type];\n  let propagate;\n  if (listeners) {\n    if (!(type in this.dispatching_)) {\n      this.dispatching_[type] = 0;\n      this.pendingRemovals_[type] = 0;\n    }\n    ++this.dispatching_[type];\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    --this.dispatching_[type];\n    if (this.dispatching_[type] === 0) {\n      let pendingRemovals = this.pendingRemovals_[type];\n      delete this.pendingRemovals_[type];\n      while (pendingRemovals--) {\n        this.removeEventListener(type, UNDEFINED);\n      }\n      delete this.dispatching_[type];\n    }\n    return propagate;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nEventTarget.prototype.disposeInternal = function() {\n  unlistenAll(this);\n};\n\n\n/**\n * Get the listeners for a specified event type. Listeners are returned in the\n * order that they will be called in.\n *\n * @param {string} type Type.\n * @return {Array.<module:ol/events~ListenerFunction>} Listeners.\n */\nEventTarget.prototype.getListeners = function(type) {\n  return this.listeners_[type];\n};\n\n\n/**\n * @param {string=} opt_type Type. If not provided,\n *     `true` will be returned if this EventTarget has any listeners.\n * @return {boolean} Has listeners.\n */\nEventTarget.prototype.hasListener = function(opt_type) {\n  return opt_type ?\n    opt_type in this.listeners_ :\n    Object.keys(this.listeners_).length > 0;\n};\n\n\n/**\n * @param {string} type Type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n */\nEventTarget.prototype.removeEventListener = function(type, listener) {\n  const listeners = this.listeners_[type];\n  if (listeners) {\n    const index = listeners.indexOf(listener);\n    if (type in this.pendingRemovals_) {\n      // make listener a no-op, and remove later in #dispatchEvent()\n      listeners[index] = UNDEFINED;\n      ++this.pendingRemovals_[type];\n    } else {\n      listeners.splice(index, 1);\n      if (listeners.length === 0) {\n        delete this.listeners_[type];\n      }\n    }\n  }\n};\nexport default EventTarget;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/Observable\n */\nimport {inherits} from './util.js';\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @api\n */\nconst Observable = function() {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.revision_ = 0;\n\n};\n\ninherits(Observable, EventTarget);\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\n/**\n * Increases the revision counter and dispatches a 'change' event.\n * @api\n */\nObservable.prototype.changed = function() {\n  ++this.revision_;\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * Dispatches an event and calls all listeners listening for events\n * of this type. The event parameter can either be a string or an\n * Object with a `type` property.\n *\n * @param {{type: string,\n *     target: (EventTarget|module:ol/events/EventTarget|undefined)}|\n *     module:ol/events/Event|string} event Event object.\n * @function\n * @api\n */\nObservable.prototype.dispatchEvent;\n\n\n/**\n * Get the version number for this object.  Each time the object is modified,\n * its version number will be incremented.\n * @return {number} Revision.\n * @api\n */\nObservable.prototype.getRevision = function() {\n  return this.revision_;\n};\n\n\n/**\n * Listen for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listen(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Listen once for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @return {module:ol/events~EventsKey|Array.<module:ol/events~EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once = function(type, listener) {\n  if (Array.isArray(type)) {\n    const len = type.length;\n    const keys = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      keys[i] = listenOnce(this, type[i], listener);\n    }\n    return keys;\n  } else {\n    return listenOnce(this, /** @type {string} */ (type), listener);\n  }\n};\n\n\n/**\n * Unlisten for a certain type of event.\n * @param {string|Array.<string>} type The event type or array of event types.\n * @param {function(?): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un = function(type, listener) {\n  if (Array.isArray(type)) {\n    for (let i = 0, ii = type.length; i < ii; ++i) {\n      unlisten(this, type[i], listener);\n    }\n    return;\n  } else {\n    unlisten(this, /** @type {string} */ (type), listener);\n  }\n};\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid, inherits} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {string} key The property name.\n * @param {*} oldValue The old value for `key`.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst ObjectEvent = function(type, key, oldValue) {\n  Event.call(this, type);\n\n  /**\n   * The name of the property whose value is changing.\n   * @type {string}\n   * @api\n   */\n  this.key = key;\n\n  /**\n   * The old value. To get the new value use `e.target.get(e.key)` where\n   * `e` is the event object.\n   * @type {*}\n   * @api\n   */\n  this.oldValue = oldValue;\n\n};\ninherits(ObjectEvent, Event);\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @constructor\n * @extends {module:ol/Observable}\n * @param {Object.<string, *>=} opt_values An object with key-value pairs.\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nconst BaseObject = function(opt_values) {\n  Observable.call(this);\n\n  // Call {@link module:ol~getUid} to ensure that the order of objects' ids is\n  // the same as the order in which they were created.  This also helps to\n  // ensure that object properties are always added in the same order, which\n  // helps many JavaScript engines generate faster code.\n  getUid(this);\n\n  /**\n   * @private\n   * @type {!Object.<string, *>}\n   */\n  this.values_ = {};\n\n  if (opt_values !== undefined) {\n    this.setProperties(opt_values);\n  }\n};\n\ninherits(BaseObject, Observable);\n\n\n/**\n * @type {Object.<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\n/**\n * Gets a value.\n * @param {string} key Key name.\n * @return {*} Value.\n * @api\n */\nBaseObject.prototype.get = function(key) {\n  let value;\n  if (this.values_.hasOwnProperty(key)) {\n    value = this.values_[key];\n  }\n  return value;\n};\n\n\n/**\n * Get a list of object property names.\n * @return {Array.<string>} List of property names.\n * @api\n */\nBaseObject.prototype.getKeys = function() {\n  return Object.keys(this.values_);\n};\n\n\n/**\n * Get an object of all property names and values.\n * @return {Object.<string, *>} Object.\n * @api\n */\nBaseObject.prototype.getProperties = function() {\n  return assign({}, this.values_);\n};\n\n\n/**\n * @param {string} key Key name.\n * @param {*} oldValue Old value.\n */\nBaseObject.prototype.notify = function(key, oldValue) {\n  let eventType;\n  eventType = getChangeEventType(key);\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  eventType = ObjectEventType.PROPERTYCHANGE;\n  this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n};\n\n\n/**\n * Sets a value.\n * @param {string} key Key name.\n * @param {*} value Value.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.set = function(key, value, opt_silent) {\n  if (opt_silent) {\n    this.values_[key] = value;\n  } else {\n    const oldValue = this.values_[key];\n    this.values_[key] = value;\n    if (oldValue !== value) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\n/**\n * Sets a collection of key-value pairs.  Note that this changes any existing\n * properties and adds new ones (it does not remove any existing properties).\n * @param {Object.<string, *>} values Values.\n * @param {boolean=} opt_silent Update without triggering an event.\n * @api\n */\nBaseObject.prototype.setProperties = function(values, opt_silent) {\n  for (const key in values) {\n    this.set(key, values[key], opt_silent);\n  }\n};\n\n\n/**\n * Unsets a property.\n * @param {string} key Key name.\n * @param {boolean=} opt_silent Unset without triggering an event.\n * @api\n */\nBaseObject.prototype.unset = function(key, opt_silent) {\n  if (key in this.values_) {\n    const oldValue = this.values_[key];\n    delete this.values_[key];\n    if (!opt_silent) {\n      this.notify(key, oldValue);\n    }\n  }\n};\n\n\nexport default BaseObject;\n","/**\n * @module ol/Collection\n */\nimport {inherits} from './util.js';\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/CollectionEventType} type Type.\n * @param {*=} opt_element Element.\n */\nexport const CollectionEvent = function(type, opt_element) {\n\n  Event.call(this, type);\n\n  /**\n   * The element that is added to or removed from the collection.\n   * @type {*}\n   * @api\n   */\n  this.element = opt_element;\n\n};\n\ninherits(CollectionEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @fires module:ol/Collection~CollectionEvent\n * @param {Array.<T>=} opt_array Array.\n * @param {module:ol/Collection~Options=} opt_options Collection options.\n * @template T\n * @api\n */\nconst Collection = function(opt_array, opt_options) {\n\n  BaseObject.call(this);\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.unique_ = !!options.unique;\n\n  /**\n   * @private\n   * @type {!Array.<T>}\n   */\n  this.array_ = opt_array ? opt_array : [];\n\n  if (this.unique_) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      this.assertUnique_(this.array_[i], i);\n    }\n  }\n\n  this.updateLength_();\n\n};\n\ninherits(Collection, BaseObject);\n\n\n/**\n * Remove all elements from the collection.\n * @api\n */\nCollection.prototype.clear = function() {\n  while (this.getLength() > 0) {\n    this.pop();\n  }\n};\n\n\n/**\n * Add elements to the collection.  This pushes each item in the provided array\n * to the end of the collection.\n * @param {!Array.<T>} arr Array.\n * @return {module:ol/Collection.<T>} This collection.\n * @api\n */\nCollection.prototype.extend = function(arr) {\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    this.push(arr[i]);\n  }\n  return this;\n};\n\n\n/**\n * Iterate over each element, calling the provided callback.\n * @param {function(T, number, Array.<T>): *} f The function to call\n *     for every element. This function takes 3 arguments (the element, the\n *     index and the array). The return value is ignored.\n * @api\n */\nCollection.prototype.forEach = function(f) {\n  const array = this.array_;\n  for (let i = 0, ii = array.length; i < ii; ++i) {\n    f(array[i], i, array);\n  }\n};\n\n\n/**\n * Get a reference to the underlying Array object. Warning: if the array\n * is mutated, no events will be dispatched by the collection, and the\n * collection's \"length\" property won't be in sync with the actual length\n * of the array.\n * @return {!Array.<T>} Array.\n * @api\n */\nCollection.prototype.getArray = function() {\n  return this.array_;\n};\n\n\n/**\n * Get the element at the provided index.\n * @param {number} index Index.\n * @return {T} Element.\n * @api\n */\nCollection.prototype.item = function(index) {\n  return this.array_[index];\n};\n\n\n/**\n * Get the length of this collection.\n * @return {number} The length of the array.\n * @observable\n * @api\n */\nCollection.prototype.getLength = function() {\n  return /** @type {number} */ (this.get(Property.LENGTH));\n};\n\n\n/**\n * Insert an element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.insertAt = function(index, elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  this.array_.splice(index, 0, elem);\n  this.updateLength_();\n  this.dispatchEvent(\n    new CollectionEvent(CollectionEventType.ADD, elem));\n};\n\n\n/**\n * Remove the last element of the collection and return it.\n * Return `undefined` if the collection is empty.\n * @return {T|undefined} Element.\n * @api\n */\nCollection.prototype.pop = function() {\n  return this.removeAt(this.getLength() - 1);\n};\n\n\n/**\n * Insert the provided element at the end of the collection.\n * @param {T} elem Element.\n * @return {number} New length of the collection.\n * @api\n */\nCollection.prototype.push = function(elem) {\n  if (this.unique_) {\n    this.assertUnique_(elem);\n  }\n  const n = this.getLength();\n  this.insertAt(n, elem);\n  return this.getLength();\n};\n\n\n/**\n * Remove the first occurrence of an element from the collection.\n * @param {T} elem Element.\n * @return {T|undefined} The removed element or undefined if none found.\n * @api\n */\nCollection.prototype.remove = function(elem) {\n  const arr = this.array_;\n  for (let i = 0, ii = arr.length; i < ii; ++i) {\n    if (arr[i] === elem) {\n      return this.removeAt(i);\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Remove the element at the provided index and return it.\n * Return `undefined` if the collection does not contain this index.\n * @param {number} index Index.\n * @return {T|undefined} Value.\n * @api\n */\nCollection.prototype.removeAt = function(index) {\n  const prev = this.array_[index];\n  this.array_.splice(index, 1);\n  this.updateLength_();\n  this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n  return prev;\n};\n\n\n/**\n * Set the element at the provided index.\n * @param {number} index Index.\n * @param {T} elem Element.\n * @api\n */\nCollection.prototype.setAt = function(index, elem) {\n  const n = this.getLength();\n  if (index < n) {\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev));\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  } else {\n    for (let j = n; j < index; ++j) {\n      this.insertAt(j, undefined);\n    }\n    this.insertAt(index, elem);\n  }\n};\n\n\n/**\n * @private\n */\nCollection.prototype.updateLength_ = function() {\n  this.set(Property.LENGTH, this.array_.length);\n};\n\n\n/**\n * @private\n * @param {T} elem Element.\n * @param {number=} opt_except Optional index to ignore.\n */\nCollection.prototype.assertUnique_ = function(elem, opt_except) {\n  for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n    if (this.array_[i] === elem && i !== opt_except) {\n      throw new AssertionError(58);\n    }\n  }\n};\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport {inherits} from './util.js';\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapEvent = function(type, map, opt_frameState) {\n\n  Event.call(this, type);\n\n  /**\n   * The map where the event occurred.\n   * @type {module:ol/PluggableMap}\n   * @api\n   */\n  this.map = map;\n\n  /**\n   * The frame state at the time of the event.\n   * @type {?module:ol/PluggableMap~FrameState}\n   * @api\n   */\n  this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n};\n\ninherits(MapEvent, Event);\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport {inherits} from './util.js';\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n *\n * @constructor\n * @extends {module:ol/MapEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {Event} browserEvent Browser event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserEvent = function(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n  MapEvent.call(this, type, map, opt_frameState);\n\n  /**\n   * The original browser event.\n   * @const\n   * @type {Event}\n   * @api\n   */\n  this.originalEvent = browserEvent;\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {module:ol~Pixel}\n   * @api\n   */\n  this.pixel = map.getEventPixel(browserEvent);\n\n  /**\n   * The coordinate in view projection corresponding to the original browser event.\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n  /**\n   * Indicates if the map is currently being dragged. Only set for\n   * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n   *\n   * @type {boolean}\n   * @api\n   */\n  this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n};\n\ninherits(MapBrowserEvent, MapEvent);\n\n\n/**\n * Prevents the default browser action.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault\n * @override\n * @api\n */\nMapBrowserEvent.prototype.preventDefault = function() {\n  MapEvent.prototype.preventDefault.call(this);\n  this.originalEvent.preventDefault();\n};\n\n\n/**\n * Prevents further propagation of the current event.\n * @see https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation\n * @override\n * @api\n */\nMapBrowserEvent.prototype.stopPropagation = function() {\n  MapEvent.prototype.stopPropagation.call(this);\n  this.originalEvent.stopPropagation();\n};\nexport default MapBrowserEvent;\n","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport const DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nlet MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array.<string>}\n */\nlet EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @const ol/has.WEBGL\n * @type {boolean}\n * @api\n */\nlet HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n    const gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport const CANVAS_LINE_DASH = function() {\n  let has = false;\n  try {\n    has = !!document.createElement('CANVAS').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport const GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport const TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport const POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport const MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport {inherits} from './util.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\n/**\n * @constructor\n * @extends {module:ol/MapBrowserEvent}\n * @param {string} type Event type.\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @param {boolean=} opt_dragging Is the map currently being dragged?\n * @param {?module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n */\nconst MapBrowserPointerEvent = function(type, map, pointerEvent, opt_dragging,\n  opt_frameState) {\n\n  MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging,\n    opt_frameState);\n\n  /**\n   * @const\n   * @type {module:ol/pointer/PointerEvent}\n   */\n  this.pointerEvent = pointerEvent;\n\n};\n\ninherits(MapBrowserPointerEvent, MapBrowserEvent);\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/pointer/EventSource\n */\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @param {!Object.<string, function(Event)>} mapping Event mapping.\n * @constructor\n */\nconst EventSource = function(dispatcher, mapping) {\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object.<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n\n/**\n * List of events supported by this source.\n * @return {Array.<string>} Event names\n */\nEventSource.prototype.getEvents = function() {\n  return Object.keys(this.mapping_);\n};\n\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function(eventType) {\n  return this.mapping_[eventType];\n};\nexport default EventSource;\n","/**\n * @module ol/pointer/MouseSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MouseSource = function(dispatcher) {\n  const mapping = {\n    'mousedown': this.mousedown,\n    'mousemove': this.mousemove,\n    'mouseup': this.mouseup,\n    'mouseover': this.mouseover,\n    'mouseout': this.mouseout\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {Array.<module:ol~Pixel>}\n   */\n  this.lastTouches = [];\n};\n\ninherits(MouseSource, EventSource);\n\n\n/**\n * @type {number}\n */\nexport const POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport const POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nconst DEDUP_DIST = 25;\n\n\n/**\n * Detect if a mouse event was simulated from a touch by\n * checking if previously there was a touch event at the\n * same position.\n *\n * FIXME - Known problem with the native Android browser on\n * Samsung GT-I9100 (Android 4.1.2):\n * In case the page is scrolled, this function does not work\n * correctly when a canvas is used (WebGL or canvas renderer).\n * Mouse listeners on canvas elements (for this browser), create\n * two mouse events: One 'good' and one 'bad' one (on other browsers or\n * when a div is used, there is only one event). For the 'bad' one,\n * clientX/clientY and also pageX/pageY are wrong when the page\n * is scrolled. Because of that, this function can not detect if\n * the events were simulated from a touch event. As result, a\n * pointer event at a wrong position is dispatched, which confuses\n * the map interactions.\n * It is unclear, how one can get the correct position for the event\n * or detect that the positions are invalid.\n *\n * @private\n * @param {Event} inEvent The in event.\n * @return {boolean} True, if the event was generated by a touch.\n */\nMouseSource.prototype.isEventSimulatedFromTouch_ = function(inEvent) {\n  const lts = this.lastTouches;\n  const x = inEvent.clientX;\n  const y = inEvent.clientY;\n  for (let i = 0, l = lts.length, t; i < l && (t = lts[i]); i++) {\n    // simulated mouse events will be swallowed near a primary touchend\n    const dx = Math.abs(x - t[0]);\n    const dy = Math.abs(y - t[1]);\n    if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  const e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  const pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\n/**\n * Handler for `mousedown`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousedown = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mousemove`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mousemove = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseup`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseup = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      const e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n};\n\n\n/**\n * Handler for `mouseover`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseover = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n};\n\n\n/**\n * Handler for `mouseout`.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.mouseout = function(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    const e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n};\n\n\n/**\n * Dispatches a `pointercancel` event.\n *\n * @param {Event} inEvent The in event.\n */\nMouseSource.prototype.cancel = function(inEvent) {\n  const e = prepareEvent(inEvent, this.dispatcher);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanupMouse();\n};\n\n\n/**\n * Remove the mouse from the list of active pointers.\n */\nMouseSource.prototype.cleanupMouse = function() {\n  delete this.pointerMap[POINTER_ID.toString()];\n};\nexport default MouseSource;\n","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst MsSource = function(dispatcher) {\n  const mapping = {\n    'MSPointerDown': this.msPointerDown,\n    'MSPointerMove': this.msPointerMove,\n    'MSPointerUp': this.msPointerUp,\n    'MSPointerOut': this.msPointerOut,\n    'MSPointerOver': this.msPointerOver,\n    'MSPointerCancel': this.msPointerCancel,\n    'MSGotPointerCapture': this.msGotPointerCapture,\n    'MSLostPointerCapture': this.msLostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, MSPointerEvent|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n};\n\ninherits(MsSource, EventSource);\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @private\n * @param {MSPointerEvent} inEvent The in event.\n * @return {Object} The copied event.\n */\nMsSource.prototype.prepareEvent_ = function(inEvent) {\n  let e = inEvent;\n  if (typeof inEvent.pointerType === 'number') {\n    e = this.dispatcher.cloneEvent(inEvent, inEvent);\n    e.pointerType = POINTER_TYPES[inEvent.pointerType];\n  }\n\n  return e;\n};\n\n\n/**\n * Remove this pointer from the list of active pointers.\n * @param {number} pointerId Pointer identifier.\n */\nMsSource.prototype.cleanup = function(pointerId) {\n  delete this.pointerMap[pointerId.toString()];\n};\n\n\n/**\n * Handler for `msPointerDown`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerDown = function(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerMove`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerMove = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerUp`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerUp = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msPointerOut`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOut = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerOver`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerOver = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n};\n\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msPointerCancel = function(inEvent) {\n  const e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n};\n\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msLostPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\n\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @param {MSPointerEvent} inEvent The in event.\n */\nMsSource.prototype.msGotPointerCapture = function(inEvent) {\n  const e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n};\nexport default MsSource;\n","/**\n * @module ol/pointer/NativeSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @constructor\n * @extends {module:ol/pointer/EventSource}\n */\nconst NativeSource = function(dispatcher) {\n  const mapping = {\n    'pointerdown': this.pointerDown,\n    'pointermove': this.pointerMove,\n    'pointerup': this.pointerUp,\n    'pointerout': this.pointerOut,\n    'pointerover': this.pointerOver,\n    'pointercancel': this.pointerCancel,\n    'gotpointercapture': this.gotPointerCapture,\n    'lostpointercapture': this.lostPointerCapture\n  };\n  EventSource.call(this, dispatcher, mapping);\n};\n\ninherits(NativeSource, EventSource);\n\n\n/**\n * Handler for `pointerdown`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerDown = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointermove`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerMove = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerup`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerUp = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerout`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOut = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointerover`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerOver = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `pointercancel`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.pointerCancel = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.lostPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\n\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @param {Event} inEvent The in event.\n */\nNativeSource.prototype.gotPointerCapture = function(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n};\nexport default NativeSource;\n","/**\n * @module ol/pointer/PointerEvent\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * A class for pointer events.\n *\n * This class is used as an abstraction for mouse events,\n * touch events and even native pointer events.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type The type of the event to create.\n * @param {Event} originalEvent The event.\n * @param {Object.<string, ?>=} opt_eventDict An optional dictionary of\n *    initial event properties.\n */\nconst PointerEvent = function(type, originalEvent, opt_eventDict) {\n  Event.call(this, type);\n\n  /**\n   * @const\n   * @type {Event}\n   */\n  this.originalEvent = originalEvent;\n\n  const eventDict = opt_eventDict ? opt_eventDict : {};\n\n  /**\n   * @type {number}\n   */\n  this.buttons = this.getButtons_(eventDict);\n\n  /**\n   * @type {number}\n   */\n  this.pressure = this.getPressure_(eventDict, this.buttons);\n\n  // MouseEvent related properties\n\n  /**\n   * @type {boolean}\n   */\n  this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n  /**\n   * @type {Object}\n   */\n  this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n  /**\n   * @type {number}\n   */\n  this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n  /**\n   * @type {boolean}\n   */\n  this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n  /**\n   * @type {number}\n   */\n  this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n  /**\n   * @type {Node}\n   */\n  this.relatedTarget = 'relatedTarget' in eventDict ?\n    eventDict['relatedTarget'] : null;\n\n  // PointerEvent related properties\n\n  /**\n   * @const\n   * @type {number}\n   */\n  this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n  /**\n   * @type {number}\n   */\n  this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n  /**\n   * @type {string}\n   */\n  this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n  /**\n   * @type {number}\n   */\n  this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n  /**\n   * @type {boolean}\n   */\n  this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n  // keep the semantics of preventDefault\n  if (originalEvent.preventDefault) {\n    this.preventDefault = function() {\n      originalEvent.preventDefault();\n    };\n  }\n};\n\ninherits(PointerEvent, Event);\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nlet HAS_BUTTONS = false;\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @return {number} Button indicator.\n */\nPointerEvent.prototype.getButtons_ = function(eventDict) {\n  // According to the w3c spec,\n  // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n  // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n  // left mouse button depressed.\n  //\n  // As of now, the only way to distinguish between the two states of\n  // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n  // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n  // no mouse button is held.\n  //\n  // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n  // but initMouseEvent does not expose an argument with which to set\n  // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n  // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n  // of app developers.\n  //\n  // The only way to propagate the correct state of MouseEvent.which and\n  // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n  // is to call initMouseEvent with a buttonArg value of -1.\n  //\n  // This is fixed with DOM Level 4's use of buttons\n  let buttons;\n  if (eventDict.buttons || HAS_BUTTONS) {\n    buttons = eventDict.buttons;\n  } else {\n    switch (eventDict.which) {\n      case 1: buttons = 1; break;\n      case 2: buttons = 4; break;\n      case 3: buttons = 2; break;\n      default: buttons = 0;\n    }\n  }\n  return buttons;\n};\n\n\n/**\n * @private\n * @param {Object.<string, ?>} eventDict The event dictionary.\n * @param {number} buttons Button indicator.\n * @return {number} The pressure.\n */\nPointerEvent.prototype.getPressure_ = function(eventDict, buttons) {\n  // Spec requires that pointers without pressure specified use 0.5 for down\n  // state and 0 for up state.\n  let pressure = 0;\n  if (eventDict.pressure) {\n    pressure = eventDict.pressure;\n  } else {\n    pressure = buttons ? 0.5 : 0;\n  }\n  return pressure;\n};\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    const ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\nexport default PointerEvent;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array.<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low  = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array.<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array.<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {!Array.<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array.<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to sort (modifies original).\n * @param {Function} compareFnc Comparison function.\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array.<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array.<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/pointer/TouchSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @constructor\n * @param {module:ol/pointer/PointerEventHandler} dispatcher The event handler.\n * @param {module:ol/pointer/MouseSource} mouseSource Mouse source.\n * @extends {module:ol/pointer/EventSource}\n */\nconst TouchSource = function(dispatcher, mouseSource) {\n  const mapping = {\n    'touchstart': this.touchstart,\n    'touchmove': this.touchmove,\n    'touchend': this.touchend,\n    'touchcancel': this.touchcancel\n  };\n  EventSource.call(this, dispatcher, mapping);\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = dispatcher.pointerMap;\n\n  /**\n   * @const\n   * @type {module:ol/pointer/MouseSource}\n   */\n  this.mouseSource = mouseSource;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.firstTouchId_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.clickCount_ = 0;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.resetId_ = undefined;\n\n  /**\n   * Mouse event timeout: This should be long enough to\n   * ignore compat mouse events made by touch.\n   * @private\n   * @type {number}\n   */\n  this.dedupTimeout_ = 2500;\n};\n\ninherits(TouchSource, EventSource);\n\n\n/**\n * @type {number}\n */\nconst CLICK_COUNT_TIMEOUT = 200;\n\n\n/**\n * @type {string}\n */\nconst POINTER_TYPE = 'touch';\n\n/**\n * @private\n * @param {Touch} inTouch The in touch.\n * @return {boolean} True, if this is the primary touch.\n */\nTouchSource.prototype.isPrimaryTouch_ = function(inTouch) {\n  return this.firstTouchId_ === inTouch.identifier;\n};\n\n\n/**\n * Set primary touch if there are no pointers, or the only pointer is the mouse.\n * @param {Touch} inTouch The in touch.\n * @private\n */\nTouchSource.prototype.setPrimaryTouch_ = function(inTouch) {\n  const count = Object.keys(this.pointerMap).length;\n  if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n    this.firstTouchId_ = inTouch.identifier;\n    this.cancelResetClickCount_();\n  }\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.removePrimaryPointer_ = function(inPointer) {\n  if (inPointer.isPrimary) {\n    this.firstTouchId_ = undefined;\n    this.resetClickCount_();\n  }\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCount_ = function() {\n  this.resetId_ = setTimeout(\n    this.resetClickCountHandler_.bind(this),\n    CLICK_COUNT_TIMEOUT);\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.resetClickCountHandler_ = function() {\n  this.clickCount_ = 0;\n  this.resetId_ = undefined;\n};\n\n\n/**\n * @private\n */\nTouchSource.prototype.cancelResetClickCount_ = function() {\n  if (this.resetId_ !== undefined) {\n    clearTimeout(this.resetId_);\n  }\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent Browser event\n * @param {Touch} inTouch Touch event\n * @return {Object} A pointer object.\n */\nTouchSource.prototype.touchToPointer_ = function(browserEvent, inTouch) {\n  const e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n  // Spec specifies that pointerId 1 is reserved for Mouse.\n  // Touch identifiers can start at 0.\n  // Add 2 to the touch identifier for compatibility.\n  e.pointerId = inTouch.identifier + 2;\n  // TODO: check if this is necessary?\n  //e.target = findTarget(e);\n  e.bubbles = true;\n  e.cancelable = true;\n  e.detail = this.clickCount_;\n  e.button = 0;\n  e.buttons = 1;\n  e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n  e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n  e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n  e.isPrimary = this.isPrimaryTouch_(inTouch);\n  e.pointerType = POINTER_TYPE;\n\n  // make sure that the properties that are different for\n  // each `Touch` object are not copied from the BrowserEvent object\n  e.clientX = inTouch.clientX;\n  e.clientY = inTouch.clientY;\n  e.screenX = inTouch.screenX;\n  e.screenY = inTouch.screenY;\n\n  return e;\n};\n\n\n/**\n * @private\n * @param {Event} inEvent Touch event\n * @param {function(Event, Object)} inFunction In function.\n */\nTouchSource.prototype.processTouches_ = function(inEvent, inFunction) {\n  const touches = Array.prototype.slice.call(inEvent.changedTouches);\n  const count = touches.length;\n  function preventDefault() {\n    inEvent.preventDefault();\n  }\n  for (let i = 0; i < count; ++i) {\n    const pointer = this.touchToPointer_(inEvent, touches[i]);\n    // forward touch preventDefaults\n    pointer.preventDefault = preventDefault;\n    inFunction.call(this, inEvent, pointer);\n  }\n};\n\n\n/**\n * @private\n * @param {TouchList} touchList The touch list.\n * @param {number} searchId Search identifier.\n * @return {boolean} True, if the `Touch` with the given id is in the list.\n */\nTouchSource.prototype.findTouch_ = function(touchList, searchId) {\n  const l = touchList.length;\n  for (let i = 0; i < l; i++) {\n    const touch = touchList[i];\n    if (touch.identifier === searchId) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * In some instances, a touchstart can happen without a touchend. This\n * leaves the pointermap in a broken state.\n * Therefore, on every touchstart, we remove the touches that did not fire a\n * touchend event.\n * To keep state globally consistent, we fire a pointercancel for\n * this \"abandoned\" touch\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.vacuumTouches_ = function(inEvent) {\n  const touchList = inEvent.touches;\n  // pointerMap.getCount() should be < touchList.length here,\n  // as the touchstart has not been processed yet.\n  const keys = Object.keys(this.pointerMap);\n  const count = keys.length;\n  if (count >= touchList.length) {\n    const d = [];\n    for (let i = 0; i < count; ++i) {\n      const key = keys[i];\n      const value = this.pointerMap[key];\n      // Never remove pointerId == 1, which is mouse.\n      // Touch identifiers are 2 smaller than their pointerId, which is the\n      // index in pointermap.\n      if (key != POINTER_ID && !this.findTouch_(touchList, key - 2)) {\n        d.push(value.out);\n      }\n    }\n    for (let i = 0; i < d.length; ++i) {\n      this.cancelOut_(inEvent, d[i]);\n    }\n  }\n};\n\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchstart = function(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer object.\n */\nTouchSource.prototype.overDown_ = function(browserEvent, inPointer) {\n  this.pointerMap[inPointer.pointerId] = {\n    target: inPointer.target,\n    out: inPointer,\n    outTarget: inPointer.target\n  };\n  this.dispatcher.over(inPointer, browserEvent);\n  this.dispatcher.enter(inPointer, browserEvent);\n  this.dispatcher.down(inPointer, browserEvent);\n};\n\n\n/**\n * Handler for `touchmove`.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchmove = function(inEvent) {\n  inEvent.preventDefault();\n  this.processTouches_(inEvent, this.moveOverOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.moveOverOut_ = function(browserEvent, inPointer) {\n  const event = inPointer;\n  const pointer = this.pointerMap[event.pointerId];\n  // a finger drifted off the screen, ignore it\n  if (!pointer) {\n    return;\n  }\n  const outEvent = pointer.out;\n  const outTarget = pointer.outTarget;\n  this.dispatcher.move(event, browserEvent);\n  if (outEvent && outTarget !== event.target) {\n    outEvent.relatedTarget = event.target;\n    event.relatedTarget = outTarget;\n    // recover from retargeting by shadow\n    outEvent.target = outTarget;\n    if (event.target) {\n      this.dispatcher.leaveOut(outEvent, browserEvent);\n      this.dispatcher.enterOver(event, browserEvent);\n    } else {\n      // clean up case when finger leaves the screen\n      event.target = outTarget;\n      event.relatedTarget = null;\n      this.cancelOut_(browserEvent, event);\n    }\n  }\n  pointer.out = event;\n  pointer.outTarget = event.target;\n};\n\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The event.\n */\nTouchSource.prototype.touchend = function(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent An event.\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.upOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.up(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.touchcancel = function(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n};\n\n\n/**\n * @private\n * @param {Event} browserEvent The event.\n * @param {Object} inPointer The in pointer.\n */\nTouchSource.prototype.cancelOut_ = function(browserEvent, inPointer) {\n  this.dispatcher.cancel(inPointer, browserEvent);\n  this.dispatcher.out(inPointer, browserEvent);\n  this.dispatcher.leave(inPointer, browserEvent);\n  this.cleanUpPointer_(inPointer);\n};\n\n\n/**\n * @private\n * @param {Object} inPointer The inPointer object.\n */\nTouchSource.prototype.cleanUpPointer_ = function(inPointer) {\n  delete this.pointerMap[inPointer.pointerId];\n  this.removePrimaryPointer_(inPointer);\n};\n\n\n/**\n * Prevent synth mouse events from creating pointer events.\n *\n * @private\n * @param {Event} inEvent The in event.\n */\nTouchSource.prototype.dedupSynthMouse_ = function(inEvent) {\n  const lts = this.mouseSource.lastTouches;\n  const t = inEvent.changedTouches[0];\n  // only the primary finger will synth mouse events\n  if (this.isPrimaryTouch_(t)) {\n    // remember x/y of last touch\n    const lt = [t.clientX, t.clientY];\n    lts.push(lt);\n\n    setTimeout(function() {\n      // remove touch after timeout\n      remove(lts, lt);\n    }, this.dedupTimeout_);\n  }\n};\nexport default TouchSource;\n","/**\n * @module ol/pointer/PointerEventHandler\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {inherits} from '../util.js';\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @param {Element|HTMLDocument} element Viewport element.\n */\nconst PointerEventHandler = function(element) {\n  EventTarget.call(this);\n\n  /**\n   * @const\n   * @private\n   * @type {Element|HTMLDocument}\n   */\n  this.element_ = element;\n\n  /**\n   * @const\n   * @type {!Object.<string, Event|Object>}\n   */\n  this.pointerMap = {};\n\n  /**\n   * @type {Object.<string, function(Event)>}\n   * @private\n   */\n  this.eventMap_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/EventSource>}\n   * @private\n   */\n  this.eventSourceList_ = [];\n\n  this.registerSources();\n};\n\ninherits(PointerEventHandler, EventTarget);\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array.<Array>}\n */\nconst CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\n/**\n * Set up the event sources (mouse, touch and native pointers)\n * that generate pointer events.\n */\nPointerEventHandler.prototype.registerSources = function() {\n  if (POINTER) {\n    this.registerSource('native', new NativeSource(this));\n  } else if (MSPOINTER) {\n    this.registerSource('ms', new MsSource(this));\n  } else {\n    const mouseSource = new MouseSource(this);\n    this.registerSource('mouse', mouseSource);\n\n    if (TOUCH) {\n      this.registerSource('touch', new TouchSource(this, mouseSource));\n    }\n  }\n\n  // register events on the viewport element\n  this.register_();\n};\n\n\n/**\n * Add a new event source that will generate pointer events.\n *\n * @param {string} name A name for the event source\n * @param {module:ol/pointer/EventSource} source The source event.\n */\nPointerEventHandler.prototype.registerSource = function(name, source) {\n  const s = source;\n  const newEvents = s.getEvents();\n\n  if (newEvents) {\n    newEvents.forEach(function(e) {\n      const handler = s.getHandlerForEvent(e);\n\n      if (handler) {\n        this.eventMap_[e] = handler.bind(s);\n      }\n    }.bind(this));\n    this.eventSourceList_.push(s);\n  }\n};\n\n\n/**\n * Set up the events for all registered event sources.\n * @private\n */\nPointerEventHandler.prototype.register_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.addEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Remove all registered events.\n * @private\n */\nPointerEventHandler.prototype.unregister_ = function() {\n  const l = this.eventSourceList_.length;\n  for (let i = 0; i < l; i++) {\n    const eventSource = this.eventSourceList_[i];\n    this.removeEvents_(eventSource.getEvents());\n  }\n};\n\n\n/**\n * Calls the right handler for a new event.\n * @private\n * @param {Event} inEvent Browser event.\n */\nPointerEventHandler.prototype.eventHandler_ = function(inEvent) {\n  const type = inEvent.type;\n  const handler = this.eventMap_[type];\n  if (handler) {\n    handler(inEvent);\n  }\n};\n\n\n/**\n * Setup listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.addEvents_ = function(events) {\n  events.forEach(function(eventName) {\n    listen(this.element_, eventName, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Unregister listeners for the given events.\n * @private\n * @param {Array.<string>} events List of events.\n */\nPointerEventHandler.prototype.removeEvents_ = function(events) {\n  events.forEach(function(e) {\n    unlisten(this.element_, e, this.eventHandler_, this);\n  }.bind(this));\n};\n\n\n/**\n * Returns a snapshot of inEvent, with writable properties.\n *\n * @param {Event} event Browser event.\n * @param {Event|Touch} inEvent An event that contains\n *    properties to copy.\n * @return {Object} An object containing shallow copies of\n *    `inEvent`'s properties.\n */\nPointerEventHandler.prototype.cloneEvent = function(event, inEvent) {\n  const eventCopy = {};\n  for (let i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n    const p = CLONE_PROPS[i][0];\n    eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n  }\n\n  return eventCopy;\n};\n\n\n// EVENTS\n\n\n/**\n * Triggers a 'pointerdown' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.down = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n};\n\n\n/**\n * Triggers a 'pointermove' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.move = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerup' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.up = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERUP, data, event);\n};\n\n\n/**\n * Triggers a 'pointerenter' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enter = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERENTER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerleave' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leave = function(data, event) {\n  data.bubbles = false;\n  this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n};\n\n\n/**\n * Triggers a 'pointerover' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.over = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROVER, data, event);\n};\n\n\n/**\n * Triggers a 'pointerout' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.out = function(data, event) {\n  data.bubbles = true;\n  this.fireEvent(PointerEventType.POINTEROUT, data, event);\n};\n\n\n/**\n * Triggers a 'pointercancel' event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.cancel = function(data, event) {\n  this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n};\n\n\n/**\n * Triggers a combination of 'pointerout' and 'pointerleave' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.leaveOut = function(data, event) {\n  this.out(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.leave(data, event);\n  }\n};\n\n\n/**\n * Triggers a combination of 'pointerover' and 'pointerevents' events.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.enterOver = function(data, event) {\n  this.over(data, event);\n  if (!this.contains_(data.target, data.relatedTarget)) {\n    this.enter(data, event);\n  }\n};\n\n\n/**\n * @private\n * @param {Element} container The container element.\n * @param {Element} contained The contained element.\n * @return {boolean} Returns true if the container element\n *   contains the other element.\n */\nPointerEventHandler.prototype.contains_ = function(container, contained) {\n  if (!container || !contained) {\n    return false;\n  }\n  return container.contains(contained);\n};\n\n\n// EVENT CREATION AND TRACKING\n/**\n * Creates a new Event of type `inType`, based on the information in\n * `data`.\n *\n * @param {string} inType A string representing the type of event to create.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n */\nPointerEventHandler.prototype.makeEvent = function(inType, data, event) {\n  return new PointerEvent(inType, event, data);\n};\n\n\n/**\n * Make and dispatch an event in one call.\n * @param {string} inType A string representing the type of event.\n * @param {Object} data Pointer event data.\n * @param {Event} event The event.\n */\nPointerEventHandler.prototype.fireEvent = function(inType, data, event) {\n  const e = this.makeEvent(inType, data, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Creates a pointer event from a native pointer event\n * and dispatches this event.\n * @param {Event} event A platform event with a target.\n */\nPointerEventHandler.prototype.fireNativeEvent = function(event) {\n  const e = this.makeEvent(event.type, event, event);\n  this.dispatchEvent(e);\n};\n\n\n/**\n * Wrap a native mouse event into a pointer event.\n * This proxy method is required for the legacy IE support.\n * @param {string} eventType The pointer event type.\n * @param {Event} event The event.\n * @return {module:ol/pointer/PointerEvent} The wrapped event.\n */\nPointerEventHandler.prototype.wrapMouseEvent = function(eventType, event) {\n  const pointerEvent = this.makeEvent(\n    eventType, MouseSource.prepareEvent(event, this), event);\n  return pointerEvent;\n};\n\n\n/**\n * @inheritDoc\n */\nPointerEventHandler.prototype.disposeInternal = function() {\n  this.unregister_();\n  EventTarget.prototype.disposeInternal.call(this);\n};\n\n\nexport default PointerEventHandler;\n","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {inherits} from './util.js';\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/EventTarget.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\n/**\n * @param {module:ol/PluggableMap} map The map with the viewport to\n * listen to events on.\n * @param {number=} moveTolerance The minimal distance the pointer must travel\n * to trigger a move.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n */\nconst MapBrowserEventHandler = function(map, moveTolerance) {\n\n  EventTarget.call(this);\n\n  /**\n   * This is the element that we will listen to the real events on.\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = map;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.clickTimeoutId_ = 0;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.dragging_ = false;\n\n  /**\n   * @type {!Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.dragListenerKeys_ = [];\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.moveTolerance_ = moveTolerance ?\n    moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n  /**\n   * The most recent \"down\" type event (or null if none have occurred).\n   * Set on pointerdown.\n   * @type {module:ol/pointer/PointerEvent}\n   * @private\n   */\n  this.down_ = null;\n\n  const element = this.map_.getViewport();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.activePointers_ = 0;\n\n  /**\n   * @type {!Object.<number, boolean>}\n   * @private\n   */\n  this.trackedTouches_ = {};\n\n  /**\n   * Event handler which generates pointer events for\n   * the viewport element.\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.pointerEventHandler_ = new PointerEventHandler(element);\n\n  /**\n   * Event handler which generates pointer events for\n   * the document (used when dragging).\n   *\n   * @type {module:ol/pointer/PointerEventHandler}\n   * @private\n   */\n  this.documentPointerEventHandler_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERDOWN,\n    this.handlePointerDown_, this);\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n    PointerEventType.POINTERMOVE,\n    this.relayEvent_, this);\n\n};\n\ninherits(MapBrowserEventHandler, EventTarget);\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.emulateClick_ = function(pointerEvent) {\n  let newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.CLICK, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n  if (this.clickTimeoutId_ !== 0) {\n    // double-click\n    clearTimeout(this.clickTimeoutId_);\n    this.clickTimeoutId_ = 0;\n    newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n  } else {\n    // click\n    this.clickTimeoutId_ = setTimeout(function() {\n      this.clickTimeoutId_ = 0;\n      const newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    }.bind(this), 250);\n  }\n};\n\n\n/**\n * Keeps track on how many pointers are currently active.\n *\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.updateActivePointers_ = function(pointerEvent) {\n  const event = pointerEvent;\n\n  if (event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL) {\n    delete this.trackedTouches_[event.pointerId];\n  } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n    this.trackedTouches_[event.pointerId] = true;\n  }\n  this.activePointers_ = Object.keys(this.trackedTouches_).length;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerUp_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  // We emulate click events on left mouse button click, touch contact, and pen\n  // contact. isMouseActionButton returns true in these cases (evt.button is set\n  // to 0).\n  // See http://www.w3.org/TR/pointerevents/#button-states\n  // We only fire click, singleclick, and doubleclick if nobody has called\n  // event.stopPropagation() or event.preventDefault().\n  if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n    this.emulateClick_(this.down_);\n  }\n\n  if (this.activePointers_ === 0) {\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n    this.dragging_ = false;\n    this.down_ = null;\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} If the left mouse button was pressed.\n * @private\n */\nMapBrowserEventHandler.prototype.isMouseActionButton_ = function(pointerEvent) {\n  return pointerEvent.button === 0;\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerDown_ = function(pointerEvent) {\n  this.updateActivePointers_(pointerEvent);\n  const newEvent = new MapBrowserPointerEvent(\n    MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n  this.dispatchEvent(newEvent);\n\n  this.down_ = pointerEvent;\n\n  if (this.dragListenerKeys_.length === 0) {\n    /* Set up a pointer event handler on the `document`,\n     * which is required when the pointer is moved outside\n     * the viewport when dragging.\n     */\n    this.documentPointerEventHandler_ =\n        new PointerEventHandler(document);\n\n    this.dragListenerKeys_.push(\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERMOVE,\n        this.handlePointerMove_, this),\n      listen(this.documentPointerEventHandler_,\n        MapBrowserEventType.POINTERUP,\n        this.handlePointerUp_, this),\n      /* Note that the listener for `pointercancel is set up on\n       * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n       * the `pointerup` and `pointermove` listeners.\n       *\n       * The reason for this is the following: `TouchSource.vacuumTouches_()`\n       * issues `pointercancel` events, when there was no `touchend` for a\n       * `touchstart`. Now, let's say a first `touchstart` is registered on\n       * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n       * But `documentPointerEventHandler_` doesn't know about the first\n       * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n       * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n       * only registered there.\n       */\n      listen(this.pointerEventHandler_,\n        MapBrowserEventType.POINTERCANCEL,\n        this.handlePointerUp_, this)\n    );\n  }\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.handlePointerMove_ = function(pointerEvent) {\n  // Between pointerdown and pointerup, pointermove events are triggered.\n  // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n  // moved a significant distance.\n  if (this.isMoving_(pointerEvent)) {\n    this.dragging_ = true;\n    const newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n      this.dragging_);\n    this.dispatchEvent(newEvent);\n  }\n\n  // Some native android browser triggers mousemove events during small period\n  // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n  // https://code.google.com/p/android/issues/detail?id=19827\n  // ex: Galaxy Tab P3110 + Android 4.1.1\n  pointerEvent.preventDefault();\n};\n\n\n/**\n * Wrap and relay a pointer event.  Note that this requires that the type\n * string for the MapBrowserPointerEvent matches the PointerEvent type.\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @private\n */\nMapBrowserEventHandler.prototype.relayEvent_ = function(pointerEvent) {\n  const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n  this.dispatchEvent(new MapBrowserPointerEvent(\n    pointerEvent.type, this.map_, pointerEvent, dragging));\n};\n\n\n/**\n * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n * event.\n * @return {boolean} Is moving.\n * @private\n */\nMapBrowserEventHandler.prototype.isMoving_ = function(pointerEvent) {\n  return this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n};\n\n\n/**\n * @inheritDoc\n */\nMapBrowserEventHandler.prototype.disposeInternal = function() {\n  if (this.relayedListenerKey_) {\n    unlistenByKey(this.relayedListenerKey_);\n    this.relayedListenerKey_ = null;\n  }\n  if (this.pointerdownListenerKey_) {\n    unlistenByKey(this.pointerdownListenerKey_);\n    this.pointerdownListenerKey_ = null;\n  }\n\n  this.dragListenerKeys_.forEach(unlistenByKey);\n  this.dragListenerKeys_.length = 0;\n\n  if (this.documentPointerEventHandler_) {\n    this.documentPointerEventHandler_.dispose();\n    this.documentPointerEventHandler_ = null;\n  }\n  if (this.pointerEventHandler_) {\n    this.pointerEventHandler_.dispose();\n    this.pointerEventHandler_ = null;\n  }\n  EventTarget.prototype.disposeInternal.call(this);\n};\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * @see http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * @see http://hg.python.org/cpython/file/2.7/Lib/heapq.py\n *\n * @constructor\n * @param {function(T): number} priorityFunction Priority function.\n * @param {function(T): string} keyFunction Key function.\n * @struct\n * @template T\n */\nconst PriorityQueue = function(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array.<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object.<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function() {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function() {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  const elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function(element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  const priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function() {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function(index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function(index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function(index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function() {\n  let i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function() {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function(key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function(element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function(index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const count = elements.length;\n  const element = elements[index];\n  const priority = priorities[index];\n  const startIndex = index;\n\n  while (index < (count >> 1)) {\n    const lIndex = this.getLeftChildIndex_(index);\n    const rIndex = this.getRightChildIndex_(index);\n\n    const smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function(startIndex, index) {\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  const element = elements[index];\n  const priority = priorities[index];\n\n  while (index > startIndex) {\n    const parentIndex = this.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function() {\n  const priorityFunction = this.priorityFunction_;\n  const elements = this.elements_;\n  const priorities = this.priorities_;\n  let index = 0;\n  const n = elements.length;\n  let element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this.queuedElements_[this.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/structs/PriorityQueue.<Array>}\n * @param {module:ol/TileQueue~PriorityFunction} tilePriorityFunction\n *     Tile priority function.\n * @param {function(): ?} tileChangeCallback\n *     Function called on each tile change event.\n * @struct\n */\nconst TileQueue = function(tilePriorityFunction, tileChangeCallback) {\n\n  PriorityQueue.call(\n    this,\n    /**\n     * @param {Array} element Element.\n     * @return {number} Priority.\n     */\n    function(element) {\n      return tilePriorityFunction.apply(null, element);\n    },\n    /**\n     * @param {Array} element Element.\n     * @return {string} Key.\n     */\n    function(element) {\n      return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n    });\n\n  /**\n   * @private\n   * @type {function(): ?}\n   */\n  this.tileChangeCallback_ = tileChangeCallback;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilesLoading_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string,boolean>}\n   */\n  this.tilesLoadingKeys_ = {};\n\n};\n\ninherits(TileQueue, PriorityQueue);\n\n\n/**\n * @inheritDoc\n */\nTileQueue.prototype.enqueue = function(element) {\n  const added = PriorityQueue.prototype.enqueue.call(this, element);\n  if (added) {\n    const tile = element[0];\n    listen(tile, EventType.CHANGE, this.handleTileChange, this);\n  }\n  return added;\n};\n\n\n/**\n * @return {number} Number of tiles loading.\n */\nTileQueue.prototype.getTilesLoading = function() {\n  return this.tilesLoading_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nTileQueue.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const state = tile.getState();\n  if (state === TileState.LOADED || state === TileState.ERROR ||\n      state === TileState.EMPTY || state === TileState.ABORT) {\n    unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n    const tileKey = tile.getKey();\n    if (tileKey in this.tilesLoadingKeys_) {\n      delete this.tilesLoadingKeys_[tileKey];\n      --this.tilesLoading_;\n    }\n    this.tileChangeCallback_();\n  }\n};\n\n\n/**\n * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n * @param {number} maxNewLoads Maximum number of new tiles to load.\n */\nTileQueue.prototype.loadMoreTiles = function(maxTotalLoading, maxNewLoads) {\n  let newLoads = 0;\n  let abortedTiles = false;\n  let state, tile, tileKey;\n  while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n         this.getCount() > 0) {\n    tile = /** @type {module:ol/Tile} */ (this.dequeue()[0]);\n    tileKey = tile.getKey();\n    state = tile.getState();\n    if (state === TileState.ABORT) {\n      abortedTiles = true;\n    } else if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n      this.tilesLoadingKeys_[tileKey] = true;\n      ++this.tilesLoading_;\n      ++newLoads;\n      tile.load();\n    }\n  }\n  if (newLoads === 0 && abortedTiles) {\n    // Do not stop the render loop when all wanted tiles were aborted due to\n    // a small, saturated tile cache.\n    this.tileChangeCallback_();\n  }\n};\nexport default TileQueue;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh  = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array.<Array.<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array.<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array.<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        let z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        const index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          const power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        const offset = -direction / 2 + 0.5;\n        const oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        let newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array.<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array.<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array.<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array.<number>} xs Xs.\n * @param {Array.<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  let val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array.<number>} anchor Rotation anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array.<number>} anchor Scale anchor point.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object.<module:ol/proj/Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use proj4js, aliases can be added using `proj4.defs()`; see\n * [documentation](https://github.com/proj4js/proj4js). To set an alternative\n * namespace for proj4, use {@link module:ol/proj~setProj4}.\n *\n * @constructor\n * @param {module:ol/proj/Projection~Options} options Projection options.\n * @struct\n * @api\n */\nconst Projection = function(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function() {\n  return this.canWrapX_;\n};\n\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function() {\n  return this.code_;\n};\n\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function() {\n  return this.units_;\n};\n\n\n/**\n * Get the amount of meters per unit of this projection.  If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function() {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function() {\n  return this.worldExtent_;\n};\n\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *     or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *     \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function() {\n  return this.axisOrientation_;\n};\n\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function() {\n  return this.global_;\n};\n\n\n/**\n* Set if the projection is a global projection which spans the whole world\n* @param {boolean} global Whether the projection is global.\n* @api\n*/\nProjection.prototype.setGlobal = function(global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function() {\n  return this.defaultTileGrid_;\n};\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function(tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function(extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *     [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function(worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function(func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function() {\n  return this.getPointResolutionFunc_;\n};\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {inherits} from '../util.js';\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n */\nfunction EPSG3857Projection(code) {\n  Projection.call(this, {\n    code: code,\n    units: Units.METERS,\n    extent: EXTENT,\n    global: true,\n    worldExtent: WORLD_EXTENT,\n    getPointResolution: function(resolution, point) {\n      return resolution / cosh(point[1] / RADIUS);\n    }\n  });\n}\ninherits(EPSG3857Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array.<number>} input Input array of coordinate values.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array.<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport {inherits} from '../util.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n *\n * @constructor\n * @extends {module:ol/proj/Projection}\n * @param {string} code Code.\n * @param {string=} opt_axisOrientation Axis orientation.\n */\nfunction EPSG4326Projection(code, opt_axisOrientation) {\n  Projection.call(this, {\n    code: code,\n    units: Units.DEGREES,\n    extent: EXTENT,\n    axisOrientation: opt_axisOrientation,\n    global: true,\n    metersPerUnit: METERS_PER_UNIT,\n    worldExtent: EXTENT\n  });\n}\ninherits(EPSG4326Projection, Projection);\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array.<module:ol/proj/Projection>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object.<string, module:ol/proj/Projection>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object.<string, Object.<string, module:ol/proj~TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the {@link http://proj4js.org/}\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * {@link https://epsg.io/}, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array.<number>, Array.<number>=, number=): Array.<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array.<number>} input Input coordinate array.\n * @param {Array.<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array.<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  let projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    const code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array.<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array.<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array.<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array.<number>} input Input.\n     * @param {Array.<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array.<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array.<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  const det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = transform[0];\n  const b = transform[1];\n  const c = transform[2];\n  const d = transform[3];\n  const e = transform[4];\n  const f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @api\n */\nconst Geometry = function() {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.extentRevision_ = -1;\n\n  /**\n   * @protected\n   * @type {Object.<string, module:ol/geom/Geometry>}\n   */\n  this.simplifiedGeometryCache = {};\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.simplifiedGeometryRevision = 0;\n\n};\n\ninherits(Geometry, BaseObject);\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * Make a complete copy of the geometry.\n * @abstract\n * @return {!module:ol/geom/Geometry} Clone.\n */\nGeometry.prototype.clone = function() {};\n\n\n/**\n * @abstract\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @return {number} Minimum squared distance.\n */\nGeometry.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {};\n\n\n/**\n * Return the closest point of the geometry to the passed point as\n * {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n * @return {module:ol/coordinate~Coordinate} Closest point.\n * @api\n */\nGeometry.prototype.getClosestPoint = function(point, opt_closestPoint) {\n  const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n  this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n  return closestPoint;\n};\n\n\n/**\n * Returns true if this geometry includes the specified coordinate. If the\n * coordinate is on the boundary of the geometry, returns false.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} Contains coordinate.\n * @api\n */\nGeometry.prototype.intersectsCoordinate = function(coordinate) {\n  return this.containsXY(coordinate[0], coordinate[1]);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @protected\n * @return {module:ol/extent~Extent} extent Extent.\n */\nGeometry.prototype.computeExtent = function(extent) {};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * Get the extent of the geometry.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} extent Extent.\n * @api\n */\nGeometry.prototype.getExtent = function(opt_extent) {\n  if (this.extentRevision_ != this.getRevision()) {\n    this.extent_ = this.computeExtent(this.extent_);\n    this.extentRevision_ = this.getRevision();\n  }\n  return returnOrUpdate(this.extent_, opt_extent);\n};\n\n\n/**\n * Rotate the geometry around a given coordinate. This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} angle Rotation angle in radians.\n * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n * @api\n */\nGeometry.prototype.rotate = function(angle, anchor) {};\n\n\n/**\n * Scale the geometry (with an optional origin).  This modifies the geometry\n * coordinates in place.\n * @abstract\n * @param {number} sx The scaling factor in the x-direction.\n * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n *     sx).\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n *     of the geometry extent).\n * @api\n */\nGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {};\n\n\n/**\n * Create a simplified version of this geometry.  For linestrings, this uses\n * the the {@link\n * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * Douglas Peucker} algorithm.  For polygons, a quantization-based\n * simplification is used to preserve topology.\n * @function\n * @param {number} tolerance The tolerance distance for simplification.\n * @return {module:ol/geom/Geometry} A new, simplified version of the original\n *     geometry.\n * @api\n */\nGeometry.prototype.simplify = function(tolerance) {\n  return this.getSimplifiedGeometry(tolerance * tolerance);\n};\n\n\n/**\n * Create a simplified version of this geometry using the Douglas Peucker\n * algorithm.\n * @see https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n * @abstract\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/Geometry} Simplified geometry.\n */\nGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {};\n\n\n/**\n * Get the type of this geometry.\n * @abstract\n * @return {module:ol/geom/GeometryType} Geometry type.\n */\nGeometry.prototype.getType = function() {};\n\n\n/**\n * Apply a transform function to each coordinate of the geometry.\n * The geometry is modified in place.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n * @abstract\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nGeometry.prototype.applyTransform = function(transformFn) {};\n\n\n/**\n * Test if the geometry and the passed extent intersect.\n * @abstract\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} `true` if the geometry and the extent intersect.\n */\nGeometry.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Translate the geometry.  This modifies the geometry coordinates in place.  If\n * instead you want a new geometry, first `clone()` this geometry.\n * @abstract\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n */\nGeometry.prototype.translate = function(deltaX, deltaY) {};\n\n\n/**\n * Transform each coordinate of the geometry from one coordinate reference\n * system to another. The geometry is modified in place.\n * For example, a line will be transformed to a line and a circle to a circle.\n * If you do not want the geometry modified in place, first `clone()` it and\n * then use this function on the clone.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n *     modified in place.\n * @api\n */\nGeometry.prototype.transform = function(source, destination) {\n  source = getProjection(source);\n  const transformFn = source.getUnits() == Units.TILE_PIXELS ?\n    function(inCoordinates, outCoordinates, stride) {\n      const pixelExtent = source.getExtent();\n      const projectedExtent = source.getWorldExtent();\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(tmpTransform,\n        projectedExtent[0], projectedExtent[3],\n        scale, -scale, 0,\n        0, 0);\n      transform2D(inCoordinates, 0, inCoordinates.length, stride,\n        tmpTransform, outCoordinates);\n      return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n    } :\n    getTransform(source, destination);\n  this.applyTransform(transformFn);\n  return this;\n};\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {inherits} from '../util.js';\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/geom/Geometry}\n * @api\n */\nconst SimpleGeometry = function() {\n\n  Geometry.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/geom/GeometryLayout}\n   */\n  this.layout = GeometryLayout.XY;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.stride = 2;\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.flatCoordinates = null;\n\n};\n\ninherits(SimpleGeometry, Geometry);\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n    0, this.flatCoordinates.length, this.stride, extent);\n};\n\n\n/**\n * @abstract\n * @return {Array} Coordinates.\n */\nSimpleGeometry.prototype.getCoordinates = function() {};\n\n\n/**\n * Return the first coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} First coordinate.\n * @api\n */\nSimpleGeometry.prototype.getFirstCoordinate = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat coordinates.\n */\nSimpleGeometry.prototype.getFlatCoordinates = function() {\n  return this.flatCoordinates;\n};\n\n\n/**\n * Return the last coordinate of the geometry.\n * @return {module:ol/coordinate~Coordinate} Last point.\n * @api\n */\nSimpleGeometry.prototype.getLastCoordinate = function() {\n  return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n};\n\n\n/**\n * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n * @return {module:ol/geom/GeometryLayout} Layout.\n * @api\n */\nSimpleGeometry.prototype.getLayout = function() {\n  return this.layout;\n};\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  // If squaredTolerance is negative or if we know that simplification will not\n  // have any effect then just return this.\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      this.simplifiedGeometryCache[key] = simplifiedGeometry;\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n * @protected\n */\nSimpleGeometry.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  return this;\n};\n\n\n/**\n * @return {number} Stride.\n */\nSimpleGeometry.prototype.getStride = function() {\n  return this.stride;\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @protected\n */\nSimpleGeometry.prototype.setFlatCoordinatesInternal = function(layout, flatCoordinates) {\n  this.stride = getStrideForLayout(layout);\n  this.layout = layout;\n  this.flatCoordinates = flatCoordinates;\n};\n\n\n/**\n * @abstract\n * @param {Array} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n */\nSimpleGeometry.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n * @param {Array} coordinates Coordinates.\n * @param {number} nesting Nesting.\n * @protected\n */\nSimpleGeometry.prototype.setLayout = function(layout, coordinates, nesting) {\n  /** @type {number} */\n  let stride;\n  if (layout) {\n    stride = getStrideForLayout(layout);\n  } else {\n    for (let i = 0; i < nesting; ++i) {\n      if (coordinates.length === 0) {\n        this.layout = GeometryLayout.XY;\n        this.stride = 2;\n        return;\n      } else {\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n    }\n    stride = coordinates.length;\n    layout = getLayoutForStride(stride);\n  }\n  this.layout = layout;\n  this.stride = stride;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.applyTransform = function(transformFn) {\n  if (this.flatCoordinates) {\n    transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.rotate = function(angle, anchor) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    rotate(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, angle, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let sy = opt_sy;\n  if (sy === undefined) {\n    sy = sx;\n  }\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    scale(\n      flatCoordinates, 0, flatCoordinates.length,\n      stride, sx, sy, anchor, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nSimpleGeometry.prototype.translate = function(deltaX, deltaY) {\n  const flatCoordinates = this.getFlatCoordinates();\n  if (flatCoordinates) {\n    const stride = this.getStride();\n    translate(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      deltaX, deltaY, flatCoordinates);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array.<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array.<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array.<number>=} opt_ends Ends.\n * @return {Array.<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<number>>=} opt_endss Endss.\n * @return {Array.<Array.<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array.<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array.<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array.<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array.<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array.<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array.<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array.<Array.<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {inherits} from '../util.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LinearRing = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LinearRing, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LinearRing} Clone.\n * @override\n * @api\n */\nLinearRing.prototype.clone = function() {\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return linearRing;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Return the area of the linear ring on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nLinearRing.prototype.getArea = function() {\n  return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinates of the linear ring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLinearRing.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLinearRing = new LinearRing(null);\n  simplifiedLinearRing.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLinearRing;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLinearRing.prototype.getType = function() {\n  return GeometryType.LINEAR_RING;\n};\n\n\n/**\n * @inheritDoc\n */\nLinearRing.prototype.intersectsExtent = function(extent) {};\n\n\n/**\n * Set the coordinates of the linear ring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLinearRing.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLinearRing.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Point = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(Point, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Point} Clone.\n * @override\n * @api\n */\nPoint.prototype.clone = function() {\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return point;\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n  if (squaredDistance < minSquaredDistance) {\n    const stride = this.stride;\n    for (let i = 0; i < stride; ++i) {\n      closestPoint[i] = flatCoordinates[i];\n    }\n    closestPoint.length = stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * Return the coordinate of the point.\n * @return {module:ol/coordinate~Coordinate} Coordinates.\n * @override\n * @api\n */\nPoint.prototype.getCoordinates = function() {\n  return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n};\n\n\n/**\n * @inheritDoc\n */\nPoint.prototype.computeExtent = function(extent) {\n  return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.getType = function() {\n  return GeometryType.POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.intersectsExtent = function(extent) {\n  return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array.<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array.<number>} flatCenters Flat centers.\n * @return {Array.<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Array of linear\n *     rings that define the polygon. The first linear ring of the array\n *     defines the outer-boundary or surface of the polygon. Each subsequent\n *     linear ring defines a hole in the surface of the polygon. A linear ring\n *     is an array of vertices' coordinates where the first coordinate and the\n *     last are equivalent.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Polygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatInteriorPoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(Polygon, SimpleGeometry);\n\n\n/**\n * Append the passed linear ring to this polygon.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @api\n */\nPolygon.prototype.appendLinearRing = function(linearRing) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Polygon} Clone.\n * @override\n * @api\n */\nPolygon.prototype.clone = function() {\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return polygon;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.containsXY = function(x, y) {\n  return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the polygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nPolygon.prototype.getArea = function() {\n  return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRings(\n      flatCoordinates, 0, this.ends_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateCoordinatesArray(\n    flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nPolygon.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array.<number>} Interior point.\n */\nPolygon.prototype.getFlatInteriorPoint = function() {\n  if (this.flatInteriorPointRevision_ != this.getRevision()) {\n    const flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoint_ = getInteriorPointOfArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n      flatCenter, 0);\n    this.flatInteriorPointRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoint_;\n};\n\n\n/**\n * Return an interior point of the polygon.\n * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n * @api\n */\nPolygon.prototype.getInteriorPoint = function() {\n  return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n};\n\n\n/**\n * Return the number of rings of the polygon,  this includes the exterior\n * ring and any interior rings.\n *\n * @return {number} Number of rings.\n * @api\n */\nPolygon.prototype.getLinearRingCount = function() {\n  return this.ends_.length;\n};\n\n\n/**\n * Return the Nth linear ring of the polygon geometry. Return `null` if the\n * given index is out of range.\n * The exterior linear ring is available at index `0` and the interior rings\n * at index `1` and beyond.\n *\n * @param {number} index Index.\n * @return {module:ol/geom/LinearRing} Linear ring.\n * @api\n */\nPolygon.prototype.getLinearRing = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const linearRing = new LinearRing(null);\n  linearRing.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return linearRing;\n};\n\n\n/**\n * Return the linear rings of the polygon.\n * @return {Array.<module:ol/geom/LinearRing>} Linear rings.\n * @api\n */\nPolygon.prototype.getLinearRings = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const linearRings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const linearRing = new LinearRing(null);\n    linearRing.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    linearRings.push(linearRing);\n    offset = end;\n  }\n  return linearRings;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingIsOriented(\n      flatCoordinates, 0, this.ends_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRings(\n            this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = quantizeArray(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedPolygon = new Polygon(null);\n  simplifiedPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedPolygon;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.getType = function() {\n  return GeometryType.POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingArray(\n    this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the polygon.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array.<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    GeometryLayout.XY, flatCoordinates, [flatCoordinates.length]);\n  return polygon;\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const polygon = new Polygon(null, layout);\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i++) {\n    flatCoordinates[i] = 0;\n  }\n  const ends = [flatCoordinates.length];\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n  makeRegular(polygon, circle.getCenter(), circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const layout = polygon.getLayout();\n  const stride = polygon.getStride();\n  const ends = polygon.getEnds();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.setFlatCoordinates(layout, flatCoordinates, ends);\n}\n","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid, inherits} from './util.js';\nimport {UNDEFINED} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [sourceRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array.<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array.<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/View~ViewOptions=} opt_options View options.\n * @api\n */\nconst View = function(opt_options) {\n  BaseObject.call(this);\n\n  const options = assign({}, opt_options);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.hints_ = [0, 0];\n\n  /**\n   * @private\n   * @type {Array.<Array.<module:ol/View~Animation>>}\n   */\n  this.animations_ = [];\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.updateAnimationKey_;\n\n  this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n  /**\n   * @private\n   * @const\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n  this.applyOptions_(options);\n};\n\ninherits(View, BaseObject);\n\n\n/**\n * Set up the view with the given options.\n * @param {module:ol/View~ViewOptions} options View options.\n */\nView.prototype.applyOptions_ = function(options) {\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = {};\n  properties[ViewProperty.CENTER] = options.center !== undefined ?\n    options.center : null;\n\n  const resolutionConstraintInfo = createResolutionConstraint(options);\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n  /**\n   * @private\n   * @type {Array.<number>|undefined}\n   */\n  this.resolutions_ = options.resolutions;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n  const centerConstraint = createCenterConstraint(options);\n  const resolutionConstraint = resolutionConstraintInfo.constraint;\n  const rotationConstraint = createRotationConstraint(options);\n\n  /**\n   * @private\n   * @type {module:ol/View~Constraints}\n   */\n  this.constraints_ = {\n    center: centerConstraint,\n    resolution: resolutionConstraint,\n    rotation: rotationConstraint\n  };\n\n  if (options.resolution !== undefined) {\n    properties[ViewProperty.RESOLUTION] = options.resolution;\n  } else if (options.zoom !== undefined) {\n    properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n      this.maxResolution_, options.zoom - this.minZoom_);\n\n    if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n      properties[ViewProperty.RESOLUTION] = clamp(\n        Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n        this.minResolution_, this.maxResolution_);\n    }\n  }\n  properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n  this.setProperties(properties);\n\n  /**\n   * @private\n   * @type {module:ol/View~ViewOptions}\n   */\n  this.options_ = options;\n\n};\n\n/**\n * Get an updated version of the view options used to construct the view.  The\n * current resolution (or zoom), center, and rotation are applied to any stored\n * options.  The provided options can be used to apply new min/max zoom or\n * resolution limits.\n * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n */\nView.prototype.getUpdatedOptions_ = function(newOptions) {\n  const options = assign({}, this.options_);\n\n  // preserve resolution (or zoom)\n  if (options.resolution !== undefined) {\n    options.resolution = this.getResolution();\n  } else {\n    options.zoom = this.getZoom();\n  }\n\n  // preserve center\n  options.center = this.getCenter();\n\n  // preserve rotation\n  options.rotation = this.getRotation();\n\n  return assign({}, options, newOptions);\n};\n\n\n/**\n * Animate the view.  The view's center, zoom (or resolution), and rotation\n * can be animated for smooth transitions between view states.  For example,\n * to animate the view to a new zoom level:\n *\n *     view.animate({zoom: view.getZoom() + 1});\n *\n * By default, the animation lasts one second and uses in-and-out easing.  You\n * can customize this behavior by including `duration` (in milliseconds) and\n * `easing` options (see {@link module:ol/easing}).\n *\n * To chain together multiple animations, call the method with multiple\n * animation objects.  For example, to first zoom and then pan:\n *\n *     view.animate({zoom: 10}, {center: [0, 0]});\n *\n * If you provide a function as the last argument to the animate method, it\n * will get called at the end of an animation series.  The callback will be\n * called with `true` if the animation series completed on its own or `false`\n * if it was cancelled.\n *\n * Animations are cancelled by user interactions (e.g. dragging the map) or by\n * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n * (or another method that calls one of these).\n *\n * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n *     options.  Multiple animations can be run in series by passing multiple\n *     options objects.  To run multiple animations in parallel, call the method\n *     multiple times.  An optional callback can be provided as a final\n *     argument.  The callback will be called with a boolean indicating whether\n *     the animation completed without being cancelled.\n * @api\n */\nView.prototype.animate = function(var_args) {\n  let animationCount = arguments.length;\n  let callback;\n  if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n    callback = arguments[animationCount - 1];\n    --animationCount;\n  }\n  if (!this.isDef()) {\n    // if view properties are not yet set, shortcut to the final state\n    const state = arguments[animationCount - 1];\n    if (state.center) {\n      this.setCenter(state.center);\n    }\n    if (state.zoom !== undefined) {\n      this.setZoom(state.zoom);\n    }\n    if (state.rotation !== undefined) {\n      this.setRotation(state.rotation);\n    }\n    if (callback) {\n      setTimeout(function() {\n        callback(true);\n      }, 0);\n    }\n    return;\n  }\n  let start = Date.now();\n  let center = this.getCenter().slice();\n  let resolution = this.getResolution();\n  let rotation = this.getRotation();\n  const series = [];\n  for (let i = 0; i < animationCount; ++i) {\n    const options = /** @type {module:ol/View~AnimationOptions} */ (arguments[i]);\n\n    const animation = /** @type {module:ol/View~Animation} */ ({\n      start: start,\n      complete: false,\n      anchor: options.anchor,\n      duration: options.duration !== undefined ? options.duration : 1000,\n      easing: options.easing || inAndOut\n    });\n\n    if (options.center) {\n      animation.sourceCenter = center;\n      animation.targetCenter = options.center;\n      center = animation.targetCenter;\n    }\n\n    if (options.zoom !== undefined) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_, 0);\n      resolution = animation.targetResolution;\n    } else if (options.resolution) {\n      animation.sourceResolution = resolution;\n      animation.targetResolution = options.resolution;\n      resolution = animation.targetResolution;\n    }\n\n    if (options.rotation !== undefined) {\n      animation.sourceRotation = rotation;\n      const delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n      animation.targetRotation = rotation + delta;\n      rotation = animation.targetRotation;\n    }\n\n    animation.callback = callback;\n\n    // check if animation is a no-op\n    if (isNoopAnimation(animation)) {\n      animation.complete = true;\n      // we still push it onto the series for callback handling\n    } else {\n      start += animation.duration;\n    }\n    series.push(animation);\n  }\n  this.animations_.push(series);\n  this.setHint(ViewHint.ANIMATING, 1);\n  this.updateAnimations_();\n};\n\n\n/**\n * Determine if the view is being animated.\n * @return {boolean} The view is being animated.\n * @api\n */\nView.prototype.getAnimating = function() {\n  return this.hints_[ViewHint.ANIMATING] > 0;\n};\n\n\n/**\n * Determine if the user is interacting with the view, such as panning or zooming.\n * @return {boolean} The view is being interacted with.\n * @api\n */\nView.prototype.getInteracting = function() {\n  return this.hints_[ViewHint.INTERACTING] > 0;\n};\n\n\n/**\n * Cancel any ongoing animations.\n * @api\n */\nView.prototype.cancelAnimations = function() {\n  this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n  for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n    const series = this.animations_[i];\n    if (series[0].callback) {\n      series[0].callback(false);\n    }\n  }\n  this.animations_.length = 0;\n};\n\n/**\n * Update all animations.\n */\nView.prototype.updateAnimations_ = function() {\n  if (this.updateAnimationKey_ !== undefined) {\n    cancelAnimationFrame(this.updateAnimationKey_);\n    this.updateAnimationKey_ = undefined;\n  }\n  if (!this.getAnimating()) {\n    return;\n  }\n  const now = Date.now();\n  let more = false;\n  for (let i = this.animations_.length - 1; i >= 0; --i) {\n    const series = this.animations_[i];\n    let seriesComplete = true;\n    for (let j = 0, jj = series.length; j < jj; ++j) {\n      const animation = series[j];\n      if (animation.complete) {\n        continue;\n      }\n      const elapsed = now - animation.start;\n      let fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n      if (fraction >= 1) {\n        animation.complete = true;\n        fraction = 1;\n      } else {\n        seriesComplete = false;\n      }\n      const progress = animation.easing(fraction);\n      if (animation.sourceCenter) {\n        const x0 = animation.sourceCenter[0];\n        const y0 = animation.sourceCenter[1];\n        const x1 = animation.targetCenter[0];\n        const y1 = animation.targetCenter[1];\n        const x = x0 + progress * (x1 - x0);\n        const y = y0 + progress * (y1 - y0);\n        this.set(ViewProperty.CENTER, [x, y]);\n      }\n      if (animation.sourceResolution && animation.targetResolution) {\n        const resolution = progress === 1 ?\n          animation.targetResolution :\n          animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterZoom(resolution, animation.anchor));\n        }\n        this.set(ViewProperty.RESOLUTION, resolution);\n      }\n      if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n        const rotation = progress === 1 ?\n          modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n          animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n        if (animation.anchor) {\n          this.set(ViewProperty.CENTER,\n            this.calculateCenterRotate(rotation, animation.anchor));\n        }\n        this.set(ViewProperty.ROTATION, rotation);\n      }\n      more = true;\n      if (!animation.complete) {\n        break;\n      }\n    }\n    if (seriesComplete) {\n      this.animations_[i] = null;\n      this.setHint(ViewHint.ANIMATING, -1);\n      const callback = series[0].callback;\n      if (callback) {\n        setTimeout(function() {\n          callback(true);\n        }, 0);\n      }\n    }\n  }\n  // prune completed series\n  this.animations_ = this.animations_.filter(Boolean);\n  if (more && this.updateAnimationKey_ === undefined) {\n    this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n  }\n};\n\n/**\n * @param {number} rotation Target rotation.\n * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n */\nView.prototype.calculateCenterRotate = function(rotation, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  if (currentCenter !== undefined) {\n    center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n    rotateCoordinate(center, rotation - this.getRotation());\n    addCoordinate(center, anchor);\n  }\n  return center;\n};\n\n\n/**\n * @param {number} resolution Target resolution.\n * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n */\nView.prototype.calculateCenterZoom = function(resolution, anchor) {\n  let center;\n  const currentCenter = this.getCenter();\n  const currentResolution = this.getResolution();\n  if (currentCenter !== undefined && currentResolution !== undefined) {\n    const x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n    const y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n    center = [x, y];\n  }\n  return center;\n};\n\n\n/**\n * @private\n * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n */\nView.prototype.getSizeFromViewport_ = function() {\n  const size = [100, 100];\n  const selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n  const element = document.querySelector(selector);\n  if (element) {\n    const metrics = getComputedStyle(element);\n    size[0] = parseInt(metrics.width, 10);\n    size[1] = parseInt(metrics.height, 10);\n  }\n  return size;\n};\n\n\n/**\n * Get the constrained center of this view.\n * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n * @api\n */\nView.prototype.constrainCenter = function(center) {\n  return this.constraints_.center(center);\n};\n\n\n/**\n * Get the constrained resolution of this view.\n * @param {number|undefined} resolution Resolution.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @param {number=} opt_direction Direction. Default is `0`.\n * @return {number|undefined} Constrained resolution.\n * @api\n */\nView.prototype.constrainResolution = function(resolution, opt_delta, opt_direction) {\n  const delta = opt_delta || 0;\n  const direction = opt_direction || 0;\n  return this.constraints_.resolution(resolution, delta, direction);\n};\n\n\n/**\n * Get the constrained rotation of this view.\n * @param {number|undefined} rotation Rotation.\n * @param {number=} opt_delta Delta. Default is `0`.\n * @return {number|undefined} Constrained rotation.\n * @api\n */\nView.prototype.constrainRotation = function(rotation, opt_delta) {\n  const delta = opt_delta || 0;\n  return this.constraints_.rotation(rotation, delta);\n};\n\n\n/**\n * Get the view center.\n * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n * @observable\n * @api\n */\nView.prototype.getCenter = function() {\n  return (\n    /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n  );\n};\n\n\n/**\n * @return {module:ol/View~Constraints} Constraints.\n */\nView.prototype.getConstraints = function() {\n  return this.constraints_;\n};\n\n\n/**\n * @param {Array.<number>=} opt_hints Destination array.\n * @return {Array.<number>} Hint.\n */\nView.prototype.getHints = function(opt_hints) {\n  if (opt_hints !== undefined) {\n    opt_hints[0] = this.hints_[0];\n    opt_hints[1] = this.hints_[1];\n    return opt_hints;\n  } else {\n    return this.hints_.slice();\n  }\n};\n\n\n/**\n * Calculate the extent for the current view state and the passed size.\n * The size is the pixel dimensions of the box into which the calculated extent\n * should fit. In most cases you want to get the extent of the entire map,\n * that is `map.getSize()`.\n * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n * first map that uses this view will be used.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nView.prototype.calculateExtent = function(opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n  assert(center, 1); // The view center is not defined\n  const resolution = /** @type {!number} */ (this.getResolution());\n  assert(resolution !== undefined, 2); // The view resolution is not defined\n  const rotation = /** @type {!number} */ (this.getRotation());\n  assert(rotation !== undefined, 3); // The view rotation is not defined\n\n  return getForViewAndSize(center, resolution, rotation, size);\n};\n\n\n/**\n * Get the maximum resolution of the view.\n * @return {number} The maximum resolution of the view.\n * @api\n */\nView.prototype.getMaxResolution = function() {\n  return this.maxResolution_;\n};\n\n\n/**\n * Get the minimum resolution of the view.\n * @return {number} The minimum resolution of the view.\n * @api\n */\nView.prototype.getMinResolution = function() {\n  return this.minResolution_;\n};\n\n\n/**\n * Get the maximum zoom level for the view.\n * @return {number} The maximum zoom level.\n * @api\n */\nView.prototype.getMaxZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n};\n\n\n/**\n * Set a new maximum zoom level for the view.\n * @param {number} zoom The maximum zoom level.\n * @api\n */\nView.prototype.setMaxZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n};\n\n\n/**\n * Get the minimum zoom level for the view.\n * @return {number} The minimum zoom level.\n * @api\n */\nView.prototype.getMinZoom = function() {\n  return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n};\n\n\n/**\n * Set a new minimum zoom level for the view.\n * @param {number} zoom The minimum zoom level.\n * @api\n */\nView.prototype.setMinZoom = function(zoom) {\n  this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n};\n\n\n/**\n * Get the view projection.\n * @return {module:ol/proj/Projection} The projection of the view.\n * @api\n */\nView.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * Get the view resolution.\n * @return {number|undefined} The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.getResolution = function() {\n  return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n};\n\n\n/**\n * Get the resolutions for the view. This returns the array of resolutions\n * passed to the constructor of the View, or undefined if none were given.\n * @return {Array.<number>|undefined} The resolutions of the view.\n * @api\n */\nView.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * Get the resolution for a provided extent (in map units) and size (in pixels).\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/size~Size=} opt_size Box pixel size.\n * @return {number} The resolution at which the provided extent will render at\n *     the given size.\n * @api\n */\nView.prototype.getResolutionForExtent = function(extent, opt_size) {\n  const size = opt_size || this.getSizeFromViewport_();\n  const xResolution = getWidth(extent) / size[0];\n  const yResolution = getHeight(extent) / size[1];\n  return Math.max(xResolution, yResolution);\n};\n\n\n/**\n * Return a function that returns a value between 0 and 1 for a\n * resolution. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Resolution for value function.\n */\nView.prototype.getResolutionForValueFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} value Value.\n     * @return {number} Resolution.\n     */\n    function(value) {\n      const resolution = maxResolution / Math.pow(power, value * max);\n      return resolution;\n    });\n};\n\n\n/**\n * Get the view rotation.\n * @return {number} The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.getRotation = function() {\n  return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n};\n\n\n/**\n * Return a function that returns a resolution for a value between\n * 0 and 1. Exponential scaling is assumed.\n * @param {number=} opt_power Power.\n * @return {function(number): number} Value for resolution function.\n */\nView.prototype.getValueForResolutionFunction = function(opt_power) {\n  const power = opt_power || 2;\n  const maxResolution = this.maxResolution_;\n  const minResolution = this.minResolution_;\n  const max = Math.log(maxResolution / minResolution) / Math.log(power);\n  return (\n    /**\n     * @param {number} resolution Resolution.\n     * @return {number} Value.\n     */\n    function(resolution) {\n      const value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n      return value;\n    });\n};\n\n\n/**\n * @return {module:ol/View~State} View state.\n */\nView.prototype.getState = function() {\n  const center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n  const projection = this.getProjection();\n  const resolution = /** @type {number} */ (this.getResolution());\n  const rotation = this.getRotation();\n  return (\n    /** @type {module:ol/View~State} */ ({\n      center: center.slice(),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      rotation: rotation,\n      zoom: this.getZoom()\n    })\n  );\n};\n\n\n/**\n * Get the current zoom level.  If you configured your view with a resolutions\n * array (this is rare), this method may return non-integer zoom levels (so\n * the zoom level is not safe to use as an index into a resolutions array).\n * @return {number|undefined} Zoom.\n * @api\n */\nView.prototype.getZoom = function() {\n  let zoom;\n  const resolution = this.getResolution();\n  if (resolution !== undefined) {\n    zoom = this.getZoomForResolution(resolution);\n  }\n  return zoom;\n};\n\n\n/**\n * Get the zoom level for a resolution.\n * @param {number} resolution The resolution.\n * @return {number|undefined} The zoom level for the provided resolution.\n * @api\n */\nView.prototype.getZoomForResolution = function(resolution) {\n  let offset = this.minZoom_ || 0;\n  let max, zoomFactor;\n  if (this.resolutions_) {\n    const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n    offset = nearest;\n    max = this.resolutions_[nearest];\n    if (nearest == this.resolutions_.length - 1) {\n      zoomFactor = 2;\n    } else {\n      zoomFactor = max / this.resolutions_[nearest + 1];\n    }\n  } else {\n    max = this.maxResolution_;\n    zoomFactor = this.zoomFactor_;\n  }\n  return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n};\n\n\n/**\n * Get the resolution for a zoom level.\n * @param {number} zoom Zoom level.\n * @return {number} The view resolution for the provided zoom level.\n * @api\n */\nView.prototype.getResolutionForZoom = function(zoom) {\n  return /** @type {number} */ (this.constrainResolution(\n    this.maxResolution_, zoom - this.minZoom_, 0));\n};\n\n\n/**\n * Fit the given geometry or extent based on the given map size and border.\n * The size is pixel dimensions of the box to fit the extent into.\n * In most cases you will want to use the map size, that is `map.getSize()`.\n * Takes care of the map angle.\n * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n *     extent to fit the view to.\n * @param {module:ol/View~FitOptions=} opt_options Options.\n * @api\n */\nView.prototype.fit = function(geometryOrExtent, opt_options) {\n  const options = opt_options || {};\n  let size = options.size;\n  if (!size) {\n    size = this.getSizeFromViewport_();\n  }\n  /** @type {module:ol/geom/SimpleGeometry} */\n  let geometry;\n  if (!(geometryOrExtent instanceof SimpleGeometry)) {\n    assert(Array.isArray(geometryOrExtent),\n      24); // Invalid extent or geometry provided as `geometry`\n    assert(!isEmpty(geometryOrExtent),\n      25); // Cannot fit empty extent provided as `geometry`\n    geometry = polygonFromExtent(geometryOrExtent);\n  } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n    geometryOrExtent = geometryOrExtent.getExtent();\n    geometry = polygonFromExtent(geometryOrExtent);\n    geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n  } else {\n    geometry = geometryOrExtent;\n  }\n\n  const padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n  const constrainResolution = options.constrainResolution !== undefined ?\n    options.constrainResolution : true;\n  const nearest = options.nearest !== undefined ? options.nearest : false;\n  let minResolution;\n  if (options.minResolution !== undefined) {\n    minResolution = options.minResolution;\n  } else if (options.maxZoom !== undefined) {\n    minResolution = this.constrainResolution(\n      this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n  } else {\n    minResolution = 0;\n  }\n  const coords = geometry.getFlatCoordinates();\n\n  // calculate rotated extent\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let minRotX = +Infinity;\n  let minRotY = +Infinity;\n  let maxRotX = -Infinity;\n  let maxRotY = -Infinity;\n  const stride = geometry.getStride();\n  for (let i = 0, ii = coords.length; i < ii; i += stride) {\n    const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n    const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n    minRotX = Math.min(minRotX, rotX);\n    minRotY = Math.min(minRotY, rotY);\n    maxRotX = Math.max(maxRotX, rotX);\n    maxRotY = Math.max(maxRotY, rotY);\n  }\n\n  // calculate resolution\n  let resolution = this.getResolutionForExtent(\n    [minRotX, minRotY, maxRotX, maxRotY],\n    [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n  resolution = isNaN(resolution) ? minResolution :\n    Math.max(resolution, minResolution);\n  if (constrainResolution) {\n    let constrainedResolution = this.constrainResolution(resolution, 0, 0);\n    if (!nearest && constrainedResolution < resolution) {\n      constrainedResolution = this.constrainResolution(\n        constrainedResolution, -1, 0);\n    }\n    resolution = constrainedResolution;\n  }\n\n  // calculate center\n  sinAngle = -sinAngle; // go back to original rotation\n  let centerRotX = (minRotX + maxRotX) / 2;\n  let centerRotY = (minRotY + maxRotY) / 2;\n  centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n  centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n  const centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n  const centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n  const center = [centerX, centerY];\n  const callback = options.callback ? options.callback : UNDEFINED;\n\n  if (options.duration !== undefined) {\n    this.animate({\n      resolution: resolution,\n      center: center,\n      duration: options.duration,\n      easing: options.easing\n    }, callback);\n  } else {\n    this.setResolution(resolution);\n    this.setCenter(center);\n    setTimeout(callback.bind(undefined, true), 0);\n  }\n};\n\n\n/**\n * Center on coordinate and view position.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/size~Size} size Box pixel size.\n * @param {module:ol~Pixel} position Position on the view to center on.\n * @api\n */\nView.prototype.centerOn = function(coordinate, size, position) {\n  // calculate rotated position\n  const rotation = this.getRotation();\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  const resolution = this.getResolution();\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  this.setCenter([centerX, centerY]);\n};\n\n\n/**\n * @return {boolean} Is defined.\n */\nView.prototype.isDef = function() {\n  return !!this.getCenter() && this.getResolution() !== undefined;\n};\n\n\n/**\n * Rotate the view around a given coordinate.\n * @param {number} rotation New rotation value for the view.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n * @api\n */\nView.prototype.rotate = function(rotation, opt_anchor) {\n  if (opt_anchor !== undefined) {\n    const center = this.calculateCenterRotate(rotation, opt_anchor);\n    this.setCenter(center);\n  }\n  this.setRotation(rotation);\n};\n\n\n/**\n * Set the center of the current view.\n * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n * @observable\n * @api\n */\nView.prototype.setCenter = function(center) {\n  this.set(ViewProperty.CENTER, center);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * @param {module:ol/ViewHint} hint Hint.\n * @param {number} delta Delta.\n * @return {number} New value.\n */\nView.prototype.setHint = function(hint, delta) {\n  this.hints_[hint] += delta;\n  this.changed();\n  return this.hints_[hint];\n};\n\n\n/**\n * Set the resolution for this view.\n * @param {number|undefined} resolution The resolution of the view.\n * @observable\n * @api\n */\nView.prototype.setResolution = function(resolution) {\n  this.set(ViewProperty.RESOLUTION, resolution);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Set the rotation for this view.\n * @param {number} rotation The rotation of the view in radians.\n * @observable\n * @api\n */\nView.prototype.setRotation = function(rotation) {\n  this.set(ViewProperty.ROTATION, rotation);\n  if (this.getAnimating()) {\n    this.cancelAnimations();\n  }\n};\n\n\n/**\n * Zoom to a specific zoom level.\n * @param {number} zoom Zoom level.\n * @api\n */\nView.prototype.setZoom = function(zoom) {\n  this.setResolution(this.getResolutionForZoom(zoom));\n};\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    const projection = createProjection(options.projection, 'EPSG:3857');\n    const extent = projection.getExtent();\n    const size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    const defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!Element} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!Element} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/layer/Base\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/layer/Base~Options} options Layer options.\n * @api\n */\nconst BaseLayer = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const properties = assign({}, options);\n  properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n  properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n  properties[LayerProperty.Z_INDEX] =\n      options.zIndex !== undefined ? options.zIndex : 0;\n  properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n  properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n\n  this.setProperties(properties);\n\n  /**\n   * @type {module:ol/layer/Layer~State}\n   * @private\n   */\n  this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n    layer: /** @type {module:ol/layer/Layer} */ (this),\n    managed: true\n  });\n\n  /**\n   * The layer type.\n   * @type {module:ol/LayerType}\n   * @protected;\n   */\n  this.type;\n\n};\n\ninherits(BaseLayer, BaseObject);\n\n\n/**\n * Get the layer type (used when creating a layer renderer).\n * @return {module:ol/LayerType} The layer type.\n */\nBaseLayer.prototype.getType = function() {\n  return this.type;\n};\n\n\n/**\n * @return {module:ol/layer/Layer~State} Layer state.\n */\nBaseLayer.prototype.getLayerState = function() {\n  this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n  this.state_.sourceState = this.getSourceState();\n  this.state_.visible = this.getVisible();\n  this.state_.extent = this.getExtent();\n  this.state_.zIndex = this.getZIndex();\n  this.state_.maxResolution = this.getMaxResolution();\n  this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n  return this.state_;\n};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer>=} opt_array Array of layers (to be\n *     modified in place).\n * @return {Array.<module:ol/layer/Layer>} Array of layers.\n */\nBaseLayer.prototype.getLayersArray = function(opt_array) {};\n\n\n/**\n * @abstract\n * @param {Array.<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n *     states (to be modified in place).\n * @return {Array.<module:ol/layer/Layer~State>} List of layer states.\n */\nBaseLayer.prototype.getLayerStatesArray = function(opt_states) {};\n\n\n/**\n * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n * will be visible regardless of extent.\n * @return {module:ol/extent~Extent|undefined} The layer extent.\n * @observable\n * @api\n */\nBaseLayer.prototype.getExtent = function() {\n  return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n  );\n};\n\n\n/**\n * Return the maximum resolution of the layer.\n * @return {number} The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMaxResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n};\n\n\n/**\n * Return the minimum resolution of the layer.\n * @return {number} The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getMinResolution = function() {\n  return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n};\n\n\n/**\n * Return the opacity of the layer (between 0 and 1).\n * @return {number} The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getOpacity = function() {\n  return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n};\n\n\n/**\n * @abstract\n * @return {module:ol/source/State} Source state.\n */\nBaseLayer.prototype.getSourceState = function() {};\n\n\n/**\n * Return the visibility of the layer (`true` or `false`).\n * @return {boolean} The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getVisible = function() {\n  return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n};\n\n\n/**\n * Return the Z-index of the layer, which is used to order layers before\n * rendering. The default Z-index is 0.\n * @return {number} The Z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.getZIndex = function() {\n  return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n};\n\n\n/**\n * Set the extent at which the layer is visible.  If `undefined`, the layer\n * will be visible at all extents.\n * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setExtent = function(extent) {\n  this.set(LayerProperty.EXTENT, extent);\n};\n\n\n/**\n * Set the maximum resolution at which the layer is visible.\n * @param {number} maxResolution The maximum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMaxResolution = function(maxResolution) {\n  this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n};\n\n\n/**\n * Set the minimum resolution at which the layer is visible.\n * @param {number} minResolution The minimum resolution of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setMinResolution = function(minResolution) {\n  this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n};\n\n\n/**\n * Set the opacity of the layer, allowed values range from 0 to 1.\n * @param {number} opacity The opacity of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setOpacity = function(opacity) {\n  this.set(LayerProperty.OPACITY, opacity);\n};\n\n\n/**\n * Set the visibility of the layer (`true` or `false`).\n * @param {boolean} visible The visibility of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setVisible = function(visible) {\n  this.set(LayerProperty.VISIBLE, visible);\n};\n\n\n/**\n * Set Z-index of the layer, which is used to order layers before rendering.\n * The default Z-index is 0.\n * @param {number} zindex The z-index of the layer.\n * @observable\n * @api\n */\nBaseLayer.prototype.setZIndex = function(zindex) {\n  this.set(LayerProperty.Z_INDEX, zindex);\n};\nexport default BaseLayer;\n","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Group\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {(Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>)} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @constructor\n * @extends {module:ol/layer/Base}\n * @param {module:ol/layer/Group~Options=} opt_options Layer options.\n * @api\n */\nconst LayerGroup = function(opt_options) {\n\n  const options = opt_options || {};\n  const baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n  delete baseOptions.layers;\n\n  let layers = options.layers;\n\n  BaseLayer.call(this, baseOptions);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layersListenerKeys_ = [];\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.listenerKeys_ = {};\n\n  listen(this,\n    getChangeEventType(Property.LAYERS),\n    this.handleLayersChanged_, this);\n\n  if (layers) {\n    if (Array.isArray(layers)) {\n      layers = new Collection(layers.slice(), {unique: true});\n    } else {\n      assert(layers instanceof Collection,\n        43); // Expected `layers` to be an array or a `Collection`\n      layers = layers;\n    }\n  } else {\n    layers = new Collection(undefined, {unique: true});\n  }\n\n  this.setLayers(layers);\n\n};\n\ninherits(LayerGroup, BaseLayer);\n\n\n/**\n * @private\n */\nLayerGroup.prototype.handleLayerChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nLayerGroup.prototype.handleLayersChanged_ = function(event) {\n  this.layersListenerKeys_.forEach(unlistenByKey);\n  this.layersListenerKeys_.length = 0;\n\n  const layers = this.getLayers();\n  this.layersListenerKeys_.push(\n    listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n    listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n  );\n\n  for (const id in this.listenerKeys_) {\n    this.listenerKeys_[id].forEach(unlistenByKey);\n  }\n  clear(this.listenerKeys_);\n\n  const layersArray = layers.getArray();\n  for (let i = 0, ii = layersArray.length; i < ii; i++) {\n    const layer = layersArray[i];\n    this.listenerKeys_[getUid(layer).toString()] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n  }\n\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersAdd_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key] = [\n    listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n    listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n  ];\n  this.changed();\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n * @private\n */\nLayerGroup.prototype.handleLayersRemove_ = function(collectionEvent) {\n  const layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n  const key = getUid(layer).toString();\n  this.listenerKeys_[key].forEach(unlistenByKey);\n  delete this.listenerKeys_[key];\n  this.changed();\n};\n\n\n/**\n * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.getLayers = function() {\n  return (\n    /** @type {!module:ol/Collection.<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n  );\n};\n\n\n/**\n * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n * in this group.\n * @param {!module:ol/Collection.<module:ol/layer/Base>} layers Collection of\n *   {@link module:ol/layer/Base layers} that are part of this group.\n * @observable\n * @api\n */\nLayerGroup.prototype.setLayers = function(layers) {\n  this.set(Property.LAYERS, layers);\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array !== undefined ? opt_array : [];\n  this.getLayers().forEach(function(layer) {\n    layer.getLayersArray(array);\n  });\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states !== undefined ? opt_states : [];\n\n  const pos = states.length;\n\n  this.getLayers().forEach(function(layer) {\n    layer.getLayerStatesArray(states);\n  });\n\n  const ownLayerState = this.getLayerState();\n  for (let i = pos, ii = states.length; i < ii; i++) {\n    const layerState = states[i];\n    layerState.opacity *= ownLayerState.opacity;\n    layerState.visible = layerState.visible && ownLayerState.visible;\n    layerState.maxResolution = Math.min(\n      layerState.maxResolution, ownLayerState.maxResolution);\n    layerState.minResolution = Math.max(\n      layerState.minResolution, ownLayerState.minResolution);\n    if (ownLayerState.extent !== undefined) {\n      if (layerState.extent !== undefined) {\n        layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n      } else {\n        layerState.extent = ownLayerState.extent;\n      }\n    }\n  }\n\n  return states;\n};\n\n\n/**\n * @inheritDoc\n */\nLayerGroup.prototype.getSourceState = function() {\n  return SourceState.READY;\n};\n\nexport default LayerGroup;\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array.<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport {getUid, inherits} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object.<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array.<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array.<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object.<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object.<string, Object.<string, module:ol/TileRange>>} usedTiles\n * @property {Array.<number>} viewHints\n * @property {!Object.<string, Object.<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {((function(module:ol/layer/Layer): boolean)|undefined)} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection.<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>} [interactions]\n * @property {Element|Document} keyboardEventTarget\n * @property {module:ol/Collection.<module:ol/Overlay>} overlays\n * @property {Object.<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection.<module:ol/control/Control>|Array.<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection.<module:ol/interaction/Interaction>|Array.<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {Element|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array.<module:ol/layer/Base>|module:ol/Collection.<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection.<module:ol/Overlay>|Array.<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {Element|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst PluggableMap = function(options) {\n\n  BaseObject.call(this);\n\n  const optionsInternal = createOptionsInternal(options);\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileAnimating_ =\n      options.loadTilesWhileAnimating !== undefined ?\n        options.loadTilesWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.loadTilesWhileInteracting_ =\n      options.loadTilesWhileInteracting !== undefined ?\n        options.loadTilesWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = options.pixelRatio !== undefined ?\n    options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.animationDelayKey_;\n\n  /**\n   * @private\n   */\n  this.animationDelay_ = function() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_.call(this, Date.now());\n  }.bind(this);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToPixelTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.pixelToCoordinateTransform_ = createTransform();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.frameIndex_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/PluggableMap~FrameState}\n   */\n  this.frameState_ = null;\n\n  /**\n   * The extent at the previous 'moveend' event.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.previousExtent_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewPropertyListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.viewChangeListenerKey_ = null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.layerGroupPropertyListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.viewport_ = document.createElement('DIV');\n  this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n  this.viewport_.style.position = 'relative';\n  this.viewport_.style.overflow = 'hidden';\n  this.viewport_.style.width = '100%';\n  this.viewport_.style.height = '100%';\n  // prevent page zoom on IE >= 10 browsers\n  this.viewport_.style.msTouchAction = 'none';\n  this.viewport_.style.touchAction = 'none';\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainer_ = document.createElement('DIV');\n  this.overlayContainer_.className = 'ol-overlaycontainer';\n  this.viewport_.appendChild(this.overlayContainer_);\n\n  /**\n   * @private\n   * @type {!Element}\n   */\n  this.overlayContainerStopEvent_ = document.createElement('DIV');\n  this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n  const overlayEvents = [\n    EventType.CLICK,\n    EventType.DBLCLICK,\n    EventType.MOUSEDOWN,\n    EventType.TOUCHSTART,\n    EventType.MSPOINTERDOWN,\n    MapBrowserEventType.POINTERDOWN,\n    EventType.MOUSEWHEEL,\n    EventType.WHEEL\n  ];\n  for (let i = 0, ii = overlayEvents.length; i < ii; ++i) {\n    listen(this.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n  }\n  this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n  /**\n   * @private\n   * @type {module:ol/MapBrowserEventHandler}\n   */\n  this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n  for (const key in MapBrowserEventType) {\n    listen(this.mapBrowserEventHandler_, MapBrowserEventType[key],\n      this.handleMapBrowserEvent, this);\n  }\n\n  /**\n   * @private\n   * @type {Element|Document}\n   */\n  this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.keyHandlerKeys_ = null;\n\n  listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n  /**\n   * @type {module:ol/Collection.<module:ol/control/Control>}\n   * @protected\n   */\n  this.controls = optionsInternal.controls || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/interaction/Interaction>}\n   * @protected\n   */\n  this.interactions = optionsInternal.interactions || new Collection();\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Overlay>}\n   * @private\n   */\n  this.overlays_ = optionsInternal.overlays;\n\n  /**\n   * A lookup of overlays by id.\n   * @private\n   * @type {Object.<string, module:ol/Overlay>}\n   */\n  this.overlayIdIndex_ = {};\n\n  /**\n   * @type {module:ol/renderer/Map}\n   * @private\n   */\n  this.renderer_ = this.createRenderer();\n\n  /**\n   * @type {function(Event)|undefined}\n   * @private\n   */\n  this.handleResize_;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.focus_ = null;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/PluggableMap~PostRenderFunction>}\n   */\n  this.postRenderFunctions_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/TileQueue}\n   */\n  this.tileQueue_ = new TileQueue(\n    this.getTilePriority.bind(this),\n    this.handleTileChange_.bind(this));\n\n  /**\n   * Uids of features to skip at rendering time.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.skippedFeatureUids_ = {};\n\n  listen(\n    this, getChangeEventType(MapProperty.LAYERGROUP),\n    this.handleLayerGroupChanged_, this);\n  listen(this, getChangeEventType(MapProperty.VIEW),\n    this.handleViewChanged_, this);\n  listen(this, getChangeEventType(MapProperty.SIZE),\n    this.handleSizeChanged_, this);\n  listen(this, getChangeEventType(MapProperty.TARGET),\n    this.handleTargetChanged_, this);\n\n  // setProperties will trigger the rendering of the map if the map\n  // is \"defined\" already.\n  this.setProperties(optionsInternal.values);\n\n  this.controls.forEach(\n    /**\n     * @param {module:ol/control/Control} control Control.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(control) {\n      control.setMap(this);\n    }).bind(this));\n\n  listen(this.controls, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.controls, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.interactions.forEach(\n    /**\n     * @param {module:ol/interaction/Interaction} interaction Interaction.\n     * @this {module:ol/PluggableMap}\n     */\n    (function(interaction) {\n      interaction.setMap(this);\n    }).bind(this));\n\n  listen(this.interactions, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(this);\n    }, this);\n\n  listen(this.interactions, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      event.element.setMap(null);\n    }, this);\n\n  this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n  listen(this.overlays_, CollectionEventType.ADD,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n    }, this);\n\n  listen(this.overlays_, CollectionEventType.REMOVE,\n    /**\n     * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n     */\n    function(event) {\n      const overlay = /** @type {module:ol/Overlay} */ (event.element);\n      const id = overlay.getId();\n      if (id !== undefined) {\n        delete this.overlayIdIndex_[id.toString()];\n      }\n      event.element.setMap(null);\n    }, this);\n\n};\n\ninherits(PluggableMap, BaseObject);\n\n\nPluggableMap.prototype.createRenderer = function() {\n  throw new Error('Use a map type that has a createRenderer method');\n};\n\n\n/**\n * Add the given control to the map.\n * @param {module:ol/control/Control} control Control.\n * @api\n */\nPluggableMap.prototype.addControl = function(control) {\n  this.getControls().push(control);\n};\n\n\n/**\n * Add the given interaction to the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n * @api\n */\nPluggableMap.prototype.addInteraction = function(interaction) {\n  this.getInteractions().push(interaction);\n};\n\n\n/**\n * Adds the given layer to the top of this map. If you want to add a layer\n * elsewhere in the stack, use `getLayers()` and the methods available on\n * {@link module:ol/Collection~Collection}.\n * @param {module:ol/layer/Base} layer Layer.\n * @api\n */\nPluggableMap.prototype.addLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  layers.push(layer);\n};\n\n\n/**\n * Add the given overlay to the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @api\n */\nPluggableMap.prototype.addOverlay = function(overlay) {\n  this.getOverlays().push(overlay);\n};\n\n\n/**\n * This deals with map's overlay collection changes.\n * @param {module:ol/Overlay} overlay Overlay.\n * @private\n */\nPluggableMap.prototype.addOverlayInternal_ = function(overlay) {\n  const id = overlay.getId();\n  if (id !== undefined) {\n    this.overlayIdIndex_[id.toString()] = overlay;\n  }\n  overlay.setMap(this);\n};\n\n\n/**\n *\n * @inheritDoc\n */\nPluggableMap.prototype.disposeInternal = function() {\n  this.mapBrowserEventHandler_.dispose();\n  unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n  unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n  if (this.handleResize_ !== undefined) {\n    removeEventListener(EventType.RESIZE, this.handleResize_, false);\n    this.handleResize_ = undefined;\n  }\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n    this.animationDelayKey_ = undefined;\n  }\n  this.setTarget(null);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Detect features that intersect a pixel on the viewport, and execute a\n * callback with each intersecting feature. Layers included in the detection can\n * be configured through the `layerFilter` option in `opt_options`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n *     called with two arguments. The first argument is one\n *     {@link module:ol/Feature feature} or\n *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n *     unmanaged layers. To stop detection, callback functions can return a\n *     truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachFeatureAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = opt_options.layerFilter !== undefined ?\n    opt_options.layerFilter : TRUE;\n  return this.renderer_.forEachFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, callback, null,\n    layerFilter, null);\n};\n\n\n/**\n * Get all features that intersect a pixel on the viewport.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {Array.<module:ol/Feature|module:ol/render/Feature>} The detected features or\n * `null` if none were found.\n * @api\n */\nPluggableMap.prototype.getFeaturesAtPixel = function(pixel, opt_options) {\n  let features = null;\n  this.forEachFeatureAtPixel(pixel, function(feature) {\n    if (!features) {\n      features = [];\n    }\n    features.push(feature);\n  }, opt_options);\n  return features;\n};\n\n/**\n * Detect layers that have a color value at a pixel on the viewport, and\n * execute a callback with each matching layer. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n *     Layer callback. This callback will receive two arguments: first is the\n *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n *     that do not currently support this argument. To stop detection, callback\n *     functions can return a truthy value.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n * @return {T|undefined} Callback result, i.e. the return value of last\n * callback execution, or the first truthy callback return value.\n * @template S,T\n * @api\n */\nPluggableMap.prototype.forEachLayerAtPixel = function(pixel, callback, opt_options) {\n  if (!this.frameState_) {\n    return;\n  }\n  const options = opt_options || {};\n  const hitTolerance = options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  const layerFilter = options.layerFilter || TRUE;\n  return this.renderer_.forEachLayerAtPixel(\n    pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n};\n\n\n/**\n * Detect if features intersect a pixel on the viewport. Layers included in the\n * detection can be configured through `opt_layerFilter`.\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n * @return {boolean} Is there a feature at the given pixel?\n * @template U\n * @api\n */\nPluggableMap.prototype.hasFeatureAtPixel = function(pixel, opt_options) {\n  if (!this.frameState_) {\n    return false;\n  }\n  const coordinate = this.getCoordinateFromPixel(pixel);\n  opt_options = opt_options !== undefined ? opt_options : {};\n  const layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n  const hitTolerance = opt_options.hitTolerance !== undefined ?\n    opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n  return this.renderer_.hasFeatureAtCoordinate(\n    coordinate, this.frameState_, hitTolerance, layerFilter, null);\n};\n\n\n/**\n * Returns the coordinate in view projection for a browser event.\n * @param {Event} event Event.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nPluggableMap.prototype.getEventCoordinate = function(event) {\n  return this.getCoordinateFromPixel(this.getEventPixel(event));\n};\n\n\n/**\n * Returns the map pixel position for a browser event relative to the viewport.\n * @param {Event} event Event.\n * @return {module:ol~Pixel} Pixel.\n * @api\n */\nPluggableMap.prototype.getEventPixel = function(event) {\n  const viewportPosition = this.viewport_.getBoundingClientRect();\n  const eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n  return [\n    eventPosition.clientX - viewportPosition.left,\n    eventPosition.clientY - viewportPosition.top\n  ];\n};\n\n\n/**\n * Get the target in which this map is rendered.\n * Note that this returns what is entered as an option or in setTarget:\n * if that was an element, it returns an element; if a string, it returns that.\n * @return {Element|string|undefined} The Element or id of the Element that the\n *     map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.getTarget = function() {\n  return /** @type {Element|string|undefined} */ (this.get(MapProperty.TARGET));\n};\n\n\n/**\n * Get the DOM element into which this map is rendered. In contrast to\n * `getTarget` this method always return an `Element`, or `null` if the\n * map has no target.\n * @return {Element} The element that the map is rendered in.\n * @api\n */\nPluggableMap.prototype.getTargetElement = function() {\n  const target = this.getTarget();\n  if (target !== undefined) {\n    return typeof target === 'string' ? document.getElementById(target) : target;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Get the coordinate for a given pixel.  This returns a coordinate in the\n * map view projection.\n * @param {module:ol~Pixel} pixel Pixel position in the map viewport.\n * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n * @api\n */\nPluggableMap.prototype.getCoordinateFromPixel = function(pixel) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n};\n\n\n/**\n * Get the map controls. Modifying this collection changes the controls\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/control/Control>} Controls.\n * @api\n */\nPluggableMap.prototype.getControls = function() {\n  return this.controls;\n};\n\n\n/**\n * Get the map overlays. Modifying this collection changes the overlays\n * associated with the map.\n * @return {module:ol/Collection.<module:ol/Overlay>} Overlays.\n * @api\n */\nPluggableMap.prototype.getOverlays = function() {\n  return this.overlays_;\n};\n\n\n/**\n * Get an overlay by its identifier (the value returned by overlay.getId()).\n * Note that the index treats string and numeric identifiers as the same. So\n * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n * @param {string|number} id Overlay identifier.\n * @return {module:ol/Overlay} Overlay.\n * @api\n */\nPluggableMap.prototype.getOverlayById = function(id) {\n  const overlay = this.overlayIdIndex_[id.toString()];\n  return overlay !== undefined ? overlay : null;\n};\n\n\n/**\n * Get the map interactions. Modifying this collection changes the interactions\n * associated with the map.\n *\n * Interactions are used for e.g. pan, zoom and rotate.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>} Interactions.\n * @api\n */\nPluggableMap.prototype.getInteractions = function() {\n  return this.interactions;\n};\n\n\n/**\n * Get the layergroup associated with this map.\n * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getLayerGroup = function() {\n  return (\n    /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n  );\n};\n\n\n/**\n * Get the collection of layers associated with this map.\n * @return {!module:ol/Collection.<module:ol/layer/Base>} Layers.\n * @api\n */\nPluggableMap.prototype.getLayers = function() {\n  const layers = this.getLayerGroup().getLayers();\n  return layers;\n};\n\n\n/**\n * Get the pixel for a coordinate.  This takes a coordinate in the map view\n * projection and returns the corresponding pixel.\n * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n * @return {module:ol~Pixel} A pixel position in the map viewport.\n * @api\n */\nPluggableMap.prototype.getPixelFromCoordinate = function(coordinate) {\n  const frameState = this.frameState_;\n  if (!frameState) {\n    return null;\n  } else {\n    return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n  }\n};\n\n\n/**\n * Get the map renderer.\n * @return {module:ol/renderer/Map} Renderer\n */\nPluggableMap.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Get the size of this map.\n * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.getSize = function() {\n  return (\n    /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n  );\n};\n\n\n/**\n * Get the view associated with this map. A view manages properties such as\n * center and resolution.\n * @return {module:ol/View} The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.getView = function() {\n  return (\n    /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n  );\n};\n\n\n/**\n * Get the element that serves as the map viewport.\n * @return {Element} Viewport.\n * @api\n */\nPluggableMap.prototype.getViewport = function() {\n  return this.viewport_;\n};\n\n\n/**\n * Get the element that serves as the container for overlays.  Elements added to\n * this container will let mousedown and touchstart events through to the map,\n * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n * events.\n * @return {!Element} The map's overlay container.\n */\nPluggableMap.prototype.getOverlayContainer = function() {\n  return this.overlayContainer_;\n};\n\n\n/**\n * Get the element that serves as a container for overlays that don't allow\n * event propagation. Elements added to this container won't let mousedown and\n * touchstart events through to the map, so clicks and gestures on an overlay\n * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n * @return {!Element} The map's overlay container that stops events.\n */\nPluggableMap.prototype.getOverlayContainerStopEvent = function() {\n  return this.overlayContainerStopEvent_;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nPluggableMap.prototype.getTilePriority = function(tile, tileSourceKey, tileCenter, tileResolution) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  const frameState = this.frameState_;\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels\n  // between the center of the tile and the focus.  The factor of 65536 means\n  // that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const deltaX = tileCenter[0] - frameState.focus[0];\n  const deltaY = tileCenter[1] - frameState.focus[1];\n  return 65536 * Math.log(tileResolution) +\n      Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n};\n\n\n/**\n * @param {Event} browserEvent Browser event.\n * @param {string=} opt_type Type.\n */\nPluggableMap.prototype.handleBrowserEvent = function(browserEvent, opt_type) {\n  const type = opt_type || browserEvent.type;\n  const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n  this.handleMapBrowserEvent(mapBrowserEvent);\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n */\nPluggableMap.prototype.handleMapBrowserEvent = function(mapBrowserEvent) {\n  if (!this.frameState_) {\n    // With no view defined, we cannot translate pixels into geographical\n    // coordinates so interactions cannot be used.\n    return;\n  }\n  this.focus_ = mapBrowserEvent.coordinate;\n  mapBrowserEvent.frameState = this.frameState_;\n  const interactionsArray = this.getInteractions().getArray();\n  if (this.dispatchEvent(mapBrowserEvent) !== false) {\n    for (let i = interactionsArray.length - 1; i >= 0; i--) {\n      const interaction = interactionsArray[i];\n      if (!interaction.getActive()) {\n        continue;\n      }\n      const cont = interaction.handleEvent(mapBrowserEvent);\n      if (!cont) {\n        break;\n      }\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nPluggableMap.prototype.handlePostRender = function() {\n\n  const frameState = this.frameState_;\n\n  // Manage the tile queue\n  // Image loads are expensive and a limited resource, so try to use them\n  // efficiently:\n  // * When the view is static we allow a large number of parallel tile loads\n  //   to complete the frame as quickly as possible.\n  // * When animating or interacting, image loads can cause janks, so we reduce\n  //   the maximum number of loads per frame and limit the number of parallel\n  //   tile loads to remain reactive to view changes and to reduce the chance of\n  //   loading tiles that will quickly disappear from view.\n  const tileQueue = this.tileQueue_;\n  if (!tileQueue.isEmpty()) {\n    let maxTotalLoading = this.maxTilesLoading_;\n    let maxNewLoads = maxTotalLoading;\n    if (frameState) {\n      const hints = frameState.viewHints;\n      if (hints[ViewHint.ANIMATING]) {\n        maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n      if (hints[ViewHint.INTERACTING]) {\n        maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n        maxNewLoads = 2;\n      }\n    }\n    if (tileQueue.getTilesLoading() < maxTotalLoading) {\n      tileQueue.reprioritize(); // FIXME only call if view has changed\n      tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n    }\n  }\n\n  const postRenderFunctions = this.postRenderFunctions_;\n  for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n    postRenderFunctions[i](this, frameState);\n  }\n  postRenderFunctions.length = 0;\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleSizeChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTargetChanged_ = function() {\n  // target may be undefined, null, a string or an Element.\n  // If it's a string we convert it to an Element before proceeding.\n  // If it's not now an Element we remove the viewport from the DOM.\n  // If it's an Element we append the viewport element to it.\n\n  let targetElement;\n  if (this.getTarget()) {\n    targetElement = this.getTargetElement();\n  }\n\n  if (this.keyHandlerKeys_) {\n    for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n      unlistenByKey(this.keyHandlerKeys_[i]);\n    }\n    this.keyHandlerKeys_ = null;\n  }\n\n  if (!targetElement) {\n    this.renderer_.removeLayerRenderers();\n    removeNode(this.viewport_);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n  } else {\n    targetElement.appendChild(this.viewport_);\n\n    const keyboardEventTarget = !this.keyboardEventTarget_ ?\n      targetElement : this.keyboardEventTarget_;\n    this.keyHandlerKeys_ = [\n      listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n      listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n    ];\n\n    if (!this.handleResize_) {\n      this.handleResize_ = this.updateSize.bind(this);\n      addEventListener(EventType.RESIZE, this.handleResize_, false);\n    }\n  }\n\n  this.updateSize();\n  // updateSize calls setSize, so no need to call this.render\n  // ourselves here.\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleTileChange_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewPropertyChanged_ = function() {\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleViewChanged_ = function() {\n  if (this.viewPropertyListenerKey_) {\n    unlistenByKey(this.viewPropertyListenerKey_);\n    this.viewPropertyListenerKey_ = null;\n  }\n  if (this.viewChangeListenerKey_) {\n    unlistenByKey(this.viewChangeListenerKey_);\n    this.viewChangeListenerKey_ = null;\n  }\n  const view = this.getView();\n  if (view) {\n    this.viewport_.setAttribute('data-view', getUid(view));\n    this.viewPropertyListenerKey_ = listen(\n      view, ObjectEventType.PROPERTYCHANGE,\n      this.handleViewPropertyChanged_, this);\n    this.viewChangeListenerKey_ = listen(\n      view, EventType.CHANGE,\n      this.handleViewPropertyChanged_, this);\n  }\n  this.render();\n};\n\n\n/**\n * @private\n */\nPluggableMap.prototype.handleLayerGroupChanged_ = function() {\n  if (this.layerGroupPropertyListenerKeys_) {\n    this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n    this.layerGroupPropertyListenerKeys_ = null;\n  }\n  const layerGroup = this.getLayerGroup();\n  if (layerGroup) {\n    this.layerGroupPropertyListenerKeys_ = [\n      listen(\n        layerGroup, ObjectEventType.PROPERTYCHANGE,\n        this.render, this),\n      listen(\n        layerGroup, EventType.CHANGE,\n        this.render, this)\n    ];\n  }\n  this.render();\n};\n\n\n/**\n * @return {boolean} Is rendered.\n */\nPluggableMap.prototype.isRendered = function() {\n  return !!this.frameState_;\n};\n\n\n/**\n * Requests an immediate render in a synchronous manner.\n * @api\n */\nPluggableMap.prototype.renderSync = function() {\n  if (this.animationDelayKey_) {\n    cancelAnimationFrame(this.animationDelayKey_);\n  }\n  this.animationDelay_();\n};\n\n\n/**\n * Request a map rendering (at the next animation frame).\n * @api\n */\nPluggableMap.prototype.render = function() {\n  if (this.animationDelayKey_ === undefined) {\n    this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n  }\n};\n\n\n/**\n * Remove the given control from the map.\n * @param {module:ol/control/Control} control Control.\n * @return {module:ol/control/Control|undefined} The removed control (or undefined\n *     if the control was not found).\n * @api\n */\nPluggableMap.prototype.removeControl = function(control) {\n  return this.getControls().remove(control);\n};\n\n\n/**\n * Remove the given interaction from the map.\n * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n *     undefined if the interaction was not found).\n * @api\n */\nPluggableMap.prototype.removeInteraction = function(interaction) {\n  return this.getInteractions().remove(interaction);\n};\n\n\n/**\n * Removes the given layer from the map.\n * @param {module:ol/layer/Base} layer Layer.\n * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n *     layer was not found).\n * @api\n */\nPluggableMap.prototype.removeLayer = function(layer) {\n  const layers = this.getLayerGroup().getLayers();\n  return layers.remove(layer);\n};\n\n\n/**\n * Remove the given overlay from the map.\n * @param {module:ol/Overlay} overlay Overlay.\n * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n *     if the overlay was not found).\n * @api\n */\nPluggableMap.prototype.removeOverlay = function(overlay) {\n  return this.getOverlays().remove(overlay);\n};\n\n\n/**\n * @param {number} time Time.\n * @private\n */\nPluggableMap.prototype.renderFrame_ = function(time) {\n  let viewState;\n\n  const size = this.getSize();\n  const view = this.getView();\n  const extent = createEmpty();\n  const previousFrameState = this.frameState_;\n  /** @type {?module:ol/PluggableMap~FrameState} */\n  let frameState = null;\n  if (size !== undefined && hasArea(size) && view && view.isDef()) {\n    const viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    const layerStates = {};\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n    }\n    viewState = view.getState();\n    let focus = this.focus_;\n    if (!focus) {\n      focus = viewState.center;\n      const pixelResolution = viewState.resolution / this.pixelRatio_;\n      focus[0] = Math.round(focus[0] / pixelResolution) * pixelResolution;\n      focus[1] = Math.round(focus[1] / pixelResolution) * pixelResolution;\n    }\n    frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n      animate: false,\n      coordinateToPixelTransform: this.coordinateToPixelTransform_,\n      extent: extent,\n      focus: focus,\n      index: this.frameIndex_++,\n      layerStates: layerStates,\n      layerStatesArray: layerStatesArray,\n      pixelRatio: this.pixelRatio_,\n      pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n      postRenderFunctions: [],\n      size: size,\n      skippedFeatureUids: this.skippedFeatureUids_,\n      tileQueue: this.tileQueue_,\n      time: time,\n      usedTiles: {},\n      viewState: viewState,\n      viewHints: viewHints,\n      wantedTiles: {}\n    });\n  }\n\n  if (frameState) {\n    frameState.extent = getForViewAndSize(viewState.center,\n      viewState.resolution, viewState.rotation, frameState.size, extent);\n  }\n\n  this.frameState_ = frameState;\n  this.renderer_.renderFrame(frameState);\n\n  if (frameState) {\n    if (frameState.animate) {\n      this.render();\n    }\n    Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n    if (previousFrameState) {\n      const moveStart = !this.previousExtent_ ||\n                  (!isEmpty(this.previousExtent_) &&\n                  !equals(frameState.extent, this.previousExtent_));\n      if (moveStart) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n        this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n      }\n    }\n\n    const idle = this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n    if (idle) {\n      this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n      clone(frameState.extent, this.previousExtent_);\n    }\n  }\n\n  this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n  setTimeout(this.handlePostRender.bind(this), 0);\n\n};\n\n\n/**\n * Sets the layergroup of this map.\n * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setLayerGroup = function(layerGroup) {\n  this.set(MapProperty.LAYERGROUP, layerGroup);\n};\n\n\n/**\n * Set the size of this map.\n * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n * @observable\n * @api\n */\nPluggableMap.prototype.setSize = function(size) {\n  this.set(MapProperty.SIZE, size);\n};\n\n\n/**\n * Set the target element to render this map into.\n * @param {Element|string|undefined} target The Element or id of the Element\n *     that the map is rendered in.\n * @observable\n * @api\n */\nPluggableMap.prototype.setTarget = function(target) {\n  this.set(MapProperty.TARGET, target);\n};\n\n\n/**\n * Set the view for this map.\n * @param {module:ol/View} view The view that controls this map.\n * @observable\n * @api\n */\nPluggableMap.prototype.setView = function(view) {\n  this.set(MapProperty.VIEW, view);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.skipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  this.skippedFeatureUids_[featureUid] = true;\n  this.render();\n};\n\n\n/**\n * Force a recalculation of the map viewport size.  This should be called when\n * third-party code changes the size of the map viewport.\n * @api\n */\nPluggableMap.prototype.updateSize = function() {\n  const targetElement = this.getTargetElement();\n\n  if (!targetElement) {\n    this.setSize(undefined);\n  } else {\n    const computedStyle = getComputedStyle(targetElement);\n    this.setSize([\n      targetElement.offsetWidth -\n          parseFloat(computedStyle['borderLeftWidth']) -\n          parseFloat(computedStyle['paddingLeft']) -\n          parseFloat(computedStyle['paddingRight']) -\n          parseFloat(computedStyle['borderRightWidth']),\n      targetElement.offsetHeight -\n          parseFloat(computedStyle['borderTopWidth']) -\n          parseFloat(computedStyle['paddingTop']) -\n          parseFloat(computedStyle['paddingBottom']) -\n          parseFloat(computedStyle['borderBottomWidth'])\n    ]);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n */\nPluggableMap.prototype.unskipFeature = function(feature) {\n  const featureUid = getUid(feature).toString();\n  delete this.skippedFeatureUids_[featureUid];\n  this.render();\n};\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {Element|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object.<string, *>}\n   */\n  const values = {};\n\n  const layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Element} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {Element|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/control/Control~Options} options Control options.\n * @api\n */\nconst Control = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @protected\n   * @type {Element}\n   */\n  this.element = options.element ? options.element : null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/events~EventsKey>}\n   */\n  this.listenerKeys = [];\n\n  /**\n   * @type {function(module:ol/MapEvent)}\n   */\n  this.render = options.render ? options.render : UNDEFINED;\n\n  if (options.target) {\n    this.setTarget(options.target);\n  }\n\n};\n\ninherits(Control, BaseObject);\n\n\n/**\n * @inheritDoc\n */\nControl.prototype.disposeInternal = function() {\n  removeNode(this.element);\n  BaseObject.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the map associated with this control.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nControl.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Remove the control from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nControl.prototype.setMap = function(map) {\n  if (this.map_) {\n    removeNode(this.element);\n  }\n  for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n    unlistenByKey(this.listenerKeys[i]);\n  }\n  this.listenerKeys.length = 0;\n  this.map_ = map;\n  if (this.map_) {\n    const target = this.target_ ?\n      this.target_ : map.getOverlayContainerStopEvent();\n    target.appendChild(this.element);\n    if (this.render !== UNDEFINED) {\n      this.listenerKeys.push(listen(map,\n        MapEventType.POSTRENDER, this.render, this));\n    }\n    map.render();\n  }\n};\n\n\n/**\n * This function is used to set a target element for the control. It has no\n * effect if it is called after the control has been added to the map (i.e.\n * after `setMap` is called on the control). If no `target` is set in the\n * options passed to the control constructor and if `setTarget` is not called\n * then the control is added to the map's overlay container.\n * @param {Element|string} target Target.\n * @api\n */\nControl.prototype.setTarget = function(target) {\n  this.target_ = typeof target === 'string' ?\n    document.getElementById(target) :\n    target;\n};\nexport default Control;\n","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object.<string>} The font families (or null if the input spec is invalid).\n */\nexport const getFontFamilies = (function() {\n  let style;\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render'\n};\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid, inherits} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/layer/Base}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Layer~Options} options Layer options.\n * @api\n */\nconst Layer = function(options) {\n\n  const baseOptions = assign({}, options);\n  delete baseOptions.source;\n\n  BaseLayer.call(this, /** @type {module:ol/layer/Base~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapPrecomposeKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.mapRenderKey_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.sourceChangeKey_ = null;\n\n  if (options.map) {\n    this.setMap(options.map);\n  }\n\n  listen(this,\n    getChangeEventType(LayerProperty.SOURCE),\n    this.handleSourcePropertyChange_, this);\n\n  const source = options.source ? options.source : null;\n  this.setSource(source);\n};\n\ninherits(Layer, BaseLayer);\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayersArray = function(opt_array) {\n  const array = opt_array ? opt_array : [];\n  array.push(this);\n  return array;\n};\n\n\n/**\n * @inheritDoc\n */\nLayer.prototype.getLayerStatesArray = function(opt_states) {\n  const states = opt_states ? opt_states : [];\n  states.push(this.getLayerState());\n  return states;\n};\n\n\n/**\n * Get the layer source.\n * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n * @observable\n * @api\n */\nLayer.prototype.getSource = function() {\n  const source = this.get(LayerProperty.SOURCE);\n  return (\n    /** @type {module:ol/source/Source} */ (source) || null\n  );\n};\n\n\n/**\n  * @inheritDoc\n  */\nLayer.prototype.getSourceState = function() {\n  const source = this.getSource();\n  return !source ? SourceState.UNDEFINED : source.getState();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourceChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nLayer.prototype.handleSourcePropertyChange_ = function() {\n  if (this.sourceChangeKey_) {\n    unlistenByKey(this.sourceChangeKey_);\n    this.sourceChangeKey_ = null;\n  }\n  const source = this.getSource();\n  if (source) {\n    this.sourceChangeKey_ = listen(source,\n      EventType.CHANGE, this.handleSourceChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the layer to be rendered on top of other layers on a map. The map will\n * not manage this layer in its layers collection, and the callback in\n * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n * is useful for temporary layers. To remove an unmanaged layer from the map,\n * use `#setMap(null)`.\n *\n * To add the layer to a map and have it managed by the map, use\n * {@link module:ol/Map#addLayer} instead.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nLayer.prototype.setMap = function(map) {\n  if (this.mapPrecomposeKey_) {\n    unlistenByKey(this.mapPrecomposeKey_);\n    this.mapPrecomposeKey_ = null;\n  }\n  if (!map) {\n    this.changed();\n  }\n  if (this.mapRenderKey_) {\n    unlistenByKey(this.mapRenderKey_);\n    this.mapRenderKey_ = null;\n  }\n  if (map) {\n    this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n      const layerState = this.getLayerState();\n      layerState.managed = false;\n      layerState.zIndex = Infinity;\n      evt.frameState.layerStatesArray.push(layerState);\n      evt.frameState.layerStates[getUid(this)] = layerState;\n    }, this);\n    this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n    this.changed();\n  }\n};\n\n\n/**\n * Set the layer source.\n * @param {module:ol/source/Source} source The layer source.\n * @observable\n * @api\n */\nLayer.prototype.setSource = function(source) {\n  this.set(LayerProperty.SOURCE, source);\n};\nexport default Layer;\n","/**\n * @module ol/control/Attribution\n */\nimport {inherits} from '../util.js';\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {Element|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Attribution~Options=} opt_options Attribution options.\n * @api\n */\nconst Attribution = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.ulElement_ = document.createElement('UL');\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.collapsible_ = options.collapsible !== undefined ?\n    options.collapsible : true;\n\n  if (!this.collapsible_) {\n    this.collapsed_ = false;\n  }\n\n  const className = options.className !== undefined ? options.className : 'ol-attribution';\n\n  const tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n  const collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n  if (typeof collapseLabel === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.collapseLabel_ = document.createElement('span');\n    this.collapseLabel_.textContent = collapseLabel;\n  } else {\n    this.collapseLabel_ = collapseLabel;\n  }\n\n  const label = options.label !== undefined ? options.label : 'i';\n\n  if (typeof label === 'string') {\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.label_ = document.createElement('span');\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n  }\n\n\n  const activeLabel = (this.collapsible_ && !this.collapsed_) ?\n    this.collapseLabel_ : this.label_;\n  const button = document.createElement('button');\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(activeLabel);\n\n  listen(button, EventType.CLICK, this.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(this.ulElement_);\n  element.appendChild(button);\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * A list of currently rendered resolutions.\n   * @type {Array.<string>}\n   * @private\n   */\n  this.renderedAttributions_ = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n};\n\ninherits(Attribution, Control);\n\n\n/**\n * Get a list of visible attributions.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {Array.<string>} Attributions.\n * @private\n */\nAttribution.prototype.getSourceAttributions_ = function(frameState) {\n  /**\n   * Used to determine if an attribution already exists.\n   * @type {!Object.<string, boolean>}\n   */\n  const lookup = {};\n\n  /**\n   * A list of visible attributions.\n   * @type {Array.<string>}\n   */\n  const visibleAttributions = [];\n\n  const layerStatesArray = frameState.layerStatesArray;\n  const resolution = frameState.viewState.resolution;\n  for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    const layerState = layerStatesArray[i];\n    if (!visibleAtResolution(layerState, resolution)) {\n      continue;\n    }\n\n    const source = layerState.layer.getSource();\n    if (!source) {\n      continue;\n    }\n\n    const attributionGetter = source.getAttributions();\n    if (!attributionGetter) {\n      continue;\n    }\n\n    const attributions = attributionGetter(frameState);\n    if (!attributions) {\n      continue;\n    }\n\n    if (Array.isArray(attributions)) {\n      for (let j = 0, jj = attributions.length; j < jj; ++j) {\n        if (!(attributions[j] in lookup)) {\n          visibleAttributions.push(attributions[j]);\n          lookup[attributions[j]] = true;\n        }\n      }\n    } else {\n      if (!(attributions in lookup)) {\n        visibleAttributions.push(attributions);\n        lookup[attributions] = true;\n      }\n    }\n  }\n  return visibleAttributions;\n};\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\n/**\n * @private\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nAttribution.prototype.updateElement_ = function(frameState) {\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.element.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const attributions = this.getSourceAttributions_(frameState);\n\n  const visible = attributions.length > 0;\n  if (this.renderedVisible_ != visible) {\n    this.element.style.display = visible ? '' : 'none';\n    this.renderedVisible_ = visible;\n  }\n\n  if (equals(attributions, this.renderedAttributions_)) {\n    return;\n  }\n\n  removeChildren(this.ulElement_);\n\n  // append the attributions\n  for (let i = 0, ii = attributions.length; i < ii; ++i) {\n    const element = document.createElement('LI');\n    element.innerHTML = attributions[i];\n    this.ulElement_.appendChild(element);\n  }\n\n  this.renderedAttributions_ = attributions;\n};\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nAttribution.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  this.handleToggle_();\n};\n\n\n/**\n * @private\n */\nAttribution.prototype.handleToggle_ = function() {\n  this.element.classList.toggle(CLASS_COLLAPSED);\n  if (this.collapsed_) {\n    replaceNode(this.collapseLabel_, this.label_);\n  } else {\n    replaceNode(this.label_, this.collapseLabel_);\n  }\n  this.collapsed_ = !this.collapsed_;\n};\n\n\n/**\n * Return `true` if the attribution is collapsible, `false` otherwise.\n * @return {boolean} True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.getCollapsible = function() {\n  return this.collapsible_;\n};\n\n\n/**\n * Set whether the attribution should be collapsible.\n * @param {boolean} collapsible True if the widget is collapsible.\n * @api\n */\nAttribution.prototype.setCollapsible = function(collapsible) {\n  if (this.collapsible_ === collapsible) {\n    return;\n  }\n  this.collapsible_ = collapsible;\n  this.element.classList.toggle('ol-uncollapsible');\n  if (!collapsible && this.collapsed_) {\n    this.handleToggle_();\n  }\n};\n\n\n/**\n * Collapse or expand the attribution according to the passed parameter. Will\n * not do anything if the attribution isn't collapsible or if the current\n * collapsed state is already the one requested.\n * @param {boolean} collapsed True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.setCollapsed = function(collapsed) {\n  if (!this.collapsible_ || this.collapsed_ === collapsed) {\n    return;\n  }\n  this.handleToggle_();\n};\n\n\n/**\n * Return `true` when the attribution is currently collapsed or `false`\n * otherwise.\n * @return {boolean} True if the widget is collapsed.\n * @api\n */\nAttribution.prototype.getCollapsed = function() {\n  return this.collapsed_;\n};\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\n\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {inherits} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|Element} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Rotate~Options=} opt_options Rotate options.\n * @api\n */\nconst Rotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-rotate';\n\n  const label = options.label !== undefined ? options.label : '\\u21E7';\n\n  /**\n   * @type {Element}\n   * @private\n   */\n  this.label_ = null;\n\n  if (typeof label === 'string') {\n    this.label_ = document.createElement('span');\n    this.label_.className = 'ol-compass';\n    this.label_.textContent = label;\n  } else {\n    this.label_ = label;\n    this.label_.classList.add('ol-compass');\n  }\n\n  const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n  const button = document.createElement('button');\n  button.className = className + '-reset';\n  button.setAttribute('type', 'button');\n  button.title = tipLabel;\n  button.appendChild(this.label_);\n\n  listen(button, EventType.CLICK,\n    Rotate.prototype.handleClick_, this);\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(button);\n\n  this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n  Control.call(this, {\n    element: element,\n    render: options.render || render,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  if (this.autoHide_) {\n    this.element.classList.add(CLASS_HIDDEN);\n  }\n\n};\n\ninherits(Rotate, Control);\n\n\n/**\n * @param {Event} event The event to handle\n * @private\n */\nRotate.prototype.handleClick_ = function(event) {\n  event.preventDefault();\n  if (this.callResetNorth_ !== undefined) {\n    this.callResetNorth_();\n  } else {\n    this.resetNorth_();\n  }\n};\n\n\n/**\n * @private\n */\nRotate.prototype.resetNorth_ = function() {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  if (view.getRotation() !== undefined) {\n    if (this.duration_ > 0) {\n      view.animate({\n        rotation: 0,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setRotation(0);\n    }\n  }\n};\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  const frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  const rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    const transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      const contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {inherits} from '../util.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|Element} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Element} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {Element|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @constructor\n * @extends {module:ol/control/Control}\n * @param {module:ol/control/Zoom~Options=} opt_options Zoom options.\n * @api\n */\nconst Zoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const className = options.className !== undefined ? options.className : 'ol-zoom';\n\n  const delta = options.delta !== undefined ? options.delta : 1;\n\n  const zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n  const zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n  const zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n    options.zoomInTipLabel : 'Zoom in';\n  const zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n    options.zoomOutTipLabel : 'Zoom out';\n\n  const inElement = document.createElement('button');\n  inElement.className = className + '-in';\n  inElement.setAttribute('type', 'button');\n  inElement.title = zoomInTipLabel;\n  inElement.appendChild(\n    typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n  );\n\n  listen(inElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, delta));\n\n  const outElement = document.createElement('button');\n  outElement.className = className + '-out';\n  outElement.setAttribute('type', 'button');\n  outElement.title = zoomOutTipLabel;\n  outElement.appendChild(\n    typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n  );\n\n  listen(outElement, EventType.CLICK,\n    Zoom.prototype.handleClick_.bind(this, -delta));\n\n  const cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n  const element = document.createElement('div');\n  element.className = cssClasses;\n  element.appendChild(inElement);\n  element.appendChild(outElement);\n\n  Control.call(this, {\n    element: element,\n    target: options.target\n  });\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(Zoom, Control);\n\n\n/**\n * @param {number} delta Zoom delta.\n * @param {Event} event The event to handle\n * @private\n */\nZoom.prototype.handleClick_ = function(delta, event) {\n  event.preventDefault();\n  this.zoomByDelta_(delta);\n};\n\n\n/**\n * @param {number} delta Zoom delta.\n * @private\n */\nZoom.prototype.zoomByDelta_ = function(delta) {\n  const map = this.getMap();\n  const view = map.getView();\n  if (!view) {\n    // the map does not have a view, so we can't act\n    // upon it\n    return;\n  }\n  const currentResolution = view.getResolution();\n  if (currentResolution) {\n    const newResolution = view.constrainResolution(currentResolution, delta);\n    if (this.duration_ > 0) {\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      view.animate({\n        resolution: newResolution,\n        duration: this.duration_,\n        easing: easeOut\n      });\n    } else {\n      view.setResolution(newResolution);\n    }\n  }\n};\nexport default Zoom;\n","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @constructor\n * @param {number} decay Rate of decay (must be negative).\n * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n * @param {number} delay Delay to consider to calculate the kinetic\n *     initial values (milliseconds).\n * @struct\n * @api\n */\nconst Kinetic = function(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function() {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function(x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function() {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  const delay = Date.now() - this.delay_;\n  const lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  let firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  const dx = this.points_[lastIndex] - this.points_[firstIndex];\n  const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function() {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function() {\n  return this.angle_;\n};\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport {inherits} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n *\n * @constructor\n * @param {module:ol/interaction/Interaction~InteractionOptions} options Options.\n * @extends {module:ol/Object}\n * @api\n */\nconst Interaction = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  this.setActive(true);\n\n  /**\n   * @type {function(module:ol/MapBrowserEvent):boolean}\n   */\n  this.handleEvent = options.handleEvent;\n\n};\n\ninherits(Interaction, BaseObject);\n\n\n/**\n * Return whether the interaction is currently active.\n * @return {boolean} `true` if the interaction is active, `false` otherwise.\n * @observable\n * @api\n */\nInteraction.prototype.getActive = function() {\n  return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n};\n\n\n/**\n * Get the map associated with this interaction.\n * @return {module:ol/PluggableMap} Map.\n * @api\n */\nInteraction.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Activate or deactivate the interaction.\n * @param {boolean} active Active.\n * @observable\n * @api\n */\nInteraction.prototype.setActive = function(active) {\n  this.set(InteractionProperty.ACTIVE, active);\n};\n\n\n/**\n * Remove the interaction from its current map and attach it to the new map.\n * Subclasses may set up event handlers to get notified about changes to\n * the map here.\n * @param {module:ol/PluggableMap} map Map.\n */\nInteraction.prototype.setMap = function(map) {\n  this.map_ = map;\n};\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenter();\n  if (currentCenter) {\n    const center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    const currentRotation = view.getRotation();\n    const currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentResolution = view.getResolution();\n  let resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    const resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    const currentCenter = view.getCenter();\n    let center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    const currentResolution = view.getResolution();\n    const currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        const center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport {inherits} from '../util.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/DoubleClickZoom~Options=} opt_options Options.\n * @api\n */\nconst DoubleClickZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(DoubleClickZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  const browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.originalEvent.target;\n  const tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * @see http://www.w3.org/TR/pointerevents/#button-states\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport {inherits} from '../util.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDragEvent = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nconst handleMoveEvent = UNDEFINED;\n\n\n/**\n * @typedef {Object} Options\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {(function(module:ol/MapBrowserEvent):boolean)} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {(function(module:ol/MapBrowserPointerEvent))} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {(function(module:ol/MapBrowserPointerEvent):boolean)} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n *\n * @constructor\n * @param {module:ol/interaction/Pointer~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst PointerInteraction = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: options.handleEvent || handleEvent\n  });\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleDownEvent_ = options.handleDownEvent ?\n    options.handleDownEvent : handleDownEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleDragEvent_ = options.handleDragEvent ?\n    options.handleDragEvent : handleDragEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent)}\n   * @private\n   */\n  this.handleMoveEvent_ = options.handleMoveEvent ?\n    options.handleMoveEvent : handleMoveEvent;\n\n  /**\n   * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n   * @private\n   */\n  this.handleUpEvent_ = options.handleUpEvent ?\n    options.handleUpEvent : handleUpEvent;\n\n  /**\n   * @type {boolean}\n   * @protected\n   */\n  this.handlingDownUpSequence = false;\n\n  /**\n   * @type {!Object.<string, module:ol/pointer/PointerEvent>}\n   * @private\n   */\n  this.trackedPointers_ = {};\n\n  /**\n   * @type {Array.<module:ol/pointer/PointerEvent>}\n   * @protected\n   */\n  this.targetPointers = [];\n\n};\n\ninherits(PointerInteraction, Interaction);\n\n\n/**\n * @param {Array.<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @private\n */\nPointerInteraction.prototype.updateTrackedPointers_ = function(mapBrowserEvent) {\n  if (isPointerDraggingEvent(mapBrowserEvent)) {\n    const event = mapBrowserEvent.pointerEvent;\n\n    const id = event.pointerId.toString();\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      delete this.trackedPointers_[id];\n    } else if (mapBrowserEvent.type ==\n        MapBrowserEventType.POINTERDOWN) {\n      this.trackedPointers_[id] = event;\n    } else if (id in this.trackedPointers_) {\n      // update only when there was a pointerdown event for this pointer\n      this.trackedPointers_[id] = event;\n    }\n    this.targetPointers = getValues(this.trackedPointers_);\n  }\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  let stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      const handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      const handled = this.handleDownEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.shouldStopEvent(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\n/**\n * This method is used to determine if \"down\" events should be propagated to\n * other interactions or should be stopped.\n *\n * The method receives the return code of the \"handleDownEvent\" function.\n *\n * By default this function is the \"identity\" function. It's overridden in\n * child classes.\n *\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the event be stopped?\n * @protected\n */\nPointerInteraction.prototype.shouldStopEvent = function(handled) {\n  return handled;\n};\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragPan~Options=} opt_options Options.\n * @api\n */\nconst DragPan = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/Kinetic|undefined}\n   */\n  this.kinetic_ = options.kinetic;\n\n  /**\n   * @type {module:ol~Pixel}\n   */\n  this.lastCentroid = null;\n\n  /**\n   * @type {number}\n   */\n  this.lastPointersCount_;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.noKinetic_ = false;\n\n};\n\ninherits(DragPan, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  const targetPointers = this.targetPointers;\n  const centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      const deltaX = this.lastCentroid[0] - centroid[0];\n      const deltaY = centroid[1] - this.lastCentroid[1];\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      let center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      const distance = this.kinetic_.getDistance();\n      const angle = this.kinetic_.getAngle();\n      const center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      const centerpx = map.getPixelFromCoordinate(center);\n      const dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    view.setHint(ViewHint.INTERACTING, -1);\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    this.lastCentroid = null;\n    if (!this.handlingDownUpSequence) {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragPan.prototype.shouldStopEvent = FALSE;\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotate~Options=} opt_options Options.\n * @api\n */\nconst DragRotate = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n};\n\ninherits(DragRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    const delta = theta - this.lastAngle_;\n    const rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    const map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nDragRotate.prototype.shouldStopEvent = FALSE;\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n// FIXME add rotation\n\nimport {inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\n/**\n * @constructor\n * @extends {module:ol/Disposable}\n * @param {string} className CSS class name.\n */\nconst RenderBox = function(className) {\n\n  /**\n   * @type {module:ol/geom/Polygon}\n   * @private\n   */\n  this.geometry_ = null;\n\n  /**\n   * @type {HTMLDivElement}\n   * @private\n   */\n  this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n  this.element_.style.position = 'absolute';\n  this.element_.className = 'ol-box ' + className;\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol~Pixel}\n   */\n  this.endPixel_ = null;\n\n};\n\ninherits(RenderBox, Disposable);\n\n\n/**\n * @inheritDoc\n */\nRenderBox.prototype.disposeInternal = function() {\n  this.setMap(null);\n};\n\n\n/**\n * @private\n */\nRenderBox.prototype.render_ = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const px = 'px';\n  const style = this.element_.style;\n  style.left = Math.min(startPixel[0], endPixel[0]) + px;\n  style.top = Math.min(startPixel[1], endPixel[1]) + px;\n  style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n  style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n */\nRenderBox.prototype.setMap = function(map) {\n  if (this.map_) {\n    this.map_.getOverlayContainer().removeChild(this.element_);\n    const style = this.element_.style;\n    style.left = style.top = style.width = style.height = 'inherit';\n  }\n  this.map_ = map;\n  if (this.map_) {\n    this.map_.getOverlayContainer().appendChild(this.element_);\n  }\n};\n\n\n/**\n * @param {module:ol~Pixel} startPixel Start pixel.\n * @param {module:ol~Pixel} endPixel End pixel.\n */\nRenderBox.prototype.setPixels = function(startPixel, endPixel) {\n  this.startPixel_ = startPixel;\n  this.endPixel_ = endPixel;\n  this.createOrUpdateGeometry();\n  this.render_();\n};\n\n\n/**\n * Creates or updates the cached geometry.\n */\nRenderBox.prototype.createOrUpdateGeometry = function() {\n  const startPixel = this.startPixel_;\n  const endPixel = this.endPixel_;\n  const pixels = [\n    startPixel,\n    [startPixel[0], endPixel[1]],\n    endPixel,\n    [endPixel[0], startPixel[1]]\n  ];\n  const coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n  // close the polygon\n  coordinates[4] = coordinates[0].slice();\n  if (!this.geometry_) {\n    this.geometry_ = new Polygon([coordinates]);\n  } else {\n    this.geometry_.setCoordinates([coordinates]);\n  }\n};\n\n\n/**\n * @return {module:ol/geom/Polygon} Geometry.\n */\nRenderBox.prototype.getGeometry = function() {\n  return this.geometry_;\n};\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {inherits} from '../util.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {UNDEFINED} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol~Pixel, module:ol~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n *\n * @param {string} type The event type.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Originating event.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst DragBoxEvent = function(type, coordinate, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n\n  /**\n   * @const\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n\n};\n\ninherits(DragBoxEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @param {module:ol/interaction/DragBox~Options=} opt_options Options.\n * @api\n */\nconst DragBox = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/render/Box}\n   * @private\n   */\n  this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.startPixel_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/DragBox~EndCondition}\n   */\n  this.boxEndCondition_ = options.boxEndCondition ?\n    options.boxEndCondition : defaultBoxEndCondition;\n};\n\ninherits(DragBox, PointerInteraction);\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  const width = endPixel[0] - startPixel[0];\n  const height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * Returns geometry of last drawn box.\n * @return {module:ol/geom/Polygon} Geometry.\n * @api\n */\nDragBox.prototype.getGeometry = function() {\n  return this.box_.getGeometry();\n};\n\n\n/**\n * To be overridden by child classes.\n * FIXME: use constructor option instead of relying on overriding.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @protected\n */\nDragBox.prototype.onBoxEnd = UNDEFINED;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent,\n    this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {inherits} from '../util.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n *\n * @constructor\n * @extends {module:ol/interaction/DragBox}\n * @param {module:ol/interaction/DragZoom~Options=} opt_options Options.\n * @api\n */\nconst DragZoom = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const condition = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.out_ = options.out !== undefined ? options.out : false;\n\n  DragBox.call(this, {\n    condition: condition,\n    className: options.className || 'ol-dragzoom'\n  });\n\n};\n\ninherits(DragZoom, DragBox);\n\n\n/**\n * @inheritDoc\n */\nDragZoom.prototype.onBoxEnd = function() {\n  const map = this.getMap();\n\n  const view = /** @type {!module:ol/View} */ (map.getView());\n\n  const size = /** @type {!module:ol/size~Size} */ (map.getSize());\n\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtent(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    const factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  let center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n\n};\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {inherits} from '../util.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/KeyboardPan~Options=} opt_options Options.\n * @api\n */\nconst KeyboardPan = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultCondition_ = function(mapBrowserEvent) {\n    return noModifierKeys(mapBrowserEvent) &&\n      targetNotEditable(mapBrowserEvent);\n  };\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition !== undefined ?\n    options.condition : this.defaultCondition_;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelDelta_ = options.pixelDelta !== undefined ?\n    options.pixelDelta : 128;\n\n};\n\ninherits(KeyboardPan, Interaction);\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n *\n * @constructor\n * @param {module:ol/interaction/KeyboardZoom~Options=} opt_options Options.\n * @extends {module:ol/interaction/Interaction}\n * @api\n */\nconst KeyboardZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = options.delta ? options.delta : 1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n};\n\ninherits(KeyboardZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = mapBrowserEvent.originalEvent;\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nconst MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/MouseWheelZoom~Options=} opt_options Options.\n * @api\n */\nconst MouseWheelZoom = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : always;\n\n  /**\n   * @private\n   * @type {?module:ol/coordinate~Coordinate}\n   */\n  this.lastAnchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.startTime_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.timeoutId_ = undefined;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n   */\n  this.mode_ = undefined;\n\n  /**\n   * Trackpad events separated by this delay will be considered separate\n   * interactions.\n   * @type {number}\n   */\n  this.trackpadEventGap_ = 400;\n\n  /**\n   * @type {number|undefined}\n   */\n  this.trackpadTimeoutId_ = undefined;\n\n  /**\n   * The number of delta values per zoom level\n   * @private\n   * @type {number}\n   */\n  this.trackpadDeltaPerZoom_ = 300;\n\n  /**\n   * The zoom factor by which scroll zooming is allowed to exceed the limits.\n   * @private\n   * @type {number}\n   */\n  this.trackpadZoomBuffer_ = 1.5;\n\n};\n\ninherits(MouseWheelZoom, Interaction);\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  const map = mapBrowserEvent.map;\n  const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  let delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  const now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    const view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    let resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    const minResolution = view.getMinResolution();\n    const maxResolution = view.getMaxResolution();\n    let rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      const center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\n/**\n * @private\n */\nMouseWheelZoom.prototype.decrementInteractingHint_ = function() {\n  this.trackpadTimeoutId_ = undefined;\n  const view = this.getMap().getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n};\n\n\n/**\n * @private\n * @param {module:ol/PluggableMap} map Map.\n */\nMouseWheelZoom.prototype.handleWheelZoom_ = function(map) {\n  const view = map.getView();\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  const maxDelta = MAX_DELTA;\n  const delta = clamp(this.delta_, -maxDelta, maxDelta);\n  zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n  this.mode_ = undefined;\n  this.delta_ = 0;\n  this.lastAnchor_ = null;\n  this.startTime_ = undefined;\n  this.timeoutId_ = undefined;\n};\n\n\n/**\n * Enable or disable using the mouse's location as an anchor when zooming\n * @param {boolean} useAnchor true to zoom to the mouse's location, false\n * to zoom to the center of the map\n * @api\n */\nMouseWheelZoom.prototype.setMouseAnchor = function(useAnchor) {\n  this.useAnchor_ = useAnchor;\n  if (!useAnchor) {\n    this.lastAnchor_ = null;\n  }\n};\n\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n * @api\n */\nconst PinchRotate = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotating_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotationDelta_ = 0.0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n};\n\ninherits(PinchRotate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchRotate.prototype.shouldStopEvent = FALSE;\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {inherits} from '../util.js';\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/PinchZoom~Options=} opt_options Options.\n * @api\n */\nconst PinchZoom = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.constrainResolution_ = options.constrainResolution || false;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastDistance_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 1;\n\n};\n\ninherits(PinchZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let scaleDelta = 1.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n  const dx = touch0.clientX - touch1.clientX;\n  const dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  const distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  const resolution = view.getResolution();\n  const maxResolution = view.getMaxResolution();\n  const minResolution = view.getMinResolution();\n  let newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    const resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      const direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @inheritDoc\n */\nPinchZoom.prototype.shouldStopEvent = FALSE;\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {inherits} from '../util.js';\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<function(new: module:ol/format/Feature)>} [formatConstructors] Format constructors.\n * @property {module:ol/source/Vector} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {module:ol/proj~ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {Element} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event module:ol/interaction/DragAndDrop~DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/DragAndDrop~DragAndDropEventType} type Type.\n * @param {File} file File.\n * @param {Array.<module:ol/Feature>=} opt_features Features.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n */\nconst DragAndDropEvent = function(type, file, opt_features, opt_projection) {\n\n  Event.call(this, type);\n\n  /**\n   * The features parsed from dropped data.\n   * @type {Array.<module:ol/Feature>|undefined}\n   * @api\n   */\n  this.features = opt_features;\n\n  /**\n   * The dropped file.\n   * @type {File}\n   * @api\n   */\n  this.file = file;\n\n  /**\n   * The feature projection.\n   * @type {module:ol/proj/Projection|undefined}\n   * @api\n   */\n  this.projection = opt_projection;\n\n};\ninherits(DragAndDropEvent, Event);\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @fires module:ol/interaction/DragAndDrop~DragAndDropEvent\n * @param {module:ol/interaction/DragAndDrop~Options=} opt_options Options.\n * @api\n */\nconst DragAndDrop = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  Interaction.call(this, {\n    handleEvent: TRUE\n  });\n\n  /**\n   * @private\n   * @type {Array.<function(new: module:ol/format/Feature)>}\n   */\n  this.formatConstructors_ = options.formatConstructors ?\n    options.formatConstructors : [];\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = options.projection ?\n    getProjection(options.projection) : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.dropListenKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector}\n   */\n  this.source_ = options.source || null;\n\n  /**\n   * @private\n   * @type {Element}\n   */\n  this.target = options.target ? options.target : null;\n\n};\n\ninherits(DragAndDrop, Interaction);\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {module:ol/interaction/DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\n/**\n * @param {File} file File.\n * @param {Event} event Load event.\n * @private\n */\nDragAndDrop.prototype.handleResult_ = function(file, event) {\n  const result = event.target.result;\n  const map = this.getMap();\n  let projection = this.projection_;\n  if (!projection) {\n    const view = map.getView();\n    projection = view.getProjection();\n  }\n\n  const formatConstructors = this.formatConstructors_;\n  let features = [];\n  for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n    /**\n     * Avoid \"cannot instantiate abstract class\" error.\n     * @type {Function}\n     */\n    const formatConstructor = formatConstructors[i];\n    /**\n     * @type {module:ol/format/Feature}\n     */\n    const format = new formatConstructor();\n    features = this.tryReadFeatures_(format, result, {\n      featureProjection: projection\n    });\n    if (features && features.length > 0) {\n      break;\n    }\n  }\n  if (this.source_) {\n    this.source_.clear();\n    this.source_.addFeatures(features);\n  }\n  this.dispatchEvent(\n    new DragAndDropEvent(\n      DragAndDropEventType.ADD_FEATURES, file,\n      features, projection));\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.registerListeners_ = function() {\n  const map = this.getMap();\n  if (map) {\n    const dropArea = this.target ? this.target : map.getViewport();\n    this.dropListenKeys_ = [\n      listen(dropArea, EventType.DROP, handleDrop, this),\n      listen(dropArea, EventType.DRAGENTER, handleStop, this),\n      listen(dropArea, EventType.DRAGOVER, handleStop, this),\n      listen(dropArea, EventType.DROP, handleStop, this)\n    ];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setActive = function(active) {\n  Interaction.prototype.setActive.call(this, active);\n  if (active) {\n    this.registerListeners_();\n  } else {\n    this.unregisterListeners_();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nDragAndDrop.prototype.setMap = function(map) {\n  this.unregisterListeners_();\n  Interaction.prototype.setMap.call(this, map);\n  if (this.getActive()) {\n    this.registerListeners_();\n  }\n};\n\n\n/**\n * @param {module:ol/format/Feature} format Format.\n * @param {string} text Text.\n * @param {module:ol/format/Feature~ReadOptions} options Read options.\n * @private\n * @return {Array.<module:ol/Feature>} Features.\n */\nDragAndDrop.prototype.tryReadFeatures_ = function(format, text, options) {\n  try {\n    return format.readFeatures(text, options);\n  } catch (e) {\n    return null;\n  }\n};\n\n\n/**\n * @private\n */\nDragAndDrop.prototype.unregisterListeners_ = function() {\n  if (this.dropListenKeys_) {\n    this.dropListenKeys_.forEach(unlistenByKey);\n    this.dropListenKeys_ = null;\n  }\n};\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {inherits} from '../util.js';\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport {rotate, rotateWithoutConstraints, zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/DragRotateAndZoom~Options=} opt_options Options.\n * @api\n */\nconst DragRotateAndZoom = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastAngle_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lastMagnitude_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.lastScaleDelta_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n};\n\ninherits(DragRotateAndZoom, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  const map = mapBrowserEvent.map;\n  const size = map.getSize();\n  const offset = mapBrowserEvent.pixel;\n  const deltaX = offset[0] - size[0] / 2;\n  const deltaY = size[1] / 2 - offset[1];\n  const theta = Math.atan2(deltaY, deltaX);\n  const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n  const view = map.getView();\n  if (view.getConstraints().rotation !== disable && this.lastAngle_ !== undefined) {\n    const angleDelta = theta - this.lastAngle_;\n    rotateWithoutConstraints(view, view.getRotation() - angleDelta);\n  }\n  this.lastAngle_ = theta;\n  if (this.lastMagnitude_ !== undefined) {\n    const resolution = this.lastMagnitude_ * (view.getResolution() / magnitude);\n    zoomWithoutConstraints(view, resolution);\n  }\n  if (this.lastMagnitude_ !== undefined) {\n    this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n  }\n  this.lastMagnitude_ = magnitude;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  const direction = this.lastScaleDelta_ - 1;\n  rotate(view, view.getRotation());\n  zoom(view, view.getResolution(), undefined, this.duration_, direction);\n  this.lastScaleDelta_ = 0;\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotateAndZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (this.condition_(mapBrowserEvent)) {\n    mapBrowserEvent.map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    this.lastMagnitude_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array.<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object.<string, module:ol/color~Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n","/**\n * @module ol/structs/LRUCache\n */\nimport {inherits} from '../util.js';\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n * @constructor\n * @extends {module:ol/events/EventTarget}\n * @fires module:ol/events/Event~Event\n * @struct\n * @template T\n * @param {number=} opt_highWaterMark High water mark.\n */\nconst LRUCache = function(opt_highWaterMark) {\n\n  EventTarget.call(this);\n\n  /**\n   * @type {number}\n   */\n  this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.count_ = 0;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/structs/LRUCache~Entry>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.oldest_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/structs/LRUCache~Entry}\n   */\n  this.newest_ = null;\n\n};\n\ninherits(LRUCache, EventTarget);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nLRUCache.prototype.canExpireCache = function() {\n  return this.getCount() > this.highWaterMark;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nLRUCache.prototype.clear = function() {\n  this.count_ = 0;\n  this.entries_ = {};\n  this.oldest_ = null;\n  this.newest_ = null;\n  this.dispatchEvent(EventType.CLEAR);\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Contains key.\n */\nLRUCache.prototype.containsKey = function(key) {\n  return this.entries_.hasOwnProperty(key);\n};\n\n\n/**\n * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n *     to call for every entry from the oldest to the newer. This function takes\n *     3 arguments (the entry value, the entry key and the LRUCache object).\n *     The return value is ignored.\n * @param {S=} opt_this The object to use as `this` in `f`.\n * @template S\n */\nLRUCache.prototype.forEach = function(f, opt_this) {\n  let entry = this.oldest_;\n  while (entry) {\n    f.call(opt_this, entry.value_, entry.key_, this);\n    entry = entry.newer;\n  }\n};\n\n\n/**\n * @param {string} key Key.\n * @return {T} Value.\n */\nLRUCache.prototype.get = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined,\n    15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    return entry.value_;\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n    this.oldest_.older = null;\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  entry.newer = null;\n  entry.older = this.newest_;\n  this.newest_.newer = entry;\n  this.newest_ = entry;\n  return entry.value_;\n};\n\n\n/**\n * Remove an entry from the cache.\n * @param {string} key The entry key.\n * @return {T} The removed entry.\n */\nLRUCache.prototype.remove = function(key) {\n  const entry = this.entries_[key];\n  assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n  if (entry === this.newest_) {\n    this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n    if (this.newest_) {\n      this.newest_.newer = null;\n    }\n  } else if (entry === this.oldest_) {\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (this.oldest_) {\n      this.oldest_.older = null;\n    }\n  } else {\n    entry.newer.older = entry.older;\n    entry.older.newer = entry.newer;\n  }\n  delete this.entries_[key];\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @return {number} Count.\n */\nLRUCache.prototype.getCount = function() {\n  return this.count_;\n};\n\n\n/**\n * @return {Array.<string>} Keys.\n */\nLRUCache.prototype.getKeys = function() {\n  const keys = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    keys[i++] = entry.key_;\n  }\n  return keys;\n};\n\n\n/**\n * @return {Array.<T>} Values.\n */\nLRUCache.prototype.getValues = function() {\n  const values = new Array(this.count_);\n  let i = 0;\n  let entry;\n  for (entry = this.newest_; entry; entry = entry.older) {\n    values[i++] = entry.value_;\n  }\n  return values;\n};\n\n\n/**\n * @return {T} Last value.\n */\nLRUCache.prototype.peekLast = function() {\n  return this.oldest_.value_;\n};\n\n\n/**\n * @return {string} Last key.\n */\nLRUCache.prototype.peekLastKey = function() {\n  return this.oldest_.key_;\n};\n\n\n/**\n * Get the key of the newest item in the cache.  Throws if the cache is empty.\n * @return {string} The newest key.\n */\nLRUCache.prototype.peekFirstKey = function() {\n  return this.newest_.key_;\n};\n\n\n/**\n * @return {T} value Value.\n */\nLRUCache.prototype.pop = function() {\n  const entry = this.oldest_;\n  delete this.entries_[entry.key_];\n  if (entry.newer) {\n    entry.newer.older = null;\n  }\n  this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n  if (!this.oldest_) {\n    this.newest_ = null;\n  }\n  --this.count_;\n  return entry.value_;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.replace = function(key, value) {\n  this.get(key);  // update `newest_`\n  this.entries_[key].value_ = value;\n};\n\n\n/**\n * @param {string} key Key.\n * @param {T} value Value.\n */\nLRUCache.prototype.set = function(key, value) {\n  assert(!(key in this.entries_),\n    16); // Tried to set a value for a key that is used already\n  const entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n    key_: key,\n    newer: null,\n    older: this.newest_,\n    value_: value\n  });\n  if (!this.newest_) {\n    this.oldest_ = entry;\n  } else {\n    this.newest_.newer = entry;\n  }\n  this.newest_ = entry;\n  this.entries_[key] = entry;\n  ++this.count_;\n};\n\n\n/**\n * Set a maximum number of entries for the cache.\n * @param {number} size Cache size.\n * @api\n */\nLRUCache.prototype.setSize = function(size) {\n  this.highWaterMark = size;\n};\n\n\n/**\n * Prune the cache.\n */\nLRUCache.prototype.prune = function() {\n  while (this.canExpireCache()) {\n    this.pop();\n  }\n};\nexport default LRUCache;\n","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array.<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array.<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array.<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport const defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array.<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache.<HTMLCanvasElement>}\n * @api\n */\nexport const labelCache = new LRUCache();\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n\n/**\n * @type {!Object.<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 60;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  function isAvailable(font) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (font != referenceFont) {\n        context.font = size + font + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    return available;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (let i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      const fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  let span;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n * @property {boolean} snapToPixel\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n *\n * @constructor\n * @abstract\n * @param {module:ol/style/Image~Options} options Options.\n * @api\n */\nconst ImageStyle = function(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.snapToPixel_ = options.snapToPixel;\n\n};\n\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function() {\n  return this.opacity_;\n};\n\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Determine whether the symbolizer should be snapped to a pixel.\n * @return {boolean} The symbolizer should snap to a pixel.\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function() {\n  return this.snapToPixel_;\n};\n\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array.<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function() {};\n\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function(pixelRatio) {};\n\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function() {};\n\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function() {};\n\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array.<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function() {};\n\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function() {};\n\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function(opacity) {\n  this.opacity_ = opacity;\n};\n\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function(rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set whether to snap the image to the closest pixel.\n *\n * @param {boolean} snapToPixel Snap to pixel?\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function(snapToPixel) {\n  this.snapToPixel_ = snapToPixel;\n};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function() {};\n\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function(listener, thisArg) {};\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\nimport {inherits} from '../util.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the shape in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the shape's position is animated. Without it, the shape may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array.<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n *\n * @constructor\n * @param {module:ol/style/RegularShape~Options} options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst RegularShape = function(options) {\n  /**\n   * @private\n   * @type {Array.<string>}\n   */\n  this.checksums_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.hitDetectionCanvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = [0, 0];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.points_ = options.points;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n    options.radius : options.radius1);\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.radius2_ = options.radius2;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.imageSize_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.hitDetectionImageSize_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/style/AtlasManager|undefined}\n   */\n  this.atlasManager_ = options.atlasManager;\n\n  this.render_(this.atlasManager_);\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  ImageStyle.call(this, {\n    opacity: 1,\n    rotateWithView: rotateWithView,\n    rotation: options.rotation !== undefined ? options.rotation : 0,\n    scale: 1,\n    snapToPixel: snapToPixel\n  });\n};\n\ninherits(RegularShape, ImageStyle);\n\n\n/**\n * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/RegularShape} The cloned style.\n * @api\n */\nRegularShape.prototype.clone = function() {\n  const style = new RegularShape({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    points: this.getPoints(),\n    radius: this.getRadius(),\n    radius2: this.getRadius2(),\n    angle: this.getAngle(),\n    snapToPixel: this.getSnapToPixel(),\n    stroke: this.getStroke() ?  this.getStroke().clone() : undefined,\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getAnchor = function() {\n  return this.anchor_;\n};\n\n\n/**\n * Get the angle used in generating the shape.\n * @return {number} Shape's rotation in radians.\n * @api\n */\nRegularShape.prototype.getAngle = function() {\n  return this.angle_;\n};\n\n\n/**\n * Get the fill style for the shape.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nRegularShape.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.hitDetectionCanvas_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getImage = function(pixelRatio) {\n  return this.canvas_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageSize = function() {\n  return this.imageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getHitDetectionImageSize = function() {\n  return this.hitDetectionImageSize_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.getImageState = function() {\n  return ImageState.LOADED;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getOrigin = function() {\n  return this.origin_;\n};\n\n\n/**\n * Get the number of points for generating the shape.\n * @return {number} Number of points for stars and regular polygons.\n * @api\n */\nRegularShape.prototype.getPoints = function() {\n  return this.points_;\n};\n\n\n/**\n * Get the (primary) radius for the shape.\n * @return {number} Radius.\n * @api\n */\nRegularShape.prototype.getRadius = function() {\n  return this.radius_;\n};\n\n\n/**\n * Get the secondary radius for the shape.\n * @return {number|undefined} Radius2.\n * @api\n */\nRegularShape.prototype.getRadius2 = function() {\n  return this.radius2_;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nRegularShape.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * Get the stroke style for the shape.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nRegularShape.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.listenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.load = function() {};\n\n\n/**\n * @inheritDoc\n */\nRegularShape.prototype.unlistenImageChange = function(listener, thisArg) {};\n\n\n/**\n * @protected\n * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n */\nRegularShape.prototype.render_ = function(atlasManager) {\n  let imageSize;\n  let lineCap = '';\n  let lineJoin = '';\n  let miterLimit = 0;\n  let lineDash = null;\n  let lineDashOffset = 0;\n  let strokeStyle;\n  let strokeWidth = 0;\n\n  if (this.stroke_) {\n    strokeStyle = this.stroke_.getColor();\n    if (strokeStyle === null) {\n      strokeStyle = defaultStrokeStyle;\n    }\n    strokeStyle = asColorLike(strokeStyle);\n    strokeWidth = this.stroke_.getWidth();\n    if (strokeWidth === undefined) {\n      strokeWidth = defaultLineWidth;\n    }\n    lineDash = this.stroke_.getLineDash();\n    lineDashOffset = this.stroke_.getLineDashOffset();\n    if (!CANVAS_LINE_DASH) {\n      lineDash = null;\n      lineDashOffset = 0;\n    }\n    lineJoin = this.stroke_.getLineJoin();\n    if (lineJoin === undefined) {\n      lineJoin = defaultLineJoin;\n    }\n    lineCap = this.stroke_.getLineCap();\n    if (lineCap === undefined) {\n      lineCap = defaultLineCap;\n    }\n    miterLimit = this.stroke_.getMiterLimit();\n    if (miterLimit === undefined) {\n      miterLimit = defaultMiterLimit;\n    }\n  }\n\n  let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n  /** @type {module:ol/style/RegularShape~RenderOptions} */\n  const renderOptions = {\n    strokeStyle: strokeStyle,\n    strokeWidth: strokeWidth,\n    size: size,\n    lineCap: lineCap,\n    lineDash: lineDash,\n    lineDashOffset: lineDashOffset,\n    lineJoin: lineJoin,\n    miterLimit: miterLimit\n  };\n\n  if (atlasManager === undefined) {\n    // no atlas manager is used, create a new canvas\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n  } else {\n    // an atlas manager is used, add the symbol to an atlas\n    size = Math.round(size);\n\n    const hasCustomHitDetectionImage = !this.fill_;\n    let renderHitDetectionCallback;\n    if (hasCustomHitDetectionImage) {\n      // render the hit-detection image into a separate atlas image\n      renderHitDetectionCallback =\n          this.drawHitDetectionCanvas_.bind(this, renderOptions);\n    }\n\n    const id = this.getChecksum();\n    const info = atlasManager.add(\n      id, size, size, this.draw_.bind(this, renderOptions),\n      renderHitDetectionCallback);\n\n    this.canvas_ = info.image;\n    this.origin_ = [info.offsetX, info.offsetY];\n    imageSize = info.image.width;\n\n    if (hasCustomHitDetectionImage) {\n      this.hitDetectionCanvas_ = info.hitImage;\n      this.hitDetectionImageSize_ =\n          [info.hitImage.width, info.hitImage.height];\n    } else {\n      this.hitDetectionCanvas_ = this.canvas_;\n      this.hitDetectionImageSize_ = [imageSize, imageSize];\n    }\n  }\n\n  this.anchor_ = [size / 2, size / 2];\n  this.size_ = [size, size];\n  this.imageSize_ = [imageSize, imageSize];\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The rendering context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.draw_ = function(renderOptions, context, x, y) {\n  let i, angle0, radiusC;\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n\n  if (this.fill_) {\n    let color = this.fill_.getColor();\n    if (color === null) {\n      color = defaultFillStyle;\n    }\n    context.fillStyle = asColorLike(color);\n    context.fill();\n  }\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.lineCap = renderOptions.lineCap;\n    context.lineJoin = renderOptions.lineJoin;\n    context.miterLimit = renderOptions.miterLimit;\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n */\nRegularShape.prototype.createHitDetectionCanvas_ = function(renderOptions) {\n  this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n  if (this.fill_) {\n    this.hitDetectionCanvas_ = this.canvas_;\n    return;\n  }\n\n  // if no fill style is set, create an extra hit-detection image with a\n  // default fill style\n  const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n  this.hitDetectionCanvas_ = context.canvas;\n\n  this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n};\n\n\n/**\n * @private\n * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n * @param {CanvasRenderingContext2D} context The context.\n * @param {number} x The origin for the symbol (x).\n * @param {number} y The origin for the symbol (y).\n */\nRegularShape.prototype.drawHitDetectionCanvas_ = function(renderOptions, context, x, y) {\n  // reset transform\n  context.setTransform(1, 0, 0, 1, 0, 0);\n\n  // then move to (x, y)\n  context.translate(x, y);\n\n  context.beginPath();\n\n  let points = this.points_;\n  if (points === Infinity) {\n    context.arc(\n      renderOptions.size / 2, renderOptions.size / 2,\n      this.radius_, 0, 2 * Math.PI, true);\n  } else {\n    const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n      : this.radius_;\n    if (radius2 !== this.radius_) {\n      points = 2 * points;\n    }\n    let i, radiusC, angle0;\n    for (i = 0; i <= points; i++) {\n      angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n      radiusC = i % 2 === 0 ? this.radius_ : radius2;\n      context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n        renderOptions.size / 2 + radiusC * Math.sin(angle0));\n    }\n  }\n\n  context.fillStyle = defaultFillStyle;\n  context.fill();\n  if (this.stroke_) {\n    context.strokeStyle = renderOptions.strokeStyle;\n    context.lineWidth = renderOptions.strokeWidth;\n    if (renderOptions.lineDash) {\n      context.setLineDash(renderOptions.lineDash);\n      context.lineDashOffset = renderOptions.lineDashOffset;\n    }\n    context.stroke();\n  }\n  context.closePath();\n};\n\n\n/**\n * @return {string} The checksum.\n */\nRegularShape.prototype.getChecksum = function() {\n  const strokeChecksum = this.stroke_ ?\n    this.stroke_.getChecksum() : '-';\n  const fillChecksum = this.fill_ ?\n    this.fill_.getChecksum() : '-';\n\n  const recalculate = !this.checksums_ ||\n      (strokeChecksum != this.checksums_[1] ||\n      fillChecksum != this.checksums_[2] ||\n      this.radius_ != this.checksums_[3] ||\n      this.radius2_ != this.checksums_[4] ||\n      this.angle_ != this.checksums_[5] ||\n      this.points_ != this.checksums_[6]);\n\n  if (recalculate) {\n    const checksum = 'r' + strokeChecksum + fillChecksum +\n        (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n        (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n        (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n        (this.points_ !== undefined ? this.points_.toString() : '-');\n    this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n      this.radius_, this.radius2_, this.angle_, this.points_];\n  }\n\n  return this.checksums_[0];\n};\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\nimport {inherits} from '../util.js';\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the circle in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the circle's position is animated. Without it, the circle may jitter noticeably.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Circle~Options=} opt_options Options.\n * @extends {module:ol/style/RegularShape}\n * @api\n */\nconst CircleStyle = function(opt_options) {\n\n  const options = opt_options || {};\n\n  RegularShape.call(this, {\n    points: Infinity,\n    fill: options.fill,\n    radius: options.radius,\n    snapToPixel: options.snapToPixel,\n    stroke: options.stroke,\n    atlasManager: options.atlasManager\n  });\n\n};\n\ninherits(CircleStyle, RegularShape);\n\n\n/**\n * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n * @return {module:ol/style/Circle} The cloned style.\n * @override\n * @api\n */\nCircleStyle.prototype.clone = function() {\n  const style = new CircleStyle({\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    radius: this.getRadius(),\n    snapToPixel: this.getSnapToPixel(),\n    atlasManager: this.atlasManager_\n  });\n  style.setOpacity(this.getOpacity());\n  style.setScale(this.getScale());\n  return style;\n};\n\n\n/**\n * Set the circle radius.\n *\n * @param {number} radius Circle radius.\n * @api\n */\nCircleStyle.prototype.setRadius = function(radius) {\n  this.radius_ = radius;\n  this.render_(this.atlasManager_);\n};\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Fill~Options=} opt_options Options.\n * @api\n */\nconst Fill = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function() {\n  const color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array.<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n *\n * @constructor\n * @param {module:ol/style/Stroke~Options=} opt_options Options.\n * @api\n */\nconst Stroke = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function() {\n  const color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function() {\n  return this.lineCap_;\n};\n\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array.<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function() {\n  return this.lineDash_;\n};\n\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function() {\n  return this.lineDashOffset_;\n};\n\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function() {\n  return this.lineJoin_;\n};\n\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function() {\n  return this.miterLimit_;\n};\n\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function() {\n  return this.width_;\n};\n\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function(color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function(lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array.<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function(lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function(lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function(lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function(miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function(width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function() {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array.<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * @constructor\n * @struct\n * @param {module:ol/style/Style~Options=} opt_options Style options.\n * @api\n */\nconst Style = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function() {\n  let geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function() {\n  return this.renderer_;\n};\n\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function(renderer) {\n  this.renderer_ = renderer;\n};\n\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function() {\n  return this.geometry_;\n};\n\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function() {\n  return this.geometryFunction_;\n};\n\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function(image) {\n  this.image_ = image;\n};\n\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function() {\n  return this.zIndex_;\n};\n\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *     Feature property or geometry or function returning a geometry to render\n *     for this style.\n * @api\n */\nStyle.prototype.setGeometry = function(geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function(zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array.<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object.<module:ol/geom/GeometryType, Array.<module:ol/style/Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {inherits} from './util.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @constructor\n * @extends {module:ol/Object}\n * @param {module:ol/geom/Geometry|Object.<string, *>=} opt_geometryOrProperties\n * You may pass a Geometry object directly, or an object literal containing\n * properties. If you pass an object literal, you may include a Geometry\n * associated with a `geometry` key.\n * @api\n */\nconst Feature = function(opt_geometryOrProperties) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {number|string|undefined}\n   */\n  this.id_ = undefined;\n\n  /**\n   * @type {string}\n   * @private\n   */\n  this.geometryName_ = 'geometry';\n\n  /**\n   * User provided style.\n   * @private\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   */\n  this.style_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   */\n  this.styleFunction_ = undefined;\n\n  /**\n   * @private\n   * @type {?module:ol/events~EventsKey}\n   */\n  this.geometryChangeKey_ = null;\n\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n\n  if (opt_geometryOrProperties !== undefined) {\n    if (opt_geometryOrProperties instanceof Geometry ||\n        !opt_geometryOrProperties) {\n      const geometry = opt_geometryOrProperties;\n      this.setGeometry(geometry);\n    } else {\n      /** @type {Object.<string, *>} */\n      const properties = opt_geometryOrProperties;\n      this.setProperties(properties);\n    }\n  }\n};\n\ninherits(Feature, BaseObject);\n\n\n/**\n * Clone this feature. If the original feature has a geometry it\n * is also cloned. The feature id is not set in the clone.\n * @return {module:ol/Feature} The clone.\n * @api\n */\nFeature.prototype.clone = function() {\n  const clone = new Feature(this.getProperties());\n  clone.setGeometryName(this.getGeometryName());\n  const geometry = this.getGeometry();\n  if (geometry) {\n    clone.setGeometry(geometry.clone());\n  }\n  const style = this.getStyle();\n  if (style) {\n    clone.setStyle(style);\n  }\n  return clone;\n};\n\n\n/**\n * Get the feature's default geometry.  A feature may have any number of named\n * geometries.  The \"default\" geometry (the one that is rendered by default) is\n * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n * @api\n * @observable\n */\nFeature.prototype.getGeometry = function() {\n  return (\n    /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n  );\n};\n\n\n/**\n * Get the feature identifier.  This is a stable identifier for the feature and\n * is either set when reading data from a remote source or set explicitly by\n * calling {@link module:ol/Feature~Feature#setId}.\n * @return {number|string|undefined} Id.\n * @api\n */\nFeature.prototype.getId = function() {\n  return this.id_;\n};\n\n\n/**\n * Get the name of the feature's default geometry.  By default, the default\n * geometry is named `geometry`.\n * @return {string} Get the property name associated with the default geometry\n *     for this feature.\n * @api\n */\nFeature.prototype.getGeometryName = function() {\n  return this.geometryName_;\n};\n\n\n/**\n * Get the feature's style. Will return what was provided to the\n * {@link module:ol/Feature~Feature#setStyle} method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n * @api\n */\nFeature.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the feature's style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n * representing the current style of this feature.\n * @api\n */\nFeature.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChange_ = function() {\n  this.changed();\n};\n\n\n/**\n * @private\n */\nFeature.prototype.handleGeometryChanged_ = function() {\n  if (this.geometryChangeKey_) {\n    unlistenByKey(this.geometryChangeKey_);\n    this.geometryChangeKey_ = null;\n  }\n  const geometry = this.getGeometry();\n  if (geometry) {\n    this.geometryChangeKey_ = listen(geometry,\n      EventType.CHANGE, this.handleGeometryChange_, this);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the default geometry for the feature.  This will update the property\n * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n * @api\n * @observable\n */\nFeature.prototype.setGeometry = function(geometry) {\n  this.set(this.geometryName_, geometry);\n};\n\n\n/**\n * Set the style for the feature.  This can be a single style object, an array\n * of styles, or a function that takes a resolution and returns an array of\n * styles. If it is `null` the feature has no style (a `null` style).\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setStyle = function(style) {\n  this.style_ = style;\n  this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n  this.changed();\n};\n\n\n/**\n * Set the feature id.  The feature id is considered stable and may be used when\n * requesting features or comparing identifiers returned from a remote source.\n * The feature id can be used with the\n * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n * @param {number|string|undefined} id The feature id.\n * @api\n * @fires module:ol/events/Event~Event#event:change\n */\nFeature.prototype.setId = function(id) {\n  this.id_ = id;\n  this.changed();\n};\n\n\n/**\n * Set the property name to be used when getting the feature's default geometry.\n * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n * this name will be returned.\n * @param {string} name The property name of the default geometry.\n * @api\n */\nFeature.prototype.setGeometryName = function(name) {\n  unlisten(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.geometryName_ = name;\n  listen(\n    this, getChangeEventType(this.geometryName_),\n    this.handleGeometryChanged_, this);\n  this.handleGeometryChanged_();\n};\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array.<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array.<module:ol/style/Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/geom/Circle\n */\nimport {inherits} from '../util.js';\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number=} opt_radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst Circle = function(center, opt_radius, opt_layout) {\n  SimpleGeometry.call(this);\n  const radius = opt_radius ? opt_radius : 0;\n  this.setCenterAndRadius(center, radius, opt_layout);\n};\n\ninherits(Circle, SimpleGeometry);\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/Circle} Clone.\n * @override\n * @api\n */\nCircle.prototype.clone = function() {\n  const circle = new Circle(null);\n  circle.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return circle;\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  const squaredDistance = dx * dx + dy * dy;\n  if (squaredDistance < minSquaredDistance) {\n    if (squaredDistance === 0) {\n      for (let i = 0; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    } else {\n      const delta = this.getRadius() / Math.sqrt(squaredDistance);\n      closestPoint[0] = flatCoordinates[0] + delta * dx;\n      closestPoint[1] = flatCoordinates[1] + delta * dy;\n      for (let i = 2; i < this.stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n    }\n    closestPoint.length = this.stride;\n    return squaredDistance;\n  } else {\n    return minSquaredDistance;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.containsXY = function(x, y) {\n  const flatCoordinates = this.flatCoordinates;\n  const dx = x - flatCoordinates[0];\n  const dy = y - flatCoordinates[1];\n  return dx * dx + dy * dy <= this.getRadiusSquared_();\n};\n\n\n/**\n * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nCircle.prototype.getCenter = function() {\n  return this.flatCoordinates.slice(0, this.stride);\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.computeExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n  return createOrUpdate(\n    flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n    flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n    extent);\n};\n\n\n/**\n * Return the radius of the circle.\n * @return {number} Radius.\n * @api\n */\nCircle.prototype.getRadius = function() {\n  return Math.sqrt(this.getRadiusSquared_());\n};\n\n\n/**\n * @private\n * @return {number} Radius squared.\n */\nCircle.prototype.getRadiusSquared_ = function() {\n  const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n  const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n  return dx * dx + dy * dy;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.getType = function() {\n  return GeometryType.CIRCLE;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nCircle.prototype.intersectsExtent = function(extent) {\n  const circleExtent = this.getExtent();\n  if (intersects(extent, circleExtent)) {\n    const center = this.getCenter();\n\n    if (extent[0] <= center[0] && extent[2] >= center[0]) {\n      return true;\n    }\n    if (extent[1] <= center[1] && extent[3] >= center[1]) {\n      return true;\n    }\n\n    return forEachCorner(extent, this.intersectsCoordinate, this);\n  }\n  return false;\n\n};\n\n\n/**\n * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @api\n */\nCircle.prototype.setCenter = function(center) {\n  const stride = this.stride;\n  const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n  const flatCoordinates = center.slice();\n  flatCoordinates[stride] = flatCoordinates[0] + radius;\n  for (let i = 1; i < stride; ++i) {\n    flatCoordinates[stride + i] = center[i];\n  }\n  this.setFlatCoordinates(this.layout, flatCoordinates);\n};\n\n\n/**\n * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n * number) of the circle.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} radius Radius.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nCircle.prototype.setCenterAndRadius = function(center, radius, opt_layout) {\n  if (!center) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array.<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.getCoordinates = function() {};\n\n\n/**\n * @inheritDoc\n */\nCircle.prototype.setCoordinates = function(coordinates, opt_layout) {};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nCircle.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\n\n\n/**\n * Set the radius of the circle. The radius is in the units of the projection.\n * @param {number} radius Radius.\n * @api\n */\nCircle.prototype.setRadius = function(radius) {\n  this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n  this.changed();\n};\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {module:ol/geom/Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array.<number>=} opt_dest Destination.\n * @return {Array.<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst LineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.flatMidpoint_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatMidpointRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(LineString, SimpleGeometry);\n\n\n/**\n * Append the passed coordinate to the coordinates of the linestring.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @api\n */\nLineString.prototype.appendCoordinate = function(coordinate) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = coordinate.slice();\n  } else {\n    extend(this.flatCoordinates, coordinate);\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/LineString} Clone.\n * @override\n * @api\n */\nLineString.prototype.clone = function() {\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return lineString;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestPoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Iterate over each segment, calling the provided callback.\n * If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n *\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T,S\n * @api\n */\nLineString.prototype.forEachSegment = function(callback) {\n  return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate) {\n  if (this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  return lineStringCoordinateAtM(this.flatCoordinates, 0,\n    this.flatCoordinates.length, this.stride, m, extrapolate);\n};\n\n\n/**\n * Return the coordinates of the linestring.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nLineString.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the coordinate at the provided fraction along the linestring.\n * The `fraction` is a number between 0 and 1, where 0 is the start of the\n * linestring and 1 is the end.\n * @param {number} fraction Fraction.\n * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n *     be modified. If not provided, a new coordinate will be returned.\n * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n * @api\n */\nLineString.prototype.getCoordinateAt = function(fraction, opt_dest) {\n  return interpolatePoint(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    fraction, opt_dest);\n};\n\n\n/**\n * Return the length of the linestring on projected plane.\n * @return {number} Length (on projected plane).\n * @api\n */\nLineString.prototype.getLength = function() {\n  return lineStringLength(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoint.\n */\nLineString.prototype.getFlatMidpoint = function() {\n  if (this.flatMidpointRevision_ != this.getRevision()) {\n    this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n    this.flatMidpointRevision_ = this.getRevision();\n  }\n  return this.flatMidpoint_;\n};\n\n\n/**\n * @inheritDoc\n */\nLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    squaredTolerance, simplifiedFlatCoordinates, 0);\n  const simplifiedLineString = new LineString(null);\n  simplifiedLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates);\n  return simplifiedLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.getType = function() {\n  return GeometryType.LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineString(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n    extent);\n};\n\n\n/**\n * Set the coordinates of the linestring.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiLineString = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n  this.ends_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiLineString, SimpleGeometry);\n\n\n/**\n * Append the passed linestring to the multilinestring.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @api\n */\nMultiLineString.prototype.appendLineString = function(lineString) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = lineString.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n  }\n  this.ends_.push(this.flatCoordinates.length);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiLineString} Clone.\n * @override\n * @api\n */\nMultiLineString.prototype.clone = function() {\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), this.ends_.slice());\n  return multiLineString;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.ends_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestArrayPoint(\n    this.flatCoordinates, 0, this.ends_, this.stride,\n    this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * Returns the coordinate at `m` using linear interpolation, or `null` if no\n * such coordinate exists.\n *\n * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n * M will return the first coordinate and Ms greater than the last M will\n * return the last coordinate.\n *\n * `opt_interpolate` controls interpolation between consecutive LineStrings\n * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n * will be linearly interpolated between the last coordinate of one LineString\n * and the first coordinate of the next LineString.  If `opt_interpolate` is\n * `false` then the function will return `null` for Ms falling between\n * LineStrings.\n *\n * @param {number} m M.\n * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nMultiLineString.prototype.getCoordinateAtM = function(m, opt_extrapolate, opt_interpolate) {\n  if ((this.layout != GeometryLayout.XYM &&\n       this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0) {\n    return null;\n  }\n  const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n  const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n  return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n    this.ends_, this.stride, m, extrapolate, interpolate);\n};\n\n\n/**\n * Return the coordinates of the multilinestring.\n * @return {Array.<Array.<module:ol/coordinate~Coordinate>>} Coordinates.\n * @override\n * @api\n */\nMultiLineString.prototype.getCoordinates = function() {\n  return inflateCoordinatesArray(\n    this.flatCoordinates, 0, this.ends_, this.stride);\n};\n\n\n/**\n * @return {Array.<number>} Ends.\n */\nMultiLineString.prototype.getEnds = function() {\n  return this.ends_;\n};\n\n\n/**\n * Return the linestring at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/LineString} LineString.\n * @api\n */\nMultiLineString.prototype.getLineString = function(index) {\n  if (index < 0 || this.ends_.length <= index) {\n    return null;\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]));\n  return lineString;\n};\n\n\n/**\n * Return the linestrings of this multilinestring.\n * @return {Array.<module:ol/geom/LineString>} LineStrings.\n * @api\n */\nMultiLineString.prototype.getLineStrings = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const ends = this.ends_;\n  const layout = this.layout;\n  /** @type {Array.<module:ol/geom/LineString>} */\n  const lineStrings = [];\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(layout, flatCoordinates.slice(offset, end));\n    lineStrings.push(lineString);\n    offset = end;\n  }\n  return lineStrings;\n};\n\n\n/**\n * @return {Array.<number>} Flat midpoints.\n */\nMultiLineString.prototype.getFlatMidpoints = function() {\n  const midpoints = [];\n  const flatCoordinates = this.flatCoordinates;\n  let offset = 0;\n  const ends = this.ends_;\n  const stride = this.stride;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const midpoint = interpolatePoint(\n      flatCoordinates, offset, end, stride, 0.5);\n    extend(midpoints, midpoint);\n    offset = end;\n  }\n  return midpoints;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiLineString.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEnds = [];\n  simplifiedFlatCoordinates.length = douglasPeuckerArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0, simplifiedEnds);\n  const simplifiedMultiLineString = new MultiLineString(null);\n  simplifiedMultiLineString.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEnds);\n  return simplifiedMultiLineString;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.getType = function() {\n  return GeometryType.MULTI_LINE_STRING;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiLineString.prototype.intersectsExtent = function(extent) {\n  return intersectsLineStringArray(\n    this.flatCoordinates, 0, this.ends_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multilinestring.\n * @param {Array.<Array.<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiLineString.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.ends_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<number>} ends Ends.\n */\nMultiLineString.prototype.setFlatCoordinates = function(layout, flatCoordinates, ends) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.ends_ = ends;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/LineString>} lineStrings LineStrings.\n */\nMultiLineString.prototype.setLineStrings = function(lineStrings) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const ends = [];\n  for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n    const lineString = lineStrings[i];\n    if (i === 0) {\n      layout = lineString.getLayout();\n    }\n    extend(flatCoordinates, lineString.getFlatCoordinates());\n    ends.push(flatCoordinates.length);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, ends);\n};\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPoint = function(coordinates, opt_layout) {\n  SimpleGeometry.call(this);\n  this.setCoordinates(coordinates, opt_layout);\n};\n\ninherits(MultiPoint, SimpleGeometry);\n\n\n/**\n * Append the passed point to this multipoint.\n * @param {module:ol/geom/Point} point Point.\n * @api\n */\nMultiPoint.prototype.appendPoint = function(point) {\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = point.getFlatCoordinates().slice();\n  } else {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n  }\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPoint} Clone.\n * @override\n * @api\n */\nMultiPoint.prototype.clone = function() {\n  const multiPoint = new MultiPoint(null);\n  multiPoint.setFlatCoordinates(this.layout, this.flatCoordinates.slice());\n  return multiPoint;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPoint.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const squaredDistance = squaredDx(\n      x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (let j = 0; j < stride; ++j) {\n        closestPoint[j] = flatCoordinates[i + j];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * Return the coordinates of the multipoint.\n * @return {Array.<module:ol/coordinate~Coordinate>} Coordinates.\n * @override\n * @api\n */\nMultiPoint.prototype.getCoordinates = function() {\n  return inflateCoordinates(\n    this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n};\n\n\n/**\n * Return the point at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Point.\n * @api\n */\nMultiPoint.prototype.getPoint = function(index) {\n  const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n  if (index < 0 || n <= index) {\n    return null;\n  }\n  const point = new Point(null);\n  point.setFlatCoordinates(this.layout, this.flatCoordinates.slice(\n    index * this.stride, (index + 1) * this.stride));\n  return point;\n};\n\n\n/**\n * Return the points of this multipoint.\n * @return {Array.<module:ol/geom/Point>} Points.\n * @api\n */\nMultiPoint.prototype.getPoints = function() {\n  const flatCoordinates = this.flatCoordinates;\n  const layout = this.layout;\n  const stride = this.stride;\n  /** @type {Array.<module:ol/geom/Point>} */\n  const points = [];\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const point = new Point(null);\n    point.setFlatCoordinates(layout, flatCoordinates.slice(i, i + stride));\n    points.push(point);\n  }\n  return points;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.getType = function() {\n  return GeometryType.MULTI_POINT;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPoint.prototype.intersectsExtent = function(extent) {\n  const flatCoordinates = this.flatCoordinates;\n  const stride = this.stride;\n  for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n    const x = flatCoordinates[i];\n    const y = flatCoordinates[i + 1];\n    if (containsXY(extent, x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * Set the coordinates of the multipoint.\n * @param {Array.<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPoint.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null);\n  } else {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n */\nMultiPoint.prototype.setFlatCoordinates = function(layout, flatCoordinates) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.changed();\n};\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<Array.<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array.<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @constructor\n * @extends {module:ol/geom/SimpleGeometry}\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @api\n */\nconst MultiPolygon = function(coordinates, opt_layout) {\n\n  SimpleGeometry.call(this);\n\n  /**\n   * @type {Array.<Array.<number>>}\n   * @private\n   */\n  this.endss_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.flatInteriorPointsRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.flatInteriorPoints_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDelta_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxDeltaRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.orientedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.orientedFlatCoordinates_ = null;\n\n  this.setCoordinates(coordinates, opt_layout);\n\n};\n\ninherits(MultiPolygon, SimpleGeometry);\n\n\n/**\n * Append the passed polygon to this multipolygon.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @api\n */\nMultiPolygon.prototype.appendPolygon = function(polygon) {\n  /** @type {Array.<number>} */\n  let ends;\n  if (!this.flatCoordinates) {\n    this.flatCoordinates = polygon.getFlatCoordinates().slice();\n    ends = polygon.getEnds().slice();\n    this.endss_.push();\n  } else {\n    const offset = this.flatCoordinates.length;\n    extend(this.flatCoordinates, polygon.getFlatCoordinates());\n    ends = polygon.getEnds().slice();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] += offset;\n    }\n  }\n  this.endss_.push(ends);\n  this.changed();\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/MultiPolygon} Clone.\n * @override\n * @api\n */\nMultiPolygon.prototype.clone = function() {\n  const multiPolygon = new MultiPolygon(null);\n\n  const len = this.endss_.length;\n  const newEndss = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    newEndss[i] = this.endss_[i].slice();\n  }\n\n  multiPolygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(), newEndss);\n  return multiPolygon;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  if (this.maxDeltaRevision_ != this.getRevision()) {\n    this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n      this.flatCoordinates, 0, this.endss_, this.stride, 0));\n    this.maxDeltaRevision_ = this.getRevision();\n  }\n  return assignClosestMultiArrayPoint(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n    this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.containsXY = function(x, y) {\n  return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n};\n\n\n/**\n * Return the area of the multipolygon on projected plane.\n * @return {number} Area (on projected plane).\n * @api\n */\nMultiPolygon.prototype.getArea = function() {\n  return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n};\n\n\n/**\n * Get the coordinate array for this geometry.  This array has the structure\n * of a GeoJSON coordinate array for multi-polygons.\n *\n * @param {boolean=} opt_right Orient coordinates according to the right-hand\n *     rule (counter-clockwise for exterior and clockwise for interior rings).\n *     If `false`, coordinates will be oriented according to the left-hand rule\n *     (clockwise for exterior and counter-clockwise for interior rings).\n *     By default, coordinate orientation will depend on how the geometry was\n *     constructed.\n * @return {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} Coordinates.\n * @override\n * @api\n */\nMultiPolygon.prototype.getCoordinates = function(opt_right) {\n  let flatCoordinates;\n  if (opt_right !== undefined) {\n    flatCoordinates = this.getOrientedFlatCoordinates().slice();\n    orientLinearRingsArray(\n      flatCoordinates, 0, this.endss_, this.stride, opt_right);\n  } else {\n    flatCoordinates = this.flatCoordinates;\n  }\n\n  return inflateMultiCoordinatesArray(\n    flatCoordinates, 0, this.endss_, this.stride);\n};\n\n\n/**\n * @return {Array.<Array.<number>>} Endss.\n */\nMultiPolygon.prototype.getEndss = function() {\n  return this.endss_;\n};\n\n\n/**\n * @return {Array.<number>} Flat interior points.\n */\nMultiPolygon.prototype.getFlatInteriorPoints = function() {\n  if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n    const flatCenters = linearRingssCenter(\n      this.flatCoordinates, 0, this.endss_, this.stride);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      flatCenters);\n    this.flatInteriorPointsRevision_ = this.getRevision();\n  }\n  return this.flatInteriorPoints_;\n};\n\n\n/**\n * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n * the length of the horizontal intersection that the point belongs to.\n * @api\n */\nMultiPolygon.prototype.getInteriorPoints = function() {\n  const interiorPoints = new MultiPoint(null);\n  interiorPoints.setFlatCoordinates(GeometryLayout.XYM,\n    this.getFlatInteriorPoints().slice());\n  return interiorPoints;\n};\n\n\n/**\n * @return {Array.<number>} Oriented flat coordinates.\n */\nMultiPolygon.prototype.getOrientedFlatCoordinates = function() {\n  if (this.orientedRevision_ != this.getRevision()) {\n    const flatCoordinates = this.flatCoordinates;\n    if (linearRingsAreOriented(\n      flatCoordinates, 0, this.endss_, this.stride)) {\n      this.orientedFlatCoordinates_ = flatCoordinates;\n    } else {\n      this.orientedFlatCoordinates_ = flatCoordinates.slice();\n      this.orientedFlatCoordinates_.length =\n          orientLinearRingsArray(\n            this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n    }\n    this.orientedRevision_ = this.getRevision();\n  }\n  return this.orientedFlatCoordinates_;\n};\n\n\n/**\n * @inheritDoc\n */\nMultiPolygon.prototype.getSimplifiedGeometryInternal = function(squaredTolerance) {\n  const simplifiedFlatCoordinates = [];\n  const simplifiedEndss = [];\n  simplifiedFlatCoordinates.length = quantizeMultiArray(\n    this.flatCoordinates, 0, this.endss_, this.stride,\n    Math.sqrt(squaredTolerance),\n    simplifiedFlatCoordinates, 0, simplifiedEndss);\n  const simplifiedMultiPolygon = new MultiPolygon(null);\n  simplifiedMultiPolygon.setFlatCoordinates(\n    GeometryLayout.XY, simplifiedFlatCoordinates, simplifiedEndss);\n  return simplifiedMultiPolygon;\n};\n\n\n/**\n * Return the polygon at the specified index.\n * @param {number} index Index.\n * @return {module:ol/geom/Polygon} Polygon.\n * @api\n */\nMultiPolygon.prototype.getPolygon = function(index) {\n  if (index < 0 || this.endss_.length <= index) {\n    return null;\n  }\n  let offset;\n  if (index === 0) {\n    offset = 0;\n  } else {\n    const prevEnds = this.endss_[index - 1];\n    offset = prevEnds[prevEnds.length - 1];\n  }\n  const ends = this.endss_[index].slice();\n  const end = ends[ends.length - 1];\n  if (offset !== 0) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      ends[i] -= offset;\n    }\n  }\n  const polygon = new Polygon(null);\n  polygon.setFlatCoordinates(\n    this.layout, this.flatCoordinates.slice(offset, end), ends);\n  return polygon;\n};\n\n\n/**\n * Return the polygons of this multipolygon.\n * @return {Array.<module:ol/geom/Polygon>} Polygons.\n * @api\n */\nMultiPolygon.prototype.getPolygons = function() {\n  const layout = this.layout;\n  const flatCoordinates = this.flatCoordinates;\n  const endss = this.endss_;\n  const polygons = [];\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let j = 0, jj = ends.length; j < jj; ++j) {\n        ends[j] -= offset;\n      }\n    }\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(\n      layout, flatCoordinates.slice(offset, end), ends);\n    polygons.push(polygon);\n    offset = end;\n  }\n  return polygons;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.getType = function() {\n  return GeometryType.MULTI_POLYGON;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nMultiPolygon.prototype.intersectsExtent = function(extent) {\n  return intersectsLinearRingMultiArray(\n    this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n};\n\n\n/**\n * Set the coordinates of the multipolygon.\n * @param {Array.<Array.<Array.<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n * @override\n * @api\n */\nMultiPolygon.prototype.setCoordinates = function(coordinates, opt_layout) {\n  if (!coordinates) {\n    this.setFlatCoordinates(GeometryLayout.XY, null, this.endss_);\n  } else {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {Array.<Array.<number>>} endss Endss.\n */\nMultiPolygon.prototype.setFlatCoordinates = function(layout, flatCoordinates, endss) {\n  this.setFlatCoordinatesInternal(layout, flatCoordinates);\n  this.endss_ = endss;\n  this.changed();\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Polygon>} polygons Polygons.\n */\nMultiPolygon.prototype.setPolygons = function(polygons) {\n  let layout = this.getLayout();\n  const flatCoordinates = [];\n  const endss = [];\n  for (let i = 0, ii = polygons.length; i < ii; ++i) {\n    const polygon = polygons[i];\n    if (i === 0) {\n      layout = polygon.getLayout();\n    }\n    const offset = flatCoordinates.length;\n    const ends = polygon.getEnds();\n    for (let j = 0, jj = ends.length; j < jj; ++j) {\n      ends[j] += offset;\n    }\n    extend(flatCoordinates, polygon.getFlatCoordinates());\n    endss.push(ends);\n  }\n  this.setFlatCoordinates(layout, flatCoordinates, endss);\n};\n\nexport default MultiPolygon;\n","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/layer/Vector\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport const RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Vector~Options=} opt_options Options.\n * @api\n */\nconst VectorLayer = function(opt_options) {\n  const options = opt_options ?\n    opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.style;\n  delete baseOptions.renderBuffer;\n  delete baseOptions.updateWhileAnimating;\n  delete baseOptions.updateWhileInteracting;\n  Layer.call(this, /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.renderBuffer_ = options.renderBuffer !== undefined ?\n    options.renderBuffer : 100;\n\n  /**\n   * User provided style.\n   * @type {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n   * @private\n   */\n  this.style_ = null;\n\n  /**\n   * Style function for use within the library.\n   * @type {module:ol/style/Style~StyleFunction|undefined}\n   * @private\n   */\n  this.styleFunction_ = undefined;\n\n  this.setStyle(options.style);\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n    options.updateWhileAnimating : false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n    options.updateWhileInteracting : false;\n\n  /**\n   * @private\n   * @type {module:ol/layer/VectorTileRenderType|string}\n   */\n  this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.VECTOR;\n\n};\n\ninherits(VectorLayer, Layer);\n\n\n/**\n * @return {boolean} Declutter.\n */\nVectorLayer.prototype.getDeclutter = function() {\n  return this.declutter_;\n};\n\n\n/**\n * @param {boolean} declutter Declutter.\n */\nVectorLayer.prototype.setDeclutter = function(declutter) {\n  this.declutter_ = declutter;\n};\n\n\n/**\n * @return {number|undefined} Render buffer.\n */\nVectorLayer.prototype.getRenderBuffer = function() {\n  return this.renderBuffer_;\n};\n\n\n/**\n * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n *     order.\n */\nVectorLayer.prototype.getRenderOrder = function() {\n  return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n  );\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\n/**\n * Get the style for features.  This returns whatever was passed to the `style`\n * option at construction or to the `setStyle` method.\n * @return {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n *     Layer style.\n * @api\n */\nVectorLayer.prototype.getStyle = function() {\n  return this.style_;\n};\n\n\n/**\n * Get the style function.\n * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n * @api\n */\nVectorLayer.prototype.getStyleFunction = function() {\n  return this.styleFunction_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     animating.\n */\nVectorLayer.prototype.getUpdateWhileAnimating = function() {\n  return this.updateWhileAnimating_;\n};\n\n\n/**\n * @return {boolean} Whether the rendered layer should be updated while\n *     interacting.\n */\nVectorLayer.prototype.getUpdateWhileInteracting = function() {\n  return this.updateWhileInteracting_;\n};\n\n\n/**\n * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n *     Render order.\n */\nVectorLayer.prototype.setRenderOrder = function(renderOrder) {\n  this.set(Property.RENDER_ORDER, renderOrder);\n};\n\n\n/**\n * Set the style for features.  This can be a single style object, an array\n * of styles, or a function that takes a feature and resolution and returns\n * an array of styles. If it is `undefined` the default style is used. If\n * it is `null` the layer has no style (a `null` style), so only features\n * that have their own styles will be rendered in the layer. See\n * {@link module:ol/style} for information on the default style.\n * @param {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined}\n *     style Layer style.\n * @api\n */\nVectorLayer.prototype.setStyle = function(style) {\n  this.style_ = style !== undefined ? style : createDefaultStyle;\n  this.styleFunction_ = style === null ?\n    undefined : toStyleFunction(this.style_);\n  this.changed();\n};\n\n\n/**\n * @return {module:ol/layer/VectorRenderType|string} The render mode.\n */\nVectorLayer.prototype.getRenderMode = function() {\n  return this.renderMode_;\n};\n\n\nexport default VectorLayer;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/featureloader\n */\nimport {UNDEFINED} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array.<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array.<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array.<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ UNDEFINED);\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array.<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array.<module:ol/extent~Extent>} */\n      const extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/Source\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array.<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array.<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/Object}\n * @param {module:ol/source/Source~Options} options Source options.\n * @api\n */\nconst Source = function(options) {\n\n  BaseObject.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = getProjection(options.projection);\n\n  /**\n   * @private\n   * @type {?module:ol/source/Source~Attribution}\n   */\n  this.attributions_ = this.adaptAttributions_(options.attributions);\n\n  /**\n   * @private\n   * @type {module:ol/source/State}\n   */\n  this.state_ = options.state !== undefined ?\n    options.state : SourceState.READY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n};\n\ninherits(Source, BaseObject);\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n */\nSource.prototype.adaptAttributions_ = function(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n};\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|undefined} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * Get the attribution function for the source.\n * @return {?module:ol/source/Source~Attribution} Attribution function.\n */\nSource.prototype.getAttributions = function() {\n  return this.attributions_;\n};\n\n\n/**\n * Get the projection of the source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nSource.prototype.getProjection = function() {\n  return this.projection_;\n};\n\n\n/**\n * @abstract\n * @return {Array.<number>|undefined} Resolutions.\n */\nSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n * @return {module:ol/source/State} State.\n * @api\n */\nSource.prototype.getState = function() {\n  return this.state_;\n};\n\n\n/**\n * @return {boolean|undefined} Wrap X.\n */\nSource.prototype.getWrapX = function() {\n  return this.wrapX_;\n};\n\n\n/**\n * Refreshes the source and finally dispatches a 'change' event.\n * @api\n */\nSource.prototype.refresh = function() {\n  this.changed();\n};\n\n\n/**\n * Set the attributions of the source.\n * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n *     or `undefined`.\n * @api\n */\nSource.prototype.setAttributions = function(attributions) {\n  this.attributions_ = this.adaptAttributions_(attributions);\n  this.changed();\n};\n\n\n/**\n * Set the state of the source.\n * @param {module:ol/source/State} state State.\n * @protected\n */\nSource.prototype.setState = function(state) {\n  this.state_ = state;\n  this.changed();\n};\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * Wrapper around the RBush by Vladimir Agafonkin.\n *\n * @constructor\n * @param {number=} opt_maxEntries Max entries.\n * @see https://github.com/mourner/rbush\n * @struct\n * @template T\n */\nconst RBush = function(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object.<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function(extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array.<module:ol/extent~Extent>} extents Extents.\n * @param {Array.<T>} values Values.\n */\nRBush.prototype.load = function(extents, values) {\n  const items = new Array(values.length);\n  for (let i = 0, l = values.length; i < l; i++) {\n    const extent = extents[i];\n    const value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function(value) {\n  const uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  const item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function(extent, value) {\n  const item = this.items_[getUid(value)];\n  const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array.<T>} All.\n */\nRBush.prototype.getAll = function() {\n  const items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<T>} All in extent.\n */\nRBush.prototype.getInExtent = function(extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  const bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  const items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function(callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function(extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array.<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function(values, callback, opt_this) {\n  let result;\n  for (let i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function() {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function() {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function(opt_extent) {\n  // FIXME add getExtent() to rbush\n  const data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function(rbush) {\n  this.rbush_.load(rbush.rbush_.all());\n  for (const i in rbush.items_) {\n    this.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array.<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Feature=} opt_feature Feature.\n */\nexport const VectorSourceEvent = function(type, opt_feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being added or removed.\n   * @type {module:ol/Feature|undefined}\n   * @api\n   */\n  this.feature = opt_feature;\n\n};\ninherits(VectorSourceEvent, Event);\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array.<module:ol/Feature>|module:ol/Collection.<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @constructor\n * @extends {module:ol/source/Source}\n * @fires ol/source/Vector~VectorSourceEvent\n * @param {module:ol/source/Vector~Options=} opt_options Vector source options.\n * @api\n */\nconst VectorSource = function(opt_options) {\n\n  const options = opt_options || {};\n\n  Source.call(this, {\n    attributions: options.attributions,\n    projection: undefined,\n    state: SourceState.READY,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/featureloader~FeatureLoader}\n   */\n  this.loader_ = UNDEFINED;\n\n  /**\n   * @private\n   * @type {module:ol/format/Feature|undefined}\n   */\n  this.format_ = options.format;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n  /**\n   * @private\n   * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n   */\n  this.url_ = options.url;\n\n  if (options.loader !== undefined) {\n    this.loader_ = options.loader;\n  } else if (this.url_ !== undefined) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    // create a XHR feature loader for \"url\" and \"format\"\n    this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n  }\n\n  /**\n   * @private\n   * @type {module:ol/source/Vector~LoadingStrategy}\n   */\n  this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n  const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<module:ol/Feature>}\n   */\n  this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n  /**\n   * @private\n   * @type {module:ol/structs/RBush.<{extent: module:ol/extent~Extent}>}\n   */\n  this.loadedExtentsRtree_ = new RBush();\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.nullGeometryFeatures_ = {};\n\n  /**\n   * A lookup of features by id (the return from feature.getId()).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.idIndex_ = {};\n\n  /**\n   * A lookup of features without id (keyed by getUid(feature)).\n   * @private\n   * @type {!Object.<string, module:ol/Feature>}\n   */\n  this.undefIdIndex_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, Array.<module:ol/events~EventsKey>>}\n   */\n  this.featureChangeKeys_ = {};\n\n  /**\n   * @private\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   */\n  this.featuresCollection_ = null;\n\n  let collection, features;\n  if (options.features instanceof Collection) {\n    collection = options.features;\n    features = collection.getArray();\n  } else if (Array.isArray(options.features)) {\n    features = options.features;\n  }\n  if (!useSpatialIndex && collection === undefined) {\n    collection = new Collection(features);\n  }\n  if (features !== undefined) {\n    this.addFeaturesInternal(features);\n  }\n  if (collection !== undefined) {\n    this.bindFeaturesCollection_(collection);\n  }\n\n};\n\ninherits(VectorSource, Source);\n\n\n/**\n * Add a single feature to the source.  If you want to add a batch of features\n * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n * instead. A feature will not be added to the source if feature with\n * the same id is already there. The reason for this behavior is to avoid\n * feature duplication when using bbox or tile loading strategies.\n * @param {module:ol/Feature} feature Feature to add.\n * @api\n */\nVectorSource.prototype.addFeature = function(feature) {\n  this.addFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Add a feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.addFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n\n  if (!this.addToIndex_(featureKey, feature)) {\n    return;\n  }\n\n  this.setupChangeEvents_(featureKey, feature);\n\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const extent = geometry.getExtent();\n    if (this.featuresRtree_) {\n      this.featuresRtree_.insert(extent, feature);\n    }\n  } else {\n    this.nullGeometryFeatures_[featureKey] = feature;\n  }\n\n  this.dispatchEvent(\n    new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @private\n */\nVectorSource.prototype.setupChangeEvents_ = function(featureKey, feature) {\n  this.featureChangeKeys_[featureKey] = [\n    listen(feature, EventType.CHANGE,\n      this.handleFeatureChange_, this),\n    listen(feature, ObjectEventType.PROPERTYCHANGE,\n      this.handleFeatureChange_, this)\n  ];\n};\n\n\n/**\n * @param {string} featureKey Unique identifier for the feature.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} The feature is \"valid\", in the sense that it is also a\n *     candidate for insertion into the Rtree.\n * @private\n */\nVectorSource.prototype.addToIndex_ = function(featureKey, feature) {\n  let valid = true;\n  const id = feature.getId();\n  if (id !== undefined) {\n    if (!(id.toString() in this.idIndex_)) {\n      this.idIndex_[id.toString()] = feature;\n    } else {\n      valid = false;\n    }\n  } else {\n    assert(!(featureKey in this.undefIdIndex_),\n      30); // The passed `feature` was already added to the source\n    this.undefIdIndex_[featureKey] = feature;\n  }\n  return valid;\n};\n\n\n/**\n * Add a batch of features to the source.\n * @param {Array.<module:ol/Feature>} features Features to add.\n * @api\n */\nVectorSource.prototype.addFeatures = function(features) {\n  this.addFeaturesInternal(features);\n  this.changed();\n};\n\n\n/**\n * Add features without firing a `change` event.\n * @param {Array.<module:ol/Feature>} features Features.\n * @protected\n */\nVectorSource.prototype.addFeaturesInternal = function(features) {\n  const extents = [];\n  const newFeatures = [];\n  const geometryFeatures = [];\n\n  for (let i = 0, length = features.length; i < length; i++) {\n    const feature = features[i];\n    const featureKey = getUid(feature).toString();\n    if (this.addToIndex_(featureKey, feature)) {\n      newFeatures.push(feature);\n    }\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    const feature = newFeatures[i];\n    const featureKey = getUid(feature).toString();\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      extents.push(extent);\n      geometryFeatures.push(feature);\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  }\n  if (this.featuresRtree_) {\n    this.featuresRtree_.load(extents, geometryFeatures);\n  }\n\n  for (let i = 0, length = newFeatures.length; i < length; i++) {\n    this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n  }\n};\n\n\n/**\n * @param {!module:ol/Collection.<module:ol/Feature>} collection Collection.\n * @private\n */\nVectorSource.prototype.bindFeaturesCollection_ = function(collection) {\n  let modifyingCollection = false;\n  listen(this, VectorEventType.ADDFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.push(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(this, VectorEventType.REMOVEFEATURE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        collection.remove(evt.feature);\n        modifyingCollection = false;\n      }\n    });\n  listen(collection, CollectionEventType.ADD,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  listen(collection, CollectionEventType.REMOVE,\n    function(evt) {\n      if (!modifyingCollection) {\n        modifyingCollection = true;\n        this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n        modifyingCollection = false;\n      }\n    }, this);\n  this.featuresCollection_ = collection;\n};\n\n\n/**\n * Remove all features from the source.\n * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n * @api\n */\nVectorSource.prototype.clear = function(opt_fast) {\n  if (opt_fast) {\n    for (const featureId in this.featureChangeKeys_) {\n      const keys = this.featureChangeKeys_[featureId];\n      keys.forEach(unlistenByKey);\n    }\n    if (!this.featuresCollection_) {\n      this.featureChangeKeys_ = {};\n      this.idIndex_ = {};\n      this.undefIdIndex_ = {};\n    }\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n      for (const id in this.nullGeometryFeatures_) {\n        this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n      }\n    }\n  }\n  if (this.featuresCollection_) {\n    this.featuresCollection_.clear();\n  }\n\n  if (this.featuresRtree_) {\n    this.featuresRtree_.clear();\n  }\n  this.loadedExtentsRtree_.clear();\n  this.nullGeometryFeatures_ = {};\n\n  const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n  this.dispatchEvent(clearEvent);\n  this.changed();\n};\n\n\n/**\n * Iterate through all features on the source, calling the provided callback\n * with each one.  If the callback returns any \"truthy\" value, iteration will\n * stop and the function will return the same value.\n * Note: this function only iterate through the feature that have a defined geometry.\n *\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     on the source.  Return a truthy value to stop iteration.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeature = function(callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEach(callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometries contain the provided\n * coordinate, calling the callback with each feature.  If the callback returns\n * a \"truthy\" value, iteration will stop and the function will return the same\n * value.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose goemetry contains the provided coordinate.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n */\nVectorSource.prototype.forEachFeatureAtCoordinateDirect = function(coordinate, callback) {\n  const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n  return this.forEachFeatureInExtent(extent, function(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry.intersectsCoordinate(coordinate)) {\n      return callback(feature);\n    } else {\n      return undefined;\n    }\n  });\n};\n\n\n/**\n * Iterate through all features whose bounding box intersects the provided\n * extent (note that the feature's geometry may not intersect the extent),\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you are interested in features whose geometry intersects an extent, call\n * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n *\n * When `useSpatialIndex` is set to false, this method will loop through all\n * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose bounding box intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureInExtent = function(extent, callback) {\n  if (this.featuresRtree_) {\n    return this.featuresRtree_.forEachInExtent(extent, callback);\n  } else if (this.featuresCollection_) {\n    return this.featuresCollection_.forEach(callback);\n  }\n};\n\n\n/**\n * Iterate through all features whose geometry intersects the provided extent,\n * calling the callback with each feature.  If the callback returns a \"truthy\"\n * value, iteration will stop and the function will return the same value.\n *\n * If you only want to test for bounding box intersection, call the\n * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(module:ol/Feature): T} callback Called with each feature\n *     whose geometry intersects the provided extent.\n * @return {T|undefined} The return value from the last call to the callback.\n * @template T\n * @api\n */\nVectorSource.prototype.forEachFeatureIntersectingExtent = function(extent, callback) {\n  return this.forEachFeatureInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @return {T|undefined} The return value from the last call to the callback.\n     * @template T\n     */\n    function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsExtent(extent)) {\n        const result = callback(feature);\n        if (result) {\n          return result;\n        }\n      }\n    });\n};\n\n\n/**\n * Get the features collection associated with this source. Will be `null`\n * unless the source was configured with `useSpatialIndex` set to `false`, or\n * with an {@link module:ol/Collection} as `features`.\n * @return {module:ol/Collection.<module:ol/Feature>} The collection of features.\n * @api\n */\nVectorSource.prototype.getFeaturesCollection = function() {\n  return this.featuresCollection_;\n};\n\n\n/**\n * Get all features on the source in random order.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeatures = function() {\n  let features;\n  if (this.featuresCollection_) {\n    features = this.featuresCollection_.getArray();\n  } else if (this.featuresRtree_) {\n    features = this.featuresRtree_.getAll();\n    if (!isEmpty(this.nullGeometryFeatures_)) {\n      extend(features, getValues(this.nullGeometryFeatures_));\n    }\n  }\n  return (\n    /** @type {Array.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * Get all features whose geometry intersects the provided coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesAtCoordinate = function(coordinate) {\n  const features = [];\n  this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n    features.push(feature);\n  });\n  return features;\n};\n\n\n/**\n * Get all features in the provided extent.  Note that this returns an array of\n * all features intersecting the given extent in random order (so it may include\n * features whose geometries do not intersect the extent).\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nVectorSource.prototype.getFeaturesInExtent = function(extent) {\n  return this.featuresRtree_.getInExtent(extent);\n};\n\n\n/**\n * Get the closest feature to the provided coordinate.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n *     and it should return a boolean value. By default, no filtering is made.\n * @return {module:ol/Feature} Closest feature.\n * @api\n */\nVectorSource.prototype.getClosestFeatureToCoordinate = function(coordinate, opt_filter) {\n  // Find the closest feature using branch and bound.  We start searching an\n  // infinite extent, and find the distance from the first feature found.  This\n  // becomes the closest feature.  We then compute a smaller extent which any\n  // closer feature must intersect.  We continue searching with this smaller\n  // extent, trying to find a closer feature.  Every time we find a closer\n  // feature, we update the extent being searched so that any even closer\n  // feature must intersect it.  We continue until we run out of features.\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let closestFeature = null;\n  const closestPoint = [NaN, NaN];\n  let minSquaredDistance = Infinity;\n  const extent = [-Infinity, -Infinity, Infinity, Infinity];\n  const filter = opt_filter ? opt_filter : TRUE;\n  this.featuresRtree_.forEachInExtent(extent,\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     */\n    function(feature) {\n      if (filter(feature)) {\n        const geometry = feature.getGeometry();\n        const previousMinSquaredDistance = minSquaredDistance;\n        minSquaredDistance = geometry.closestPointXY(\n          x, y, closestPoint, minSquaredDistance);\n        if (minSquaredDistance < previousMinSquaredDistance) {\n          closestFeature = feature;\n          // This is sneaky.  Reduce the extent that it is currently being\n          // searched while the R-Tree traversal using this same extent object\n          // is still in progress.  This is safe because the new extent is\n          // strictly contained by the old extent.\n          const minDistance = Math.sqrt(minSquaredDistance);\n          extent[0] = x - minDistance;\n          extent[1] = y - minDistance;\n          extent[2] = x + minDistance;\n          extent[3] = y + minDistance;\n        }\n      }\n    });\n  return closestFeature;\n};\n\n\n/**\n * Get the extent of the features currently in the source.\n *\n * This method is not available when the source is configured with\n * `useSpatialIndex` set to `false`.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n *     will be created. Instead, that extent's coordinates will be overwritten.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nVectorSource.prototype.getExtent = function(opt_extent) {\n  return this.featuresRtree_.getExtent(opt_extent);\n};\n\n\n/**\n * Get a feature by its identifier (the value returned by feature.getId()).\n * Note that the index treats string and numeric identifiers as the same.  So\n * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n *\n * @param {string|number} id Feature identifier.\n * @return {module:ol/Feature} The feature (or `null` if not found).\n * @api\n */\nVectorSource.prototype.getFeatureById = function(id) {\n  const feature = this.idIndex_[id.toString()];\n  return feature !== undefined ? feature : null;\n};\n\n\n/**\n * Get the format associated with this source.\n *\n * @return {module:ol/format/Feature|undefined} The feature format.\n * @api\n */\nVectorSource.prototype.getFormat = function() {\n  return this.format_;\n};\n\n\n/**\n * @return {boolean} The source can have overlapping geometries.\n */\nVectorSource.prototype.getOverlaps = function() {\n  return this.overlaps_;\n};\n\n\n/**\n * @override\n */\nVectorSource.prototype.getResolutions = function() {};\n\n\n/**\n * Get the url associated with this source.\n *\n * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n * @api\n */\nVectorSource.prototype.getUrl = function() {\n  return this.url_;\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n * @private\n */\nVectorSource.prototype.handleFeatureChange_ = function(event) {\n  const feature = /** @type {module:ol/Feature} */ (event.target);\n  const featureKey = getUid(feature).toString();\n  const geometry = feature.getGeometry();\n  if (!geometry) {\n    if (!(featureKey in this.nullGeometryFeatures_)) {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n  } else {\n    const extent = geometry.getExtent();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.update(extent, feature);\n      }\n    }\n  }\n  const id = feature.getId();\n  if (id !== undefined) {\n    const sid = id.toString();\n    if (featureKey in this.undefIdIndex_) {\n      delete this.undefIdIndex_[featureKey];\n      this.idIndex_[sid] = feature;\n    } else {\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    }\n  } else {\n    if (!(featureKey in this.undefIdIndex_)) {\n      this.removeFromIdIndex_(feature);\n      this.undefIdIndex_[featureKey] = feature;\n    }\n  }\n  this.changed();\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.CHANGEFEATURE, feature));\n};\n\n/**\n * Returns true if the feature is contained within the source.\n * @param {module:ol/Feature} feature Feature.\n * @return {boolean} Has feature.\n * @api\n */\nVectorSource.prototype.hasFeature = function(feature) {\n  const id = feature.getId();\n  if (id !== undefined) {\n    return id in this.idIndex_;\n  } else {\n    const featureKey = getUid(feature).toString();\n    return featureKey in this.undefIdIndex_;\n  }\n};\n\n/**\n * @return {boolean} Is empty.\n */\nVectorSource.prototype.isEmpty = function() {\n  return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n};\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nVectorSource.prototype.loadFeatures = function(extent, resolution, projection) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  const extentsToLoad = this.strategy_(extent, resolution);\n  for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n    const extentToLoad = extentsToLoad[i];\n    const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n      /**\n       * @param {{extent: module:ol/extent~Extent}} object Object.\n       * @return {boolean} Contains.\n       */\n      function(object) {\n        return containsExtent(object.extent, extentToLoad);\n      });\n    if (!alreadyLoaded) {\n      this.loader_.call(this, extentToLoad, resolution, projection);\n      loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n    }\n  }\n};\n\n\n/**\n * Remove an extent from the list of loaded extents.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nVectorSource.prototype.removeLoadedExtent = function(extent) {\n  const loadedExtentsRtree = this.loadedExtentsRtree_;\n  let obj;\n  loadedExtentsRtree.forEachInExtent(extent, function(object) {\n    if (equals(object.extent, extent)) {\n      obj = object;\n      return true;\n    }\n  });\n  if (obj) {\n    loadedExtentsRtree.remove(obj);\n  }\n};\n\n\n/**\n * Remove a single feature from the source.  If you want to remove all features\n * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n * instead.\n * @param {module:ol/Feature} feature Feature to remove.\n * @api\n */\nVectorSource.prototype.removeFeature = function(feature) {\n  const featureKey = getUid(feature).toString();\n  if (featureKey in this.nullGeometryFeatures_) {\n    delete this.nullGeometryFeatures_[featureKey];\n  } else {\n    if (this.featuresRtree_) {\n      this.featuresRtree_.remove(feature);\n    }\n  }\n  this.removeFeatureInternal(feature);\n  this.changed();\n};\n\n\n/**\n * Remove feature without firing a `change` event.\n * @param {module:ol/Feature} feature Feature.\n * @protected\n */\nVectorSource.prototype.removeFeatureInternal = function(feature) {\n  const featureKey = getUid(feature).toString();\n  this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n  delete this.featureChangeKeys_[featureKey];\n  const id = feature.getId();\n  if (id !== undefined) {\n    delete this.idIndex_[id.toString()];\n  } else {\n    delete this.undefIdIndex_[featureKey];\n  }\n  this.dispatchEvent(new VectorSourceEvent(\n    VectorEventType.REMOVEFEATURE, feature));\n};\n\n\n/**\n * Remove a feature from the id index.  Called internally when the feature id\n * may have changed.\n * @param {module:ol/Feature} feature The feature.\n * @return {boolean} Removed the feature from the index.\n * @private\n */\nVectorSource.prototype.removeFromIdIndex_ = function(feature) {\n  let removed = false;\n  for (const id in this.idIndex_) {\n    if (this.idIndex_[id] === feature) {\n      delete this.idIndex_[id];\n      removed = true;\n      break;\n    }\n  }\n  return removed;\n};\n\n\n/**\n * Set the new loader of the source. The next loadFeatures call will use the\n * new loader.\n * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n * @api\n */\nVectorSource.prototype.setLoader = function(loader) {\n  this.loader_ = loader;\n};\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport {inherits} from '../util.js';\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport {POINTER_TYPE} from '../pointer/MouseSource.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/geom/GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Destination collection for the drawn features.\n * @property {module:ol/source/Vector} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {module:ol/events/condition~Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for sketch features.\n * @property {module:ol/interaction/Draw~GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {module:ol/events/condition~Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!Array.<module:ol/coordinate~Coordinate>, module:ol/geom/SimpleGeometry=):\n *     module:ol/geom/SimpleGeometry} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event module:ol/interaction/Draw~DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event module:ol/interaction/Draw~DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Draw~DrawEventType} type Type.\n * @param {module:ol/Feature} feature The feature drawn.\n */\nconst DrawEvent = function(type, feature) {\n\n  Event.call(this, type);\n\n  /**\n   * The feature being drawn.\n   * @type {module:ol/Feature}\n   * @api\n   */\n  this.feature = feature;\n\n};\n\ninherits(DrawEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Draw~DrawEvent\n * @param {module:ol/interaction/Draw~Options} options Options.\n * @api\n */\nconst Draw = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.shouldHandle_ = false;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.downPx_ = null;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.downTimeout_;\n\n  /**\n   * @type {number|undefined}\n   * @private\n   */\n  this.lastDragTime_;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.freehand_ = false;\n\n  /**\n   * Target source for drawn features.\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * Target collection for drawn features.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * Pixel distance for snapping.\n   * @type {number}\n   * @private\n   */\n  this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n  /**\n   * Geometry type.\n   * @type {module:ol/geom/GeometryType}\n   * @private\n   */\n  this.type_ = /** @type {module:ol/geom/GeometryType} */ (options.type);\n\n  /**\n   * Drawing mode (derived from geometry type.\n   * @type {module:ol/interaction/Draw~Mode}\n   * @private\n   */\n  this.mode_ = getMode(this.type_);\n\n  /**\n   * Stop click, singleclick, and doubleclick events from firing during drawing.\n   * Default is `false`.\n   * @type {boolean}\n   * @private\n   */\n  this.stopClick_ = !!options.stopClick;\n\n  /**\n   * The number of points that must be drawn before a polygon ring or line\n   * string can be finished.  The default is 3 for polygon rings and 2 for\n   * line strings.\n   * @type {number}\n   * @private\n   */\n  this.minPoints_ = options.minPoints ?\n    options.minPoints :\n    (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n  /**\n   * The number of points that can be drawn before a polygon ring or line string\n   * is finished. The default is no restriction.\n   * @type {number}\n   * @private\n   */\n  this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n  /**\n   * A function to decide if a potential finish coordinate is permissible\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n  let geometryFunction = options.geometryFunction;\n  if (!geometryFunction) {\n    if (this.type_ === GeometryType.CIRCLE) {\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        const circle = opt_geometry ? /** @type {module:ol/geom/Circle} */ (opt_geometry) :\n          new Circle([NaN, NaN]);\n        const squaredLength = squaredCoordinateDistance(\n          coordinates[0], coordinates[1]);\n        circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n        return circle;\n      };\n    } else {\n      let Constructor;\n      const mode = this.mode_;\n      if (mode === Mode.POINT) {\n        Constructor = Point;\n      } else if (mode === Mode.LINE_STRING) {\n        Constructor = LineString;\n      } else if (mode === Mode.POLYGON) {\n        Constructor = Polygon;\n      }\n      /**\n       * @param {!Array.<module:ol/coordinate~Coordinate>} coordinates\n       *     The coordinates.\n       * @param {module:ol/geom/SimpleGeometry=} opt_geometry Optional geometry.\n       * @return {module:ol/geom/SimpleGeometry} A geometry.\n       */\n      geometryFunction = function(coordinates, opt_geometry) {\n        let geometry = opt_geometry;\n        if (geometry) {\n          if (mode === Mode.POLYGON) {\n            if (coordinates[0].length) {\n              // Add a closing coordinate to match the first\n              geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n            } else {\n              geometry.setCoordinates([]);\n            }\n          } else {\n            geometry.setCoordinates(coordinates);\n          }\n        } else {\n          geometry = new Constructor(coordinates);\n        }\n        return geometry;\n      };\n    }\n  }\n\n  /**\n   * @type {module:ol/interaction/Draw~GeometryFunction}\n   * @private\n   */\n  this.geometryFunction_ = geometryFunction;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n  /**\n   * Finish coordinate for the feature (first point for polygons, last point for\n   * linestrings).\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.finishCoordinate_ = null;\n\n  /**\n   * Sketch feature.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchFeature_ = null;\n\n  /**\n   * Sketch point.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchPoint_ = null;\n\n  /**\n   * Sketch coordinates. Used when drawing a line or polygon.\n   * @type {module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>}\n   * @private\n   */\n  this.sketchCoords_ = null;\n\n  /**\n   * Sketch line. Used when drawing polygon.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.sketchLine_ = null;\n\n  /**\n   * Sketch line coordinates. Used when drawing a polygon or circle.\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   * @private\n   */\n  this.sketchLineCoords_ = null;\n\n  /**\n   * Squared tolerance for handling up events.  If the squared distance\n   * between a down and up event is greater than this tolerance, up events\n   * will not be handled.\n   * @type {number}\n   * @private\n   */\n  this.squaredClickTolerance_ = options.clickTolerance ?\n    options.clickTolerance * options.clickTolerance : 36;\n\n  /**\n   * Draw overlay where our sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: options.wrapX ? options.wrapX : false\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Name of the geometry attribute for newly created features.\n   * @type {string|undefined}\n   * @private\n   */\n  this.geometryName_ = options.geometryName;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.freehandCondition_;\n  if (options.freehand) {\n    this.freehandCondition_ = always;\n  } else {\n    this.freehandCondition_ = options.freehandCondition ?\n      options.freehandCondition : shiftKeyOnly;\n  }\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.updateState_, this);\n\n};\n\ninherits(Draw, PointerInteraction);\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.setMap = function(map) {\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_();\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually\n * draw or finish the drawing.\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Draw}\n * @api\n */\nexport function handleEvent(event) {\n  if (event.originalEvent.type === EventType.CONTEXTMENU) {\n    // Avoid context menu for long taps when drawing on mobile\n    event.preventDefault();\n  }\n  this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n  let move = event.type === MapBrowserEventType.POINTERMOVE;\n  let pass = true;\n  if (this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n    const now = Date.now();\n    if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n      this.downPx_ = event.pixel;\n      this.shouldHandle_ = !this.freehand_;\n      move = true;\n    } else {\n      this.lastDragTime_ = undefined;\n    }\n    if (this.shouldHandle_ && this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n  }\n  if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDRAG &&\n      this.sketchFeature_ !== null) {\n    this.addToDrawing_(event);\n    pass = false;\n  } else if (this.freehand_ &&\n      event.type === MapBrowserEventType.POINTERDOWN) {\n    pass = false;\n  } else if (move) {\n    pass = event.type === MapBrowserEventType.POINTERMOVE;\n    if (pass && this.freehand_) {\n      pass = this.handlePointerMove_(event);\n    } else if (event.pointerEvent.pointerType == POINTER_TYPE ||\n        (event.type === MapBrowserEventType.POINTERDRAG && !this.downTimeout_)) {\n      this.handlePointerMove_(event);\n    }\n  } else if (event.type === MapBrowserEventType.DBLCLICK) {\n    pass = false;\n  }\n\n  return handlePointerEvent.call(this, event) && pass;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleDownEvent(event) {\n  this.shouldHandle_ = !this.freehand_;\n\n  if (this.freehand_) {\n    this.downPx_ = event.pixel;\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n    }\n    return true;\n  } else if (this.condition_(event)) {\n    this.lastDragTime_ = Date.now();\n    this.downTimeout_ = setTimeout(function() {\n      this.handlePointerMove_(new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, event.frameState));\n    }.bind(this), this.dragVertexDelay_);\n    this.downPx_ = event.pixel;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Draw}\n */\nfunction handleUpEvent(event) {\n  let pass = true;\n\n  if (this.downTimeout_) {\n    clearTimeout(this.downTimeout_);\n    this.downTimeout_ = undefined;\n  }\n\n  this.handlePointerMove_(event);\n\n  const circleMode = this.mode_ === Mode.CIRCLE;\n\n  if (this.shouldHandle_) {\n    if (!this.finishCoordinate_) {\n      this.startDrawing_(event);\n      if (this.mode_ === Mode.POINT) {\n        this.finishDrawing();\n      }\n    } else if (this.freehand_ || circleMode) {\n      this.finishDrawing();\n    } else if (this.atFinish_(event)) {\n      if (this.finishCondition_(event)) {\n        this.finishDrawing();\n      }\n    } else {\n      this.addToDrawing_(event);\n    }\n    pass = false;\n  } else if (this.freehand_) {\n    this.finishCoordinate_ = null;\n    this.abortDrawing_();\n  }\n  if (!pass && this.stopClick_) {\n    event.stopPropagation();\n  }\n  return pass;\n}\n\n\n/**\n * Handle move events.\n * @param {module:ol/MapBrowserEvent} event A move event.\n * @return {boolean} Pass the event to other interactions.\n * @private\n */\nDraw.prototype.handlePointerMove_ = function(event) {\n  if (this.downPx_ &&\n      ((!this.freehand_ && this.shouldHandle_) ||\n      (this.freehand_ && !this.shouldHandle_))) {\n    const downPx = this.downPx_;\n    const clickPx = event.pixel;\n    const dx = downPx[0] - clickPx[0];\n    const dy = downPx[1] - clickPx[1];\n    const squaredDistance = dx * dx + dy * dy;\n    this.shouldHandle_ = this.freehand_ ?\n      squaredDistance > this.squaredClickTolerance_ :\n      squaredDistance <= this.squaredClickTolerance_;\n    if (!this.shouldHandle_) {\n      return true;\n    }\n  }\n\n  if (this.finishCoordinate_) {\n    this.modifyDrawing_(event);\n  } else {\n    this.createOrUpdateSketchPoint_(event);\n  }\n  return true;\n};\n\n\n/**\n * Determine if an event is within the snapping tolerance of the start coord.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @return {boolean} The event is within the snapping tolerance of the start.\n * @private\n */\nDraw.prototype.atFinish_ = function(event) {\n  let at = false;\n  if (this.sketchFeature_) {\n    let potentiallyDone = false;\n    let potentiallyFinishCoordinates = [this.finishCoordinate_];\n    if (this.mode_ === Mode.LINE_STRING) {\n      potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      potentiallyDone = this.sketchCoords_[0].length >\n          this.minPoints_;\n      potentiallyFinishCoordinates = [this.sketchCoords_[0][0],\n        this.sketchCoords_[0][this.sketchCoords_[0].length - 2]];\n    }\n    if (potentiallyDone) {\n      const map = event.map;\n      for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n        const finishCoordinate = potentiallyFinishCoordinates[i];\n        const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n        const pixel = event.pixel;\n        const dx = pixel[0] - finishPixel[0];\n        const dy = pixel[1] - finishPixel[1];\n        const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n        at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n        if (at) {\n          this.finishCoordinate_ = finishCoordinate;\n          break;\n        }\n      }\n    }\n  }\n  return at;\n};\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.createOrUpdateSketchPoint_ = function(event) {\n  const coordinates = event.coordinate.slice();\n  if (!this.sketchPoint_) {\n    this.sketchPoint_ = new Feature(new Point(coordinates));\n    this.updateSketchFeatures_();\n  } else {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinates);\n  }\n};\n\n\n/**\n * Start the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.startDrawing_ = function(event) {\n  const start = event.coordinate;\n  this.finishCoordinate_ = start;\n  if (this.mode_ === Mode.POINT) {\n    this.sketchCoords_ = start.slice();\n  } else if (this.mode_ === Mode.POLYGON) {\n    this.sketchCoords_ = [[start.slice(), start.slice()]];\n    this.sketchLineCoords_ = this.sketchCoords_[0];\n  } else {\n    this.sketchCoords_ = [start.slice(), start.slice()];\n  }\n  if (this.sketchLineCoords_) {\n    this.sketchLine_ = new Feature(\n      new LineString(this.sketchLineCoords_));\n  }\n  const geometry = this.geometryFunction_(this.sketchCoords_);\n  this.sketchFeature_ = new Feature();\n  if (this.geometryName_) {\n    this.sketchFeature_.setGeometryName(this.geometryName_);\n  }\n  this.sketchFeature_.setGeometry(geometry);\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * Modify the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.modifyDrawing_ = function(event) {\n  let coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, last;\n  if (this.mode_ === Mode.POINT) {\n    last = this.sketchCoords_;\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    last = coordinates[coordinates.length - 1];\n    if (this.atFinish_(event)) {\n      // snap to finish\n      coordinate = this.finishCoordinate_.slice();\n    }\n  } else {\n    coordinates = this.sketchCoords_;\n    last = coordinates[coordinates.length - 1];\n  }\n  last[0] = coordinate[0];\n  last[1] = coordinate[1];\n  this.geometryFunction_(/** @type {!Array.<module:ol/coordinate~Coordinate>} */ (this.sketchCoords_), geometry);\n  if (this.sketchPoint_) {\n    const sketchPointGeom = /** @type {module:ol/geom/Point} */ (this.sketchPoint_.getGeometry());\n    sketchPointGeom.setCoordinates(coordinate);\n  }\n  let sketchLineGeom;\n  if (geometry instanceof Polygon &&\n      this.mode_ !== Mode.POLYGON) {\n    if (!this.sketchLine_) {\n      this.sketchLine_ = new Feature(new LineString(null));\n    }\n    const ring = geometry.getLinearRing(0);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setFlatCoordinates(\n      ring.getLayout(), ring.getFlatCoordinates());\n  } else if (this.sketchLineCoords_) {\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n  }\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Add a new coordinate to the drawing.\n * @param {module:ol/MapBrowserEvent} event Event.\n * @private\n */\nDraw.prototype.addToDrawing_ = function(event) {\n  const coordinate = event.coordinate;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let done;\n  let coordinates;\n  if (this.mode_ === Mode.LINE_STRING) {\n    this.finishCoordinate_ = coordinate.slice();\n    coordinates = this.sketchCoords_;\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    if (coordinates.length >= this.maxPoints_) {\n      if (this.freehand_) {\n        coordinates.pop();\n      } else {\n        done = true;\n      }\n    }\n    coordinates.push(coordinate.slice());\n    if (done) {\n      this.finishCoordinate_ = coordinates[0];\n    }\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n  this.updateSketchFeatures_();\n  if (done) {\n    this.finishDrawing();\n  }\n};\n\n\n/**\n * Remove last point of the feature currently being drawn.\n * @api\n */\nDraw.prototype.removeLastPoint = function() {\n  if (!this.sketchFeature_) {\n    return;\n  }\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (this.sketchFeature_.getGeometry());\n  let coordinates, sketchLineGeom;\n  if (this.mode_ === Mode.LINE_STRING) {\n    coordinates = this.sketchCoords_;\n    coordinates.splice(-2, 1);\n    this.geometryFunction_(coordinates, geometry);\n    if (coordinates.length >= 2) {\n      this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n    }\n  } else if (this.mode_ === Mode.POLYGON) {\n    coordinates = this.sketchCoords_[0];\n    coordinates.splice(-2, 1);\n    sketchLineGeom = /** @type {module:ol/geom/LineString} */ (this.sketchLine_.getGeometry());\n    sketchLineGeom.setCoordinates(coordinates);\n    this.geometryFunction_(this.sketchCoords_, geometry);\n  }\n\n  if (coordinates.length === 0) {\n    this.finishCoordinate_ = null;\n  }\n\n  this.updateSketchFeatures_();\n};\n\n\n/**\n * Stop drawing and add the sketch feature to the target layer.\n * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n * dispatched before inserting the feature.\n * @api\n */\nDraw.prototype.finishDrawing = function() {\n  const sketchFeature = this.abortDrawing_();\n  if (!sketchFeature) {\n    return;\n  }\n  let coordinates = this.sketchCoords_;\n  const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (sketchFeature.getGeometry());\n  if (this.mode_ === Mode.LINE_STRING) {\n    // remove the redundant last point\n    coordinates.pop();\n    this.geometryFunction_(coordinates, geometry);\n  } else if (this.mode_ === Mode.POLYGON) {\n    // remove the redundant last point in ring\n    coordinates[0].pop();\n    this.geometryFunction_(coordinates, geometry);\n    coordinates = geometry.getCoordinates();\n  }\n\n  // cast multi-part geometries\n  if (this.type_ === GeometryType.MULTI_POINT) {\n    sketchFeature.setGeometry(new MultiPoint([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n    sketchFeature.setGeometry(new MultiLineString([coordinates]));\n  } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n    sketchFeature.setGeometry(new MultiPolygon([coordinates]));\n  }\n\n  // First dispatch event to allow full set up of feature\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n  // Then insert feature\n  if (this.features_) {\n    this.features_.push(sketchFeature);\n  }\n  if (this.source_) {\n    this.source_.addFeature(sketchFeature);\n  }\n};\n\n\n/**\n * Stop drawing without adding the sketch feature to the target layer.\n * @return {module:ol/Feature} The sketch feature (or null if none).\n * @private\n */\nDraw.prototype.abortDrawing_ = function() {\n  this.finishCoordinate_ = null;\n  const sketchFeature = this.sketchFeature_;\n  if (sketchFeature) {\n    this.sketchFeature_ = null;\n    this.sketchPoint_ = null;\n    this.sketchLine_ = null;\n    this.overlay_.getSource().clear(true);\n  }\n  return sketchFeature;\n};\n\n\n/**\n * Extend an existing geometry by adding additional points. This only works\n * on features with `LineString` geometries, where the interaction will\n * extend lines by adding points to the end of the coordinates array.\n * @param {!module:ol/Feature} feature Feature to be extended.\n * @api\n */\nDraw.prototype.extend = function(feature) {\n  const geometry = feature.getGeometry();\n  const lineString = /** @type {module:ol/geom/LineString} */ (geometry);\n  this.sketchFeature_ = feature;\n  this.sketchCoords_ = lineString.getCoordinates();\n  const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n  this.finishCoordinate_ = last.slice();\n  this.sketchCoords_.push(last.slice());\n  this.updateSketchFeatures_();\n  this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n};\n\n\n/**\n * @inheritDoc\n */\nDraw.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * Redraw the sketch features.\n * @private\n */\nDraw.prototype.updateSketchFeatures_ = function() {\n  const sketchFeatures = [];\n  if (this.sketchFeature_) {\n    sketchFeatures.push(this.sketchFeature_);\n  }\n  if (this.sketchLine_) {\n    sketchFeatures.push(this.sketchLine_);\n  }\n  if (this.sketchPoint_) {\n    sketchFeatures.push(this.sketchPoint_);\n  }\n  const overlaySource = this.overlay_.getSource();\n  overlaySource.clear(true);\n  overlaySource.addFeatures(sketchFeatures);\n};\n\n\n/**\n * @private\n */\nDraw.prototype.updateState_ = function() {\n  const map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    this.abortDrawing_();\n  }\n  this.overlay_.setMap(active ? map : null);\n};\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `module:ol/geom/Circle~Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = coordinates[0];\n    const end = coordinates[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {module:ol/geom/Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    const angle = opt_angle ? opt_angle :\n      Math.atan((end[1] - center[1]) / (end[0] - center[0]));\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {module:ol/interaction/Draw~GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(coordinates);\n      const geometry = opt_geometry || new Polygon(null);\n      geometry.setCoordinates([[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]]);\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @return {module:ol/interaction/Draw~Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!module:ol/interaction/Draw~Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event module:ol/interaction/Extent~ExtentEventType#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n *\n * @constructor\n * @param {module:ol/extent~Extent} extent the new extent\n * @extends {module:ol/events/Event}\n */\nconst ExtentInteractionEvent = function(extent) {\n  Event.call(this, ExtentEventType.EXTENTCHANGED);\n\n  /**\n   * The current extent.\n   * @type {module:ol/extent~Extent}\n   * @api\n   */\n  this.extent = extent;\n\n};\ninherits(ExtentInteractionEvent, Event);\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Extent~Event\n * @param {module:ol/interaction/Extent~Options=} opt_options Options.\n * @api\n */\nconst ExtentInteraction = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * Extent of the drawn box\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.extent_ = null;\n\n  /**\n   * Handler for pointer move events\n   * @type {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null}\n   * @private\n   */\n  this.pointerHandler_ = null;\n\n  /**\n   * Pixel threshold to snap to extent\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * Is the pointer snapped to an extent vertex\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Feature for displaying the visible extent\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.extentFeature_ = null;\n\n  /**\n   * Feature for displaying the visible pointer\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  if (!opt_options) {\n    opt_options = {};\n  }\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * Layer for the extentFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.extentOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * Layer for the vertexFeature\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.vertexOverlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!opt_options.wrapX\n    }),\n    style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  if (opt_options.extent) {\n    this.setExtent(opt_options.extent);\n  }\n};\n\ninherits(ExtentInteraction, PointerInteraction);\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Event.\n * @return {boolean} Propagate event?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  //display pointer (if not dragging)\n  if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  //call pointer to determine up/down/drag\n  handlePointerEvent.call(this, mapBrowserEvent);\n  //return false to stop propagation\n  return false;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  const extent = this.getExtent();\n  let vertex = this.snapToVertex_(pixel, map);\n\n  //find the extent corner opposite the passed corner\n  const getOpposingPoint = function(point) {\n    let x_ = null;\n    let y_ = null;\n    if (point[0] == extent[0]) {\n      x_ = extent[2];\n    } else if (point[0] == extent[2]) {\n      x_ = extent[0];\n    }\n    if (point[1] == extent[1]) {\n      y_ = extent[3];\n    } else if (point[1] == extent[3]) {\n      y_ = extent[1];\n    }\n    if (x_ !== null && y_ !== null) {\n      return [x_, y_];\n    }\n    return null;\n  };\n  if (vertex && extent) {\n    const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n    const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n    //snap to point\n    if (x !== null && y !== null) {\n      this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n    //snap to edge\n    } else if (x !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([x, extent[1]]),\n        getOpposingPoint([x, extent[3]])\n      );\n    } else if (y !== null) {\n      this.pointerHandler_ = getEdgeHandler(\n        getOpposingPoint([extent[0], y]),\n        getOpposingPoint([extent[2], y])\n      );\n    }\n  //no snap - new bbox\n  } else {\n    vertex = map.getCoordinateFromPixel(pixel);\n    this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n    this.pointerHandler_ = getPointHandler(vertex);\n  }\n  return true; //event handled; start downup sequence\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Event handled?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (this.pointerHandler_) {\n    const pixelCoordinate = mapBrowserEvent.coordinate;\n    this.setExtent(this.pointerHandler_(pixelCoordinate));\n    this.createOrUpdatePointerFeature_(pixelCoordinate);\n  }\n  return true;\n}\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Extent~Extent}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  this.pointerHandler_ = null;\n  //If bbox is zero area, set to null;\n  const extent = this.getExtent();\n  if (!extent || getArea(extent) === 0) {\n    this.setExtent(null);\n  }\n  return false; //Stop handling downup sequence\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {module:ol/style/Style~StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {module:ol/style/Style~StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {module:ol/coordinate~Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {module:ol/coordinate~Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (module:ol/coordinate~Coordinate): module:ol/extent~Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {Array<Array<module:ol/coordinate~Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n/**\n * @param {module:ol~Pixel} pixel cursor location\n * @param {module:ol/PluggableMap} map map\n * @returns {module:ol/coordinate~Coordinate|null} snapped vertex on extent\n * @private\n */\nExtentInteraction.prototype.snapToVertex_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return squaredDistanceToSegment(pixelCoordinate, a) -\n        squaredDistanceToSegment(pixelCoordinate, b);\n  };\n  const extent = this.getExtent();\n  if (extent) {\n    //convert extents to line segments and find the segment closest to pixelCoordinate\n    const segments = getSegments(extent);\n    segments.sort(sortByDistance);\n    const closestSegment = segments[0];\n\n    let vertex = (closestOnSegment(pixelCoordinate,\n      closestSegment));\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n\n    //if the distance is within tolerance, snap to the segment\n    if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n      //test if we should further snap to a vertex\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      this.snappedToVertex_ = dist <= this.pixelTolerance_;\n      if (this.snappedToVertex_) {\n        vertex = squaredDist1 > squaredDist2 ?\n          closestSegment[1] : closestSegment[0];\n      }\n      return vertex;\n    }\n  }\n  return null;\n};\n\n/**\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent pointer move event\n * @private\n */\nExtentInteraction.prototype.handlePointerMove_ = function(mapBrowserEvent) {\n  const pixel = mapBrowserEvent.pixel;\n  const map = mapBrowserEvent.map;\n\n  let vertex = this.snapToVertex_(pixel, map);\n  if (!vertex) {\n    vertex = map.getCoordinateFromPixel(pixel);\n  }\n  this.createOrUpdatePointerFeature_(vertex);\n};\n\n/**\n * @param {module:ol/extent~Extent} extent extent\n * @returns {module:ol/Feature} extent as featrue\n * @private\n */\nExtentInteraction.prototype.createOrUpdateExtentFeature_ = function(extent) {\n  let extentFeature = this.extentFeature_;\n\n  if (!extentFeature) {\n    if (!extent) {\n      extentFeature = new Feature({});\n    } else {\n      extentFeature = new Feature(polygonFromExtent(extent));\n    }\n    this.extentFeature_ = extentFeature;\n    this.extentOverlay_.getSource().addFeature(extentFeature);\n  } else {\n    if (!extent) {\n      extentFeature.setGeometry(undefined);\n    } else {\n      extentFeature.setGeometry(polygonFromExtent(extent));\n    }\n  }\n  return extentFeature;\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} vertex location of feature\n * @returns {module:ol/Feature} vertex as feature\n * @private\n */\nExtentInteraction.prototype.createOrUpdatePointerFeature_ = function(vertex) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(vertex));\n    this.vertexFeature_ = vertexFeature;\n    this.vertexOverlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(vertex);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @inheritDoc\n */\nExtentInteraction.prototype.setMap = function(map) {\n  this.extentOverlay_.setMap(map);\n  this.vertexOverlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n/**\n * Returns the current drawn extent in the view projection\n *\n * @return {module:ol/extent~Extent} Drawn extent in the view projection.\n * @api\n */\nExtentInteraction.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n/**\n * Manually sets the drawn extent, using the view projection.\n *\n * @param {module:ol/extent~Extent} extent Extent\n * @api\n */\nExtentInteraction.prototype.setExtent = function(extent) {\n  //Null extent means no bbox\n  this.extent_ = extent ? extent : null;\n  this.createOrUpdateExtentFeature_(extent);\n  this.dispatchEvent(new ExtentInteractionEvent(this.extent_));\n};\n\n\nexport default ExtentInteraction;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid, inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport {listen, unlisten} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer, createOrUpdateFromCoordinate} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array.<number>} [depth]\n * @property {module:ol/Feature} feature\n * @property {module:ol/geom/SimpleGeometry} geometry\n * @property {number} index\n * @property {Array.<module:ol/extent~Extent>} segment\n * @property {Array.<module:ol/interaction/Modify~SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {module:ol/events/condition~Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {module:ol/events/condition~Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex can be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {module:ol/source/Vector} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {ModifyEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features\n * The features modified.\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserPointerEvent\n * Associated {@link module:ol/MapBrowserPointerEvent}.\n */\nexport const ModifyEvent = function(type, features, mapBrowserPointerEvent) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being modified.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserPointerEvent;\n};\n\ninherits(ModifyEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Modify~Options} options Options.\n * @fires module:ol/interaction/Modify~ModifyEvent\n * @api\n */\nconst Modify = function(options) {\n\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleEvent: handleEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : primaryAction;\n\n\n  /**\n   * @private\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n   * @return {boolean} Combined condition result.\n   */\n  this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n    return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n  };\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.deleteCondition_ = options.deleteCondition ?\n    options.deleteCondition : this.defaultDeleteCondition_;\n\n  /**\n   * @type {module:ol/events/condition~Condition}\n   * @private\n   */\n  this.insertVertexCondition_ = options.insertVertexCondition ?\n    options.insertVertexCondition : always;\n\n  /**\n   * Editing vertex.\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.vertexFeature_ = null;\n\n  /**\n   * Segments intersecting {@link this.vertexFeature_} by segment uid.\n   * @type {Object.<string, boolean>}\n   * @private\n   */\n  this.vertexSegments_ = null;\n\n  /**\n   * @type {module:ol~Pixel}\n   * @private\n   */\n  this.lastPixel_ = [0, 0];\n\n  /**\n   * Tracks if the next `singleclick` event should be ignored to prevent\n   * accidental deletion right after vertex creation.\n   * @type {boolean}\n   * @private\n   */\n  this.ignoreNextSingleClick_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.modified_ = false;\n\n  /**\n   * Segment RTree for each layer\n   * @type {module:ol/structs/RBush.<module:ol/interaction/Modify~SegmentData>}\n   * @private\n   */\n  this.rBush_ = new RBush();\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.snappedToVertex_ = false;\n\n  /**\n   * Indicate whether the interaction is currently changing a feature's\n   * coordinates.\n   * @type {boolean}\n   * @private\n   */\n  this.changingFeature_ = false;\n\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.dragSegments_ = [];\n\n  /**\n   * Draw overlay where sketch features are drawn.\n   * @type {module:ol/layer/Vector}\n   * @private\n   */\n  this.overlay_ = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      wrapX: !!options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @const\n   * @private\n   * @type {!Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n   */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'Circle': this.writeCircleGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_\n  };\n\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = null;\n\n  let features;\n  if (options.source) {\n    this.source_ = options.source;\n    features = new Collection(this.source_.getFeatures());\n    listen(this.source_, VectorEventType.ADDFEATURE,\n      this.handleSourceAdd_, this);\n    listen(this.source_, VectorEventType.REMOVEFEATURE,\n      this.handleSourceRemove_, this);\n  } else {\n    features = options.features;\n  }\n  if (!features) {\n    throw new Error('The modify interaction requires features or a source');\n  }\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = features;\n\n  this.features_.forEach(this.addFeature_.bind(this));\n  listen(this.features_, CollectionEventType.ADD,\n    this.handleFeatureAdd_, this);\n  listen(this.features_, CollectionEventType.REMOVE,\n    this.handleFeatureRemove_, this);\n\n  /**\n   * @type {module:ol/MapBrowserPointerEvent}\n   * @private\n   */\n  this.lastPointerEvent_ = null;\n\n};\n\ninherits(Modify, PointerInteraction);\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.addFeature_ = function(feature) {\n  const geometry = feature.getGeometry();\n  if (geometry && geometry.getType() in this.SEGMENT_WRITERS_) {\n    this.SEGMENT_WRITERS_[geometry.getType()].call(this, feature, geometry);\n  }\n  const map = this.getMap();\n  if (map && map.isRendered() && this.getActive()) {\n    this.handlePointerAtPixel_(this.lastPixel_, map);\n  }\n  listen(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Map browser event\n * @private\n */\nModify.prototype.willModifyFeatures_ = function(evt) {\n  if (!this.modified_) {\n    this.modified_ = true;\n    this.dispatchEvent(new ModifyEvent(\n      ModifyEventType.MODIFYSTART, this.features_, evt));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeature_ = function(feature) {\n  this.removeFeatureSegmentData_(feature);\n  // Remove the vertex feature if the collection of canditate features\n  // is empty.\n  if (this.vertexFeature_ && this.features_.getLength() === 0) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  unlisten(feature, EventType.CHANGE,\n    this.handleFeatureChange_, this);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nModify.prototype.removeFeatureSegmentData_ = function(feature) {\n  const rBush = this.rBush_;\n  const /** @type {Array.<module:ol/interaction/Modify~SegmentData>} */ nodesToRemove = [];\n  rBush.forEach(\n    /**\n     * @param {module:ol/interaction/Modify~SegmentData} node RTree node.\n     */\n    function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n  for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n    rBush.remove(nodesToRemove[i]);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setActive = function(active) {\n  if (this.vertexFeature_ && !active) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n  PointerInteraction.prototype.setActive.call(this, active);\n};\n\n\n/**\n * @inheritDoc\n */\nModify.prototype.setMap = function(map) {\n  this.overlay_.setMap(map);\n  PointerInteraction.prototype.setMap.call(this, map);\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceAdd_ = function(event) {\n  if (event.feature) {\n    this.features_.push(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/source/Vector~VectorSourceEvent} event Event.\n * @private\n */\nModify.prototype.handleSourceRemove_ = function(event) {\n  if (event.feature) {\n    this.features_.remove(event.feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureAdd_ = function(evt) {\n  this.addFeature_(/** @type {module:ol/Feature} */ (evt.element));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nModify.prototype.handleFeatureChange_ = function(evt) {\n  if (!this.changingFeature_) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    this.removeFeature_(feature);\n    this.addFeature_(feature);\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nModify.prototype.handleFeatureRemove_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.element);\n  this.removeFeature_(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nModify.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      depth: [i],\n      index: i,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n      feature: feature,\n      geometry: geometry,\n      index: i,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nModify.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n        feature: feature,\n        geometry: geometry,\n        depth: [j],\n        index: i,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nModify.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          feature: feature,\n          geometry: geometry,\n          depth: [j, k],\n          index: i,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * We convert a circle into two segments.  The segment at index\n * {@link CIRCLE_CENTER_INDEX} is the\n * circle's center (a point).  The segment at index\n * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n * the circumference, and is not a line segment.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nModify.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCenter();\n  const centerSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CENTER_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const circumferenceSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    feature: feature,\n    geometry: geometry,\n    index: CIRCLE_CIRCUMFERENCE_INDEX,\n    segment: [coordinates, coordinates]\n  });\n  const featureSegments = [centerSegmentData, circumferenceSegmentData];\n  centerSegmentData.featureSegments = circumferenceSegmentData.featureSegments = featureSegments;\n  this.rBush_.insert(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n  this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nModify.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    this.SEGMENT_WRITERS_[geometries[i].getType()].call(this, feature, geometries[i]);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinates Coordinates.\n * @return {module:ol/Feature} Vertex feature.\n * @private\n */\nModify.prototype.createOrUpdateVertexFeature_ = function(coordinates) {\n  let vertexFeature = this.vertexFeature_;\n  if (!vertexFeature) {\n    vertexFeature = new Feature(new Point(coordinates));\n    this.vertexFeature_ = vertexFeature;\n    this.overlay_.getSource().addFeature(vertexFeature);\n  } else {\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    geometry.setCoordinates(coordinates);\n  }\n  return vertexFeature;\n};\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Modify~SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDownEvent(evt) {\n  if (!this.condition_(evt)) {\n    return false;\n  }\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n  const pixelCoordinate = evt.map.getCoordinateFromPixel(evt.pixel);\n  this.dragSegments_.length = 0;\n  this.modified_ = false;\n  const vertexFeature = this.vertexFeature_;\n  if (vertexFeature) {\n    const insertVertices = [];\n    const geometry = /** @type {module:ol/geom/Point} */ (vertexFeature.getGeometry());\n    const vertex = geometry.getCoordinates();\n    const vertexExtent = boundingExtent([vertex]);\n    const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n    const componentSegments = {};\n    segmentDataMatches.sort(compareIndexes);\n    for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n      const segmentDataMatch = segmentDataMatches[i];\n      const segment = segmentDataMatch.segment;\n      let uid = getUid(segmentDataMatch.feature);\n      const depth = segmentDataMatch.depth;\n      if (depth) {\n        uid += '-' + depth.join('-'); // separate feature components\n      }\n      if (!componentSegments[uid]) {\n        componentSegments[uid] = new Array(2);\n      }\n      if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE &&\n      segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch);\n        if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n        }\n      } else if (coordinatesEqual(segment[0], vertex) &&\n          !componentSegments[uid][0]) {\n        this.dragSegments_.push([segmentDataMatch, 0]);\n        componentSegments[uid][0] = segmentDataMatch;\n      } else if (coordinatesEqual(segment[1], vertex) &&\n          !componentSegments[uid][1]) {\n\n        // prevent dragging closed linestrings by the connecting node\n        if ((segmentDataMatch.geometry.getType() ===\n            GeometryType.LINE_STRING ||\n            segmentDataMatch.geometry.getType() ===\n            GeometryType.MULTI_LINE_STRING) &&\n            componentSegments[uid][0] &&\n            componentSegments[uid][0].index === 0) {\n          continue;\n        }\n\n        this.dragSegments_.push([segmentDataMatch, 1]);\n        componentSegments[uid][1] = segmentDataMatch;\n      } else if (this.insertVertexCondition_(evt) && getUid(segment) in this.vertexSegments_ &&\n          (!componentSegments[uid][0] && !componentSegments[uid][1])) {\n        insertVertices.push([segmentDataMatch, vertex]);\n      }\n    }\n    if (insertVertices.length) {\n      this.willModifyFeatures_(evt);\n    }\n    for (let j = insertVertices.length - 1; j >= 0; --j) {\n      this.insertVertex_.apply(this, insertVertices[j]);\n    }\n  }\n  return !!this.vertexFeature_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleDragEvent(evt) {\n  this.ignoreNextSingleClick_ = false;\n  this.willModifyFeatures_(evt);\n\n  const vertex = evt.coordinate;\n  for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n    const dragSegment = this.dragSegments_[i];\n    const segmentData = dragSegment[0];\n    const depth = segmentData.depth;\n    const geometry = segmentData.geometry;\n    let coordinates;\n    const segment = segmentData.segment;\n    const index = dragSegment[1];\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(segment[index][vertex.length]);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.POINT:\n        coordinates = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.MULTI_POINT:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index] = vertex;\n        segment[0] = segment[1] = vertex;\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n        segment[index] = vertex;\n        break;\n      case GeometryType.CIRCLE:\n        segment[0] = segment[1] = vertex;\n        if (segmentData.index === CIRCLE_CENTER_INDEX) {\n          this.changingFeature_ = true;\n          geometry.setCenter(vertex);\n          this.changingFeature_ = false;\n        } else { // We're dragging the circle's circumference:\n          this.changingFeature_ = true;\n          geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n          this.changingFeature_ = false;\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (coordinates) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n    }\n  }\n  this.createOrUpdateVertexFeature_(vertex);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Modify}\n */\nfunction handleUpEvent(evt) {\n  for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n    const segmentData = this.dragSegments_[i][0];\n    const geometry = segmentData.geometry;\n    if (geometry.getType() === GeometryType.CIRCLE) {\n      // Update a circle object in the R* bush:\n      const coordinates = geometry.getCenter();\n      const centerSegmentData = segmentData.featureSegments[0];\n      const circumferenceSegmentData = segmentData.featureSegments[1];\n      centerSegmentData.segment[0] = centerSegmentData.segment[1] = coordinates;\n      circumferenceSegmentData.segment[0] = circumferenceSegmentData.segment[1] = coordinates;\n      this.rBush_.update(createOrUpdateFromCoordinate(coordinates), centerSegmentData);\n      this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n    } else {\n      this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n    }\n  }\n  if (this.modified_) {\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n  }\n  return false;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the\n * geometry.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Modify}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n  this.lastPointerEvent_ = mapBrowserEvent;\n\n  let handled;\n  if (!mapBrowserEvent.map.getView().getInteracting() &&\n      mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n      !this.handlingDownUpSequence) {\n    this.handlePointerMove_(mapBrowserEvent);\n  }\n  if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n    if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n      handled = this.removePoint();\n    } else {\n      handled = true;\n    }\n  }\n\n  if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n    this.ignoreNextSingleClick_ = false;\n  }\n\n  return handlePointerEvent.call(this, mapBrowserEvent) && !handled;\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} evt Event.\n * @private\n */\nModify.prototype.handlePointerMove_ = function(evt) {\n  this.lastPixel_ = evt.pixel;\n  this.handlePointerAtPixel_(evt.pixel, evt.map);\n};\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/PluggableMap} map Map.\n * @private\n */\nModify.prototype.handlePointerAtPixel_ = function(pixel, map) {\n  const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n  const sortByDistance = function(a, b) {\n    return pointDistanceToSegmentDataSquared(pixelCoordinate, a) -\n        pointDistanceToSegmentDataSquared(pixelCoordinate, b);\n  };\n\n  const box = buffer(createOrUpdateFromCoordinate(pixelCoordinate),\n    map.getView().getResolution() * this.pixelTolerance_);\n\n  const rBush = this.rBush_;\n  const nodes = rBush.getInExtent(box);\n  if (nodes.length > 0) {\n    nodes.sort(sortByDistance);\n    const node = nodes[0];\n    const closestSegment = node.segment;\n    let vertex = closestOnSegmentData(pixelCoordinate, node);\n    const vertexPixel = map.getPixelFromCoordinate(vertex);\n    let dist = coordinateDistance(pixel, vertexPixel);\n    if (dist <= this.pixelTolerance_) {\n      const vertexSegments = {};\n\n      if (node.geometry.getType() === GeometryType.CIRCLE &&\n      node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n\n        this.snappedToVertex_ = true;\n        this.createOrUpdateVertexFeature_(vertex);\n      } else {\n        const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        }\n        this.createOrUpdateVertexFeature_(vertex);\n        for (let i = 1, ii = nodes.length; i < ii; ++i) {\n          const segment = nodes[i].segment;\n          if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n              coordinatesEqual(closestSegment[1], segment[1]) ||\n              (coordinatesEqual(closestSegment[0], segment[1]) &&\n              coordinatesEqual(closestSegment[1], segment[0])))) {\n            vertexSegments[getUid(segment)] = true;\n          } else {\n            break;\n          }\n        }\n      }\n\n      vertexSegments[getUid(closestSegment)] = true;\n      this.vertexSegments_ = vertexSegments;\n      return;\n    }\n  }\n  if (this.vertexFeature_) {\n    this.overlay_.getSource().removeFeature(this.vertexFeature_);\n    this.vertexFeature_ = null;\n  }\n};\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction pointDistanceToSegmentDataSquared(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {module:ol/geom/Circle} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n  return squaredDistanceToSegment(pointCoordinates, segmentData.segment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {module:ol/coordinate~Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {module:ol/interaction/Modify~SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @return {module:ol/coordinate~Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE &&\n  segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  return closestOnSegment(pointCoordinates, segmentData.segment);\n}\n\n\n/**\n * @param {module:ol/interaction/Modify~SegmentData} segmentData Segment data.\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @private\n */\nModify.prototype.insertVertex_ = function(segmentData, vertex) {\n  const segment = segmentData.segment;\n  const feature = segmentData.feature;\n  const geometry = segmentData.geometry;\n  const depth = segmentData.depth;\n  const index = /** @type {number} */ (segmentData.index);\n  let coordinates;\n\n  while (vertex.length < geometry.getStride()) {\n    vertex.push(0);\n  }\n\n  switch (geometry.getType()) {\n    case GeometryType.MULTI_LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.MULTI_POLYGON:\n      coordinates = geometry.getCoordinates();\n      coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n      break;\n    case GeometryType.LINE_STRING:\n      coordinates = geometry.getCoordinates();\n      coordinates.splice(index + 1, 0, vertex);\n      break;\n    default:\n      return;\n  }\n\n  this.setGeometryCoordinates_(geometry, coordinates);\n  const rTree = this.rBush_;\n  rTree.remove(segmentData);\n  this.updateSegmentIndices_(geometry, index, depth, 1);\n  const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [segment[0], vertex],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index\n  });\n  rTree.insert(boundingExtent(newSegmentData.segment),\n    newSegmentData);\n  this.dragSegments_.push([newSegmentData, 1]);\n\n  const newSegmentData2 = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n    segment: [vertex, segment[1]],\n    feature: feature,\n    geometry: geometry,\n    depth: depth,\n    index: index + 1\n  });\n  rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n  this.dragSegments_.push([newSegmentData2, 0]);\n  this.ignoreNextSingleClick_ = true;\n};\n\n/**\n * Removes the vertex currently being pointed.\n * @return {boolean} True when a vertex was removed.\n * @api\n */\nModify.prototype.removePoint = function() {\n  if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n    const evt = this.lastPointerEvent_;\n    this.willModifyFeatures_(evt);\n    this.removeVertex_();\n    this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n    this.modified_ = false;\n    return true;\n  }\n  return false;\n};\n\n/**\n * Removes a vertex from all matching features.\n * @return {boolean} True when a vertex was removed.\n * @private\n */\nModify.prototype.removeVertex_ = function() {\n  const dragSegments = this.dragSegments_;\n  const segmentsByFeature = {};\n  let deleted = false;\n  let component, coordinates, dragSegment, geometry, i, index, left;\n  let newIndex, right, segmentData, uid;\n  for (i = dragSegments.length - 1; i >= 0; --i) {\n    dragSegment = dragSegments[i];\n    segmentData = dragSegment[0];\n    uid = getUid(segmentData.feature);\n    if (segmentData.depth) {\n      // separate feature components\n      uid += '-' + segmentData.depth.join('-');\n    }\n    if (!(uid in segmentsByFeature)) {\n      segmentsByFeature[uid] = {};\n    }\n    if (dragSegment[1] === 0) {\n      segmentsByFeature[uid].right = segmentData;\n      segmentsByFeature[uid].index = segmentData.index;\n    } else if (dragSegment[1] == 1) {\n      segmentsByFeature[uid].left = segmentData;\n      segmentsByFeature[uid].index = segmentData.index + 1;\n    }\n\n  }\n  for (uid in segmentsByFeature) {\n    right = segmentsByFeature[uid].right;\n    left = segmentsByFeature[uid].left;\n    index = segmentsByFeature[uid].index;\n    newIndex = index - 1;\n    if (left !== undefined) {\n      segmentData = left;\n    } else {\n      segmentData = right;\n    }\n    if (newIndex < 0) {\n      newIndex = 0;\n    }\n    geometry = segmentData.geometry;\n    coordinates = geometry.getCoordinates();\n    component = coordinates;\n    deleted = false;\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        if (coordinates[segmentData.depth[0]].length > 2) {\n          coordinates[segmentData.depth[0]].splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.LINE_STRING:\n        if (coordinates.length > 2) {\n          coordinates.splice(index, 1);\n          deleted = true;\n        }\n        break;\n      case GeometryType.MULTI_POLYGON:\n        component = component[segmentData.depth[1]];\n        /* falls through */\n      case GeometryType.POLYGON:\n        component = component[segmentData.depth[0]];\n        if (component.length > 4) {\n          if (index == component.length - 1) {\n            index = 0;\n          }\n          component.splice(index, 1);\n          deleted = true;\n          if (index === 0) {\n            // close the ring again\n            component.pop();\n            component.push(component[0]);\n            newIndex = component.length - 1;\n          }\n        }\n        break;\n      default:\n        // pass\n    }\n\n    if (deleted) {\n      this.setGeometryCoordinates_(geometry, coordinates);\n      const segments = [];\n      if (left !== undefined) {\n        this.rBush_.remove(left);\n        segments.push(left.segment[0]);\n      }\n      if (right !== undefined) {\n        this.rBush_.remove(right);\n        segments.push(right.segment[1]);\n      }\n      if (left !== undefined && right !== undefined) {\n        const newSegmentData = /** @type {module:ol/interaction/Modify~SegmentData} */ ({\n          depth: segmentData.depth,\n          feature: segmentData.feature,\n          geometry: segmentData.geometry,\n          index: newIndex,\n          segment: segments\n        });\n        this.rBush_.insert(boundingExtent(newSegmentData.segment),\n          newSegmentData);\n      }\n      this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n      if (this.vertexFeature_) {\n        this.overlay_.getSource().removeFeature(this.vertexFeature_);\n        this.vertexFeature_ = null;\n      }\n      dragSegments.length = 0;\n    }\n\n  }\n  return deleted;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array} coordinates Coordinates.\n * @private\n */\nModify.prototype.setGeometryCoordinates_ = function(geometry, coordinates) {\n  this.changingFeature_ = true;\n  geometry.setCoordinates(coordinates);\n  this.changingFeature_ = false;\n};\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {number} index Index.\n * @param {Array.<number>|undefined} depth Depth.\n * @param {number} delta Delta (1 or -1).\n * @private\n */\nModify.prototype.updateSegmentIndices_ = function(\n  geometry, index, depth, delta) {\n  this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n    if (segmentDataMatch.geometry === geometry &&\n        (depth === undefined || segmentDataMatch.depth === undefined ||\n        equals(segmentDataMatch.depth, depth)) &&\n        segmentDataMatch.index > index) {\n      segmentDataMatch.index += delta;\n    }\n  });\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid, inherits} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n *\n * @param {SelectEventType} type The event type.\n * @param {Array.<module:ol/Feature>} selected Selected features.\n * @param {Array.<module:ol/Feature>} deselected Deselected features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n *     {@link module:ol/MapBrowserEvent}.\n * @extends {module:ol/events/Event}\n * @constructor\n */\nconst SelectEvent = function(type, selected, deselected, mapBrowserEvent) {\n  Event.call(this, type);\n\n  /**\n   * Selected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.selected = selected;\n\n  /**\n   * Deselected features array.\n   * @type {Array.<module:ol/Feature>}\n   * @api\n   */\n  this.deselected = deselected;\n\n  /**\n   * Associated {@link module:ol/MapBrowserEvent}.\n   * @type {module:ol/MapBrowserEvent}\n   * @api\n   */\n  this.mapBrowserEvent = mapBrowserEvent;\n};\n\ninherits(SelectEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @constructor\n * @extends {module:ol/interaction/Interaction}\n * @param {module:ol/interaction/Select~Options=} opt_options Options.\n * @fires SelectEvent\n * @api\n */\nconst Select = function(opt_options) {\n\n  Interaction.call(this, {\n    handleEvent: handleEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.condition_ = options.condition ? options.condition : singleClick;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n  /**\n   * @private\n   * @type {module:ol/events/condition~Condition}\n   */\n  this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.multi_ = options.multi ? options.multi : false;\n\n  /**\n   * @private\n   * @type {module:ol/interaction/Select~FilterFunction}\n   */\n  this.filter_ = options.filter ? options.filter : TRUE;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  const featureOverlay = new VectorLayer({\n    source: new VectorSource({\n      useSpatialIndex: false,\n      features: options.features,\n      wrapX: options.wrapX\n    }),\n    style: options.style ? options.style :\n      getDefaultStyleFunction(),\n    updateWhileAnimating: true,\n    updateWhileInteracting: true\n  });\n\n  /**\n   * @private\n   * @type {module:ol/layer/Vector}\n   */\n  this.featureOverlay_ = featureOverlay;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * An association between selected feature (key)\n   * and layer (value)\n   * @private\n   * @type {Object.<number, module:ol/layer/Layer>}\n   */\n  this.featureLayerAssociation_ = {};\n\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  listen(features, CollectionEventType.ADD,\n    this.addFeature_, this);\n  listen(features, CollectionEventType.REMOVE,\n    this.removeFeature_, this);\n\n};\n\ninherits(Select, Interaction);\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/layer/Layer} layer Layer.\n * @private\n */\nSelect.prototype.addFeatureLayerAssociation_ = function(feature, layer) {\n  const key = getUid(feature);\n  this.featureLayerAssociation_[key] = layer;\n};\n\n\n/**\n * Get the selected features.\n * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n * @api\n */\nSelect.prototype.getFeatures = function() {\n  return this.featureOverlay_.getSource().getFeaturesCollection();\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n * the (last) selected feature. Note that this will not work with any\n * programmatic method like pushing features to\n * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n * @return {module:ol/layer/Vector} Layer.\n * @api\n */\nSelect.prototype.getLayer = function(feature) {\n  const key = getUid(feature);\n  return (\n    /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n  );\n};\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nSelect.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * Remove the interaction from its current map, if any,  and attach it to a new\n * map, if any. Pass `null` to just remove the interaction from the current map.\n * @param {module:ol/PluggableMap} map Map.\n * @override\n * @api\n */\nSelect.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const selectedFeatures =\n      this.featureOverlay_.getSource().getFeaturesCollection();\n  if (currentMap) {\n    selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n  }\n  Interaction.prototype.setMap.call(this, map);\n  this.featureOverlay_.setMap(map);\n  if (map) {\n    selectedFeatures.forEach(map.skipFeature.bind(map));\n  }\n};\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.addFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSelect.prototype.removeFeature_ = function(evt) {\n  const map = this.getMap();\n  if (map) {\n    map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n  }\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @private\n */\nSelect.prototype.removeFeatureLayerAssociation_ = function(feature) {\n  const key = getUid(feature);\n  delete this.featureLayerAssociation_[key];\n};\n\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid, inherits} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n * @api\n */\nconst Snap = function(opt_options) {\n\n  PointerInteraction.call(this, {\n    handleEvent: handleEvent,\n    handleDownEvent: TRUE,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/source/Vector}\n   * @private\n   */\n  this.source_ = options.source ? options.source : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.edge_ = options.edge !== undefined ? options.edge : true;\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features ? options.features : null;\n\n  /**\n   * @type {Array.<module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featuresListenerKeys_ = [];\n\n  /**\n   * @type {Object.<number, module:ol/events~EventsKey>}\n   * @private\n   */\n  this.featureChangeListenerKeys_ = {};\n\n  /**\n   * Extents are preserved so indexed segment can be quickly removed\n   * when its feature geometry changes\n   * @type {Object.<number, module:ol/extent~Extent>}\n   * @private\n   */\n  this.indexedFeaturesExtents_ = {};\n\n  /**\n   * If a feature geometry changes while a pointer drag|move event occurs, the\n   * feature doesn't get updated right away.  It will be at the next 'pointerup'\n   * event fired.\n   * @type {!Object.<number, module:ol/Feature>}\n   * @private\n   */\n  this.pendingFeatures_ = {};\n\n  /**\n   * Used for distance sorting in sortByDistance_\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.pixelCoordinate_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n    options.pixelTolerance : 10;\n\n  /**\n   * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n   * @private\n   */\n  this.sortByDistance_ = sortByDistance.bind(this);\n\n\n  /**\n  * Segment RTree for each layer\n  * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n  * @private\n  */\n  this.rBush_ = new RBush();\n\n\n  /**\n  * @const\n  * @private\n  * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n  */\n  this.SEGMENT_WRITERS_ = {\n    'Point': this.writePointGeometry_,\n    'LineString': this.writeLineStringGeometry_,\n    'LinearRing': this.writeLineStringGeometry_,\n    'Polygon': this.writePolygonGeometry_,\n    'MultiPoint': this.writeMultiPointGeometry_,\n    'MultiLineString': this.writeMultiLineStringGeometry_,\n    'MultiPolygon': this.writeMultiPolygonGeometry_,\n    'GeometryCollection': this.writeGeometryCollectionGeometry_,\n    'Circle': this.writeCircleGeometry_\n  };\n};\n\ninherits(Snap, PointerInteraction);\n\n\n/**\n * Add a feature to the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature.\n * @param {boolean=} opt_listen Whether to listen to the feature change or not\n *     Defaults to `true`.\n * @api\n */\nSnap.prototype.addFeature = function(feature, opt_listen) {\n  const register = opt_listen !== undefined ? opt_listen : true;\n  const feature_uid = getUid(feature);\n  const geometry = feature.getGeometry();\n  if (geometry) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n    if (segmentWriter) {\n      this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n      segmentWriter.call(this, feature, geometry);\n    }\n  }\n\n  if (register) {\n    this.featureChangeListenerKeys_[feature_uid] = listen(\n      feature,\n      EventType.CHANGE,\n      this.handleFeatureChange_, this);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureAdd_ = function(feature) {\n  this.addFeature(feature);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @private\n */\nSnap.prototype.forEachFeatureRemove_ = function(feature) {\n  this.removeFeature(feature);\n};\n\n\n/**\n * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n * @private\n */\nSnap.prototype.getFeatures_ = function() {\n  let features;\n  if (this.features_) {\n    features = this.features_;\n  } else if (this.source_) {\n    features = this.source_.getFeatures();\n  }\n  return (\n    /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n  );\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureAdd_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.addFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureRemove_ = function(evt) {\n  let feature;\n  if (evt instanceof VectorSourceEvent) {\n    feature = evt.feature;\n  } else if (evt instanceof CollectionEvent) {\n    feature = evt.element;\n  }\n  this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n};\n\n\n/**\n * @param {module:ol/events/Event} evt Event.\n * @private\n */\nSnap.prototype.handleFeatureChange_ = function(evt) {\n  const feature = /** @type {module:ol/Feature} */ (evt.target);\n  if (this.handlingDownUpSequence) {\n    const uid = getUid(feature);\n    if (!(uid in this.pendingFeatures_)) {\n      this.pendingFeatures_[uid] = feature;\n    }\n  } else {\n    this.updateFeature_(feature);\n  }\n};\n\n\n/**\n * Remove a feature from the collection of features that we may snap to.\n * @param {module:ol/Feature} feature Feature\n * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n *     or not. Defaults to `true`.\n * @api\n */\nSnap.prototype.removeFeature = function(feature, opt_unlisten) {\n  const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n  const feature_uid = getUid(feature);\n  const extent = this.indexedFeaturesExtents_[feature_uid];\n  if (extent) {\n    const rBush = this.rBush_;\n    const nodesToRemove = [];\n    rBush.forEachInExtent(extent, function(node) {\n      if (feature === node.feature) {\n        nodesToRemove.push(node);\n      }\n    });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      rBush.remove(nodesToRemove[i]);\n    }\n  }\n\n  if (unregister) {\n    unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n    delete this.featureChangeListenerKeys_[feature_uid];\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.setMap = function(map) {\n  const currentMap = this.getMap();\n  const keys = this.featuresListenerKeys_;\n  const features = this.getFeatures_();\n\n  if (currentMap) {\n    keys.forEach(unlistenByKey);\n    keys.length = 0;\n    features.forEach(this.forEachFeatureRemove_.bind(this));\n  }\n  PointerInteraction.prototype.setMap.call(this, map);\n\n  if (map) {\n    if (this.features_) {\n      keys.push(\n        listen(this.features_, CollectionEventType.ADD,\n          this.handleFeatureAdd_, this),\n        listen(this.features_, CollectionEventType.REMOVE,\n          this.handleFeatureRemove_, this)\n      );\n    } else if (this.source_) {\n      keys.push(\n        listen(this.source_, VectorEventType.ADDFEATURE,\n          this.handleFeatureAdd_, this),\n        listen(this.source_, VectorEventType.REMOVEFEATURE,\n          this.handleFeatureRemove_, this)\n      );\n    }\n    features.forEach(this.forEachFeatureAdd_.bind(this));\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nSnap.prototype.shouldStopEvent = FALSE;\n\n\n/**\n * @param {module:ol~Pixel} pixel Pixel\n * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n * @param {module:ol/PluggableMap} map Map.\n * @return {module:ol/interaction/Snap~Result} Snap result\n */\nSnap.prototype.snapTo = function(pixel, pixelCoordinate, map) {\n\n  const lowerLeft = map.getCoordinateFromPixel(\n    [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n  const upperRight = map.getCoordinateFromPixel(\n    [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n  const box = boundingExtent([lowerLeft, upperRight]);\n\n  let segments = this.rBush_.getInExtent(box);\n\n  // If snapping on vertices only, don't consider circles\n  if (this.vertex_ && !this.edge_) {\n    segments = segments.filter(function(segment) {\n      return segment.feature.getGeometry().getType() !==\n          GeometryType.CIRCLE;\n    });\n  }\n\n  let snappedToVertex = false;\n  let snapped = false;\n  let vertex = null;\n  let vertexPixel = null;\n  let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n  if (segments.length > 0) {\n    this.pixelCoordinate_ = pixelCoordinate;\n    segments.sort(this.sortByDistance_);\n    const closestSegment = segments[0].segment;\n    const isCircle = segments[0].feature.getGeometry().getType() ===\n        GeometryType.CIRCLE;\n    if (this.vertex_ && !this.edge_) {\n      pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      snappedToVertex = dist <= this.pixelTolerance_;\n      if (snappedToVertex) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n      } else {\n        vertex = closestOnSegment(pixelCoordinate, closestSegment);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          snappedToVertex = dist <= this.pixelTolerance_;\n          if (snappedToVertex) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n  }\n  return (\n    /** @type {module:ol/interaction/Snap~Result} */ ({\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    })\n  );\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @private\n */\nSnap.prototype.updateFeature_ = function(feature) {\n  this.removeFeature(feature, false);\n  this.addFeature(feature, false);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @private\n */\nSnap.prototype.writeCircleGeometry_ = function(feature, geometry) {\n  const polygon = fromCircle(geometry);\n  const coordinates = polygon.getCoordinates()[0];\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @private\n */\nSnap.prototype.writeGeometryCollectionGeometry_ = function(feature, geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0; i < geometries.length; ++i) {\n    const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n    if (segmentWriter) {\n      segmentWriter.call(this, feature, geometries[i]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeLineStringGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n    const segment = coordinates.slice(i, i + 2);\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: segment\n    });\n    this.rBush_.insert(boundingExtent(segment), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiLineStringGeometry_ = function(feature, geometry) {\n  const lines = geometry.getCoordinates();\n  for (let j = 0, jj = lines.length; j < jj; ++j) {\n    const coordinates = lines[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPointGeometry_ = function(feature, geometry) {\n  const points = geometry.getCoordinates();\n  for (let i = 0, ii = points.length; i < ii; ++i) {\n    const coordinates = points[i];\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writeMultiPolygonGeometry_ = function(feature, geometry) {\n  const polygons = geometry.getCoordinates();\n  for (let k = 0, kk = polygons.length; k < kk; ++k) {\n    const rings = polygons[k];\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Point} geometry Geometry.\n * @private\n */\nSnap.prototype.writePointGeometry_ = function(feature, geometry) {\n  const coordinates = geometry.getCoordinates();\n  const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n    feature: feature,\n    segment: [coordinates, coordinates]\n  });\n  this.rBush_.insert(geometry.getExtent(), segmentData);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @private\n */\nSnap.prototype.writePolygonGeometry_ = function(feature, geometry) {\n  const rings = geometry.getCoordinates();\n  for (let j = 0, jj = rings.length; j < jj; ++j) {\n    const coordinates = rings[j];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n};\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport {inherits} from '../util.js';\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport InteractionProperty from '../interaction/Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/interaction/Translate~TranslateEventType} type Type.\n * @param {module:ol/Collection.<module:ol/Feature>} features The features translated.\n * @param {module:ol/coordinate~Coordinate} coordinate The event coordinate.\n */\nexport const TranslateEvent = function(type, features, coordinate) {\n\n  Event.call(this, type);\n\n  /**\n   * The features being translated.\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @api\n   */\n  this.features = features;\n\n  /**\n   * The coordinate of the drag event.\n   * @const\n   * @type {module:ol/coordinate~Coordinate}\n   * @api\n   */\n  this.coordinate = coordinate;\n};\n\ninherits(TranslateEvent, Event);\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @constructor\n * @extends {module:ol/interaction/Pointer}\n * @fires module:ol/interaction/Translate~TranslateEvent\n * @param {module:ol/interaction/Translate~Options=} opt_options Options.\n * @api\n */\nconst Translate = function(opt_options) {\n  PointerInteraction.call(this, {\n    handleDownEvent: handleDownEvent,\n    handleDragEvent: handleDragEvent,\n    handleMoveEvent: handleMoveEvent,\n    handleUpEvent: handleUpEvent\n  });\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * The last position we translated to.\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.lastCoordinate_ = null;\n\n\n  /**\n   * @type {module:ol/Collection.<module:ol/Feature>}\n   * @private\n   */\n  this.features_ = options.features !== undefined ? options.features : null;\n\n  /** @type {function(module:ol/layer/Layer): boolean} */\n  let layerFilter;\n  if (options.layers) {\n    if (typeof options.layers === 'function') {\n      layerFilter = options.layers;\n    } else {\n      const layers = options.layers;\n      layerFilter = function(layer) {\n        return includes(layers, layer);\n      };\n    }\n  } else {\n    layerFilter = TRUE;\n  }\n\n  /**\n   * @private\n   * @type {function(module:ol/layer/Layer): boolean}\n   */\n  this.layerFilter_ = layerFilter;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n  /**\n   * @type {module:ol/Feature}\n   * @private\n   */\n  this.lastFeature_ = null;\n\n  listen(this,\n    getChangeEventType(InteractionProperty.ACTIVE),\n    this.handleActiveChanged_, this);\n\n};\n\ninherits(Translate, PointerInteraction);\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDownEvent(event) {\n  this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n  if (!this.lastCoordinate_ && this.lastFeature_) {\n    this.lastCoordinate_ = event.coordinate;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATESTART, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Translate}\n */\nfunction handleUpEvent(event) {\n  if (this.lastCoordinate_) {\n    this.lastCoordinate_ = null;\n    handleMoveEvent.call(this, event);\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATEEND, features,\n        event.coordinate));\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleDragEvent(event) {\n  if (this.lastCoordinate_) {\n    const newCoordinate = event.coordinate;\n    const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n    const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n    const features = this.features_ || new Collection([this.lastFeature_]);\n\n    features.forEach(function(feature) {\n      const geom = feature.getGeometry();\n      geom.translate(deltaX, deltaY);\n      feature.setGeometry(geom);\n    });\n\n    this.lastCoordinate_ = newCoordinate;\n    this.dispatchEvent(\n      new TranslateEvent(\n        TranslateEventType.TRANSLATING, features,\n        newCoordinate));\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserEvent} event Event.\n * @this {module:ol/interaction/Translate}\n */\nfunction handleMoveEvent(event) {\n  const elem = event.map.getViewport();\n\n  // Change the cursor to grab/grabbing if hovering any of the features managed\n  // by the interaction\n  if (this.featuresAtPixel_(event.pixel, event.map)) {\n    elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n    elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n  } else {\n    elem.classList.remove('ol-grab', 'ol-grabbing');\n  }\n}\n\n\n/**\n * Tests to see if the given coordinates intersects any of our selected\n * features.\n * @param {module:ol~Pixel} pixel Pixel coordinate to test for intersection.\n * @param {module:ol/PluggableMap} map Map to test the intersection on.\n * @return {module:ol/Feature} Returns the feature found at the specified pixel\n * coordinates.\n * @private\n */\nTranslate.prototype.featuresAtPixel_ = function(pixel, map) {\n  return map.forEachFeatureAtPixel(pixel,\n    function(feature) {\n      if (!this.features_ || includes(this.features_.getArray(), feature)) {\n        return feature;\n      }\n    }.bind(this), {\n      layerFilter: this.layerFilter_,\n      hitTolerance: this.hitTolerance_\n    });\n};\n\n\n/**\n * Returns the Hit-detection tolerance.\n * @returns {number} Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.getHitTolerance = function() {\n  return this.hitTolerance_;\n};\n\n\n/**\n * Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features. This only works for the canvas renderer and\n * not for WebGL.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @api\n */\nTranslate.prototype.setHitTolerance = function(hitTolerance) {\n  this.hitTolerance_ = hitTolerance;\n};\n\n\n/**\n * @inheritDoc\n */\nTranslate.prototype.setMap = function(map) {\n  const oldMap = this.getMap();\n  PointerInteraction.prototype.setMap.call(this, map);\n  this.updateState_(oldMap);\n};\n\n\n/**\n * @private\n */\nTranslate.prototype.handleActiveChanged_ = function() {\n  this.updateState_(null);\n};\n\n\n/**\n * @param {module:ol/PluggableMap} oldMap Old map.\n * @private\n */\nTranslate.prototype.updateState_ = function(oldMap) {\n  let map = this.getMap();\n  const active = this.getActive();\n  if (!map || !active) {\n    map = map || oldMap;\n    if (map) {\n      const elem = map.getViewport();\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n};\n\n\nexport default Translate;\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection.<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/ImageBase\n */\nimport {inherits} from './util.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number|undefined} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/ImageState} state State.\n */\nconst ImageBase = function(extent, resolution, pixelRatio, state) {\n\n  EventTarget.call(this);\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent = extent;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number|undefined}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @protected\n   * @type {module:ol/ImageState}\n   */\n  this.state = state;\n\n};\n\ninherits(ImageBase, EventTarget);\n\n\n/**\n * @protected\n */\nImageBase.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {module:ol/extent~Extent} Extent.\n */\nImageBase.prototype.getExtent = function() {\n  return this.extent;\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|Image|HTMLVideoElement} Image.\n */\nImageBase.prototype.getImage = function() {};\n\n\n/**\n * @return {number} PixelRatio.\n */\nImageBase.prototype.getPixelRatio = function() {\n  return this.pixelRatio_;\n};\n\n\n/**\n * @return {number} Resolution.\n */\nImageBase.prototype.getResolution = function() {\n  return /** @type {number} */ (this.resolution);\n};\n\n\n/**\n * @return {module:ol/ImageState} State.\n */\nImageBase.prototype.getState = function() {\n  return this.state;\n};\n\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageBase.prototype.load = function() {};\n\nexport default ImageBase;\n","/**\n * @module ol/ImageCanvas\n */\nimport {inherits} from './util.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\n/**\n * @constructor\n * @extends {module:ol/ImageBase}\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {module:ol/ImageCanvas~Loader=} opt_loader Optional loader function to\n *     support asynchronous canvas drawing.\n */\nconst ImageCanvas = function(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n  /**\n   * Optional canvas loader function.\n   * @type {?module:ol/ImageCanvas~Loader}\n   * @private\n   */\n  this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n  const state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n  ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = canvas;\n\n  /**\n   * @private\n   * @type {Error}\n   */\n  this.error_ = null;\n\n};\n\ninherits(ImageCanvas, ImageBase);\n\n\n/**\n * Get any error associated with asynchronous rendering.\n * @return {Error} Any error that occurred during rendering.\n */\nImageCanvas.prototype.getError = function() {\n  return this.error_;\n};\n\n\n/**\n * Handle async drawing complete.\n * @param {Error} err Any error during drawing.\n * @private\n */\nImageCanvas.prototype.handleLoad_ = function(err) {\n  if (err) {\n    this.error_ = err;\n    this.state = ImageState.ERROR;\n  } else {\n    this.state = ImageState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nImageCanvas.prototype.load = function() {\n  if (this.state == ImageState.IDLE) {\n    this.state = ImageState.LOADING;\n    this.changed();\n    this.loader_(this.handleLoad_.bind(this));\n  }\n};\n\n\n/**\n * @return {HTMLCanvasElement} Canvas element.\n */\nImageCanvas.prototype.getImage = function() {\n  return this.canvas_;\n};\nexport default ImageCanvas;\n","/**\n * @module ol/render/Event\n */\nimport {inherits} from '../util.js';\nimport Event from '../events/Event.js';\n\n/**\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {module:ol/render/EventType} type Type.\n * @param {module:ol/render/VectorContext=} opt_vectorContext Vector context.\n * @param {module:ol/PluggableMap~FrameState=} opt_frameState Frame state.\n * @param {?CanvasRenderingContext2D=} opt_context Context.\n * @param {?module:ol/webgl/Context=} opt_glContext WebGL Context.\n */\nconst RenderEvent = function(\n  type, opt_vectorContext, opt_frameState, opt_context,\n  opt_glContext) {\n\n  Event.call(this, type);\n\n  /**\n   * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n   * @type {module:ol/render/VectorContext|undefined}\n   * @api\n   */\n  this.vectorContext = opt_vectorContext;\n\n  /**\n   * An object representing the current render frame state.\n   * @type {module:ol/PluggableMap~FrameState|undefined}\n   * @api\n   */\n  this.frameState = opt_frameState;\n\n  /**\n   * Canvas context. Only available when a Canvas renderer is used, null\n   * otherwise.\n   * @type {CanvasRenderingContext2D|null|undefined}\n   * @api\n   */\n  this.context = opt_context;\n\n  /**\n   * WebGL context. Only available when a WebGL renderer is used, null\n   * otherwise.\n   * @type {module:ol/webgl/Context|null|undefined}\n   * @api\n   */\n  this.glContext = opt_glContext;\n\n};\n\ninherits(RenderEvent, Event);\nexport default RenderEvent;\n","/**\n * @module ol/render/VectorContext\n */\n/**\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @constructor\n * @abstract\n * @struct\n * @api\n */\nconst VectorContext = function() {\n};\n\n\n/**\n * Render a geometry with a custom renderer.\n *\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {Function} renderer Renderer.\n */\nVectorContext.prototype.drawCustom = function(geometry, feature, renderer) {};\n\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function(geometry) {};\n\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function(style) {};\n\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function(circleGeometry, feature) {};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function(feature, style) {};\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry\n *     collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function(geometryCollectionGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function(lineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function(multiPointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function(pointGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function(polygonGeometry, feature) {};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function(geometry, feature) {};\n\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {};\n\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function(imageStyle, opt_declutterGroup) {};\n\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function(textStyle, opt_declutterGroup) {};\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {inherits} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n *\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @struct\n */\nconst CanvasImmediateRenderer = function(context, pixelRatio, extent, transform, viewRotation) {\n  VectorContext.call(this);\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = context;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = transform;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = viewRotation;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.contextFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.contextStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.contextTextState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.fillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.strokeState_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageAnchorY_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageHeight_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOpacity_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageOriginY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageScale_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.imageSnapToPixel_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.imageWidth_ = 0;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.textRotateWithView_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textScale_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~TextState}\n   */\n  this.textState_ = null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpLocalTransform_ = createTransform();\n\n};\n\ninherits(CanvasImmediateRenderer, VectorContext);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawImages_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.image_) {\n    return;\n  }\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, 2, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  const localTransform = this.tmpLocalTransform_;\n  const alpha = context.globalAlpha;\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha * this.imageOpacity_;\n  }\n  let rotation = this.imageRotation_;\n  if (this.imageRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n    let x = pixelCoordinates[i] - this.imageAnchorX_;\n    let y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n    if (this.imageSnapToPixel_) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      const centerX = x + this.imageAnchorX_;\n      const centerY = y + this.imageAnchorY_;\n      composeTransform(localTransform,\n        centerX, centerY,\n        this.imageScale_, this.imageScale_,\n        rotation,\n        -centerX, -centerY);\n      context.setTransform.apply(context, localTransform);\n    }\n    context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n      this.imageWidth_, this.imageHeight_, x, y,\n      this.imageWidth_, this.imageHeight_);\n  }\n  if (rotation !== 0 || this.imageScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n  if (this.imageOpacity_ != 1) {\n    context.globalAlpha = alpha;\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n */\nCanvasImmediateRenderer.prototype.drawText_ = function(flatCoordinates, offset, end, stride) {\n  if (!this.textState_ || this.text_ === '') {\n    return;\n  }\n  if (this.textFillState_) {\n    this.setContextFillState_(this.textFillState_);\n  }\n  if (this.textStrokeState_) {\n    this.setContextStrokeState_(this.textStrokeState_);\n  }\n  this.setContextTextState_(this.textState_);\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  const context = this.context_;\n  let rotation = this.textRotation_;\n  if (this.textRotateWithView_) {\n    rotation += this.viewRotation_;\n  }\n  for (; offset < end; offset += stride) {\n    const x = pixelCoordinates[offset] + this.textOffsetX_;\n    const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n    if (rotation !== 0 || this.textScale_ != 1) {\n      const localTransform = composeTransform(this.tmpLocalTransform_,\n        x, y,\n        this.textScale_, this.textScale_,\n        rotation,\n        -x, -y);\n      context.setTransform.apply(context, localTransform);\n    }\n    if (this.textStrokeState_) {\n      context.strokeText(this.text_, x, y);\n    }\n    if (this.textFillState_) {\n      context.fillText(this.text_, x, y);\n    }\n  }\n  if (rotation !== 0 || this.textScale_ != 1) {\n    context.setTransform(1, 0, 0, 1, 0, 0);\n  }\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} close Close.\n * @private\n * @return {number} end End.\n */\nCanvasImmediateRenderer.prototype.moveToLineTo_ = function(flatCoordinates, offset, end, stride, close) {\n  const context = this.context_;\n  const pixelCoordinates = transform2D(\n    flatCoordinates, offset, end, stride, this.transform_,\n    this.pixelCoordinates_);\n  context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n  let length = pixelCoordinates.length;\n  if (close) {\n    length -= 2;\n  }\n  for (let i = 2; i < length; i += 2) {\n    context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n  }\n  if (close) {\n    context.closePath();\n  }\n  return end;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasImmediateRenderer.prototype.drawRings_ = function(flatCoordinates, offset, ends, stride) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n  }\n  return offset;\n};\n\n\n/**\n * Render a circle geometry into the canvas.  Rendering is immediate and uses\n * the current fill and stroke styles.\n *\n * @param {module:ol/geom/Circle} geometry Circle geometry.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawCircle = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.fillState_ || this.strokeState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const pixelCoordinates = transformGeom2D(\n      geometry, this.transform_, this.pixelCoordinates_);\n    const dx = pixelCoordinates[2] - pixelCoordinates[0];\n    const dy = pixelCoordinates[3] - pixelCoordinates[1];\n    const radius = Math.sqrt(dx * dx + dy * dy);\n    const context = this.context_;\n    context.beginPath();\n    context.arc(\n      pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    this.drawText_(geometry.getCenter(), 0, 2, 2);\n  }\n};\n\n\n/**\n * Set the rendering style.  Note that since this is an immediate rendering API,\n * any `zIndex` on the provided style will be ignored.\n *\n * @param {module:ol/style/Style} style The rendering style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.setStyle = function(style) {\n  this.setFillStrokeStyle(style.getFill(), style.getStroke());\n  this.setImageStyle(style.getImage());\n  this.setTextStyle(style.getText());\n};\n\n\n/**\n * Render a geometry into the canvas.  Call\n * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n *\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawGeometry = function(geometry) {\n  const type = geometry.getType();\n  switch (type) {\n    case GeometryType.POINT:\n      this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n      break;\n    case GeometryType.LINE_STRING:\n      this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n      break;\n    case GeometryType.POLYGON:\n      this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n      break;\n    case GeometryType.MULTI_POINT:\n      this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n      break;\n    case GeometryType.MULTI_LINE_STRING:\n      this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n      break;\n    case GeometryType.MULTI_POLYGON:\n      this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n      break;\n    case GeometryType.GEOMETRY_COLLECTION:\n      this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n      break;\n    case GeometryType.CIRCLE:\n      this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n      break;\n    default:\n  }\n};\n\n\n/**\n * Render a feature into the canvas.  Note that any `zIndex` on the provided\n * style will be ignored - features are rendered immediately in the order that\n * this method is called.  If you need `zIndex` support, you should be using an\n * {@link module:ol/layer/Vector~VectorLayer} instead.\n *\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @override\n * @api\n */\nCanvasImmediateRenderer.prototype.drawFeature = function(feature, style) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  this.setStyle(style);\n  this.drawGeometry(geometry);\n};\n\n\n/**\n * Render a GeometryCollection to the canvas.  Rendering is immediate and\n * uses the current styles appropriate for each geometry in the collection.\n *\n * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawGeometryCollection = function(geometry) {\n  const geometries = geometry.getGeometriesArray();\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    this.drawGeometry(geometries[i]);\n  }\n};\n\n\n/**\n * Render a Point geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n * uses the current style.\n *\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPoint = function(geometry) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const stride = geometry.getStride();\n  if (this.image_) {\n    this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n  if (this.text_ !== '') {\n    this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n  }\n};\n\n\n/**\n * Render a LineString into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawLineString = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    context.beginPath();\n    this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n      geometry.getStride(), false);\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoint = geometry.getFlatMidpoint();\n    this.drawText_(flatMidpoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n * and uses the current style.\n *\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiLineString = function(geometry) {\n  const geometryExtent = geometry.getExtent();\n  if (!intersects(this.extent_, geometryExtent)) {\n    return;\n  }\n  if (this.strokeState_) {\n    this.setContextStrokeState_(this.strokeState_);\n    const context = this.context_;\n    const flatCoordinates = geometry.getFlatCoordinates();\n    let offset = 0;\n    const ends = geometry.getEnds();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n    }\n    context.stroke();\n  }\n  if (this.text_ !== '') {\n    const flatMidpoints = geometry.getFlatMidpoints();\n    this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n  }\n};\n\n\n/**\n * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n * the current style.\n *\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    context.beginPath();\n    this.drawRings_(geometry.getOrientedFlatCoordinates(),\n      0, geometry.getEnds(), geometry.getStride());\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoint = geometry.getFlatInteriorPoint();\n    this.drawText_(flatInteriorPoint, 0, 2, 2);\n  }\n};\n\n\n/**\n * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n * uses the current style.\n * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n * @override\n */\nCanvasImmediateRenderer.prototype.drawMultiPolygon = function(geometry) {\n  if (!intersects(this.extent_, geometry.getExtent())) {\n    return;\n  }\n  if (this.strokeState_ || this.fillState_) {\n    if (this.fillState_) {\n      this.setContextFillState_(this.fillState_);\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n    }\n    const context = this.context_;\n    const flatCoordinates = geometry.getOrientedFlatCoordinates();\n    let offset = 0;\n    const endss = geometry.getEndss();\n    const stride = geometry.getStride();\n    context.beginPath();\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i];\n      offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n    }\n    if (this.fillState_) {\n      context.fill();\n    }\n    if (this.strokeState_) {\n      context.stroke();\n    }\n  }\n  if (this.text_ !== '') {\n    const flatInteriorPoints = geometry.getFlatInteriorPoints();\n    this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillState} fillState Fill state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextFillState_ = function(fillState) {\n  const context = this.context_;\n  const contextFillState = this.contextFillState_;\n  if (!contextFillState) {\n    context.fillStyle = fillState.fillStyle;\n    this.contextFillState_ = {\n      fillStyle: fillState.fillStyle\n    };\n  } else {\n    if (contextFillState.fillStyle != fillState.fillStyle) {\n      contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextStrokeState_ = function(strokeState) {\n  const context = this.context_;\n  const contextStrokeState = this.contextStrokeState_;\n  if (!contextStrokeState) {\n    context.lineCap = strokeState.lineCap;\n    if (CANVAS_LINE_DASH) {\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n    }\n    context.lineJoin = strokeState.lineJoin;\n    context.lineWidth = strokeState.lineWidth;\n    context.miterLimit = strokeState.miterLimit;\n    context.strokeStyle = strokeState.strokeStyle;\n    this.contextStrokeState_ = {\n      lineCap: strokeState.lineCap,\n      lineDash: strokeState.lineDash,\n      lineDashOffset: strokeState.lineDashOffset,\n      lineJoin: strokeState.lineJoin,\n      lineWidth: strokeState.lineWidth,\n      miterLimit: strokeState.miterLimit,\n      strokeStyle: strokeState.strokeStyle\n    };\n  } else {\n    if (contextStrokeState.lineCap != strokeState.lineCap) {\n      contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n    }\n    if (CANVAS_LINE_DASH) {\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = context.lineDashOffset =\n            strokeState.lineDashOffset;\n      }\n    }\n    if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n      contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n    }\n    if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n      contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n    }\n    if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n      contextStrokeState.miterLimit = context.miterLimit =\n          strokeState.miterLimit;\n    }\n    if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n      contextStrokeState.strokeStyle = context.strokeStyle =\n          strokeState.strokeStyle;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~TextState} textState Text state.\n * @private\n */\nCanvasImmediateRenderer.prototype.setContextTextState_ = function(textState) {\n  const context = this.context_;\n  const contextTextState = this.contextTextState_;\n  const textAlign = textState.textAlign ?\n    textState.textAlign : defaultTextAlign;\n  if (!contextTextState) {\n    context.font = textState.font;\n    context.textAlign = textAlign;\n    context.textBaseline = textState.textBaseline;\n    this.contextTextState_ = {\n      font: textState.font,\n      textAlign: textAlign,\n      textBaseline: textState.textBaseline\n    };\n  } else {\n    if (contextTextState.font != textState.font) {\n      contextTextState.font = context.font = textState.font;\n    }\n    if (contextTextState.textAlign != textAlign) {\n      contextTextState.textAlign = context.textAlign = textAlign;\n    }\n    if (contextTextState.textBaseline != textState.textBaseline) {\n      contextTextState.textBaseline = context.textBaseline =\n          textState.textBaseline;\n    }\n  }\n};\n\n\n/**\n * Set the fill and stroke style for subsequent draw operations.  To clear\n * either fill or stroke styles, pass null for the appropriate parameter.\n *\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  if (!fillStyle) {\n    this.fillState_ = null;\n  } else {\n    const fillStyleColor = fillStyle.getColor();\n    this.fillState_ = {\n      fillStyle: asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle)\n    };\n  }\n  if (!strokeStyle) {\n    this.strokeState_ = null;\n  } else {\n    const strokeStyleColor = strokeStyle.getColor();\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    const strokeStyleWidth = strokeStyle.getWidth();\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    this.strokeState_ = {\n      lineCap: strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap,\n      lineDash: strokeStyleLineDash ?\n        strokeStyleLineDash : defaultLineDash,\n      lineDashOffset: strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset,\n      lineJoin: strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin,\n      lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth),\n      miterLimit: strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit,\n      strokeStyle: asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle)\n    };\n  }\n};\n\n\n/**\n * Set the image style for subsequent draw operations.  Pass null to remove\n * the image style.\n *\n * @param {module:ol/style/Image} imageStyle Image style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setImageStyle = function(imageStyle) {\n  if (!imageStyle) {\n    this.image_ = null;\n  } else {\n    const imageAnchor = imageStyle.getAnchor();\n    // FIXME pixel ratio\n    const imageImage = imageStyle.getImage(1);\n    const imageOrigin = imageStyle.getOrigin();\n    const imageSize = imageStyle.getSize();\n    this.imageAnchorX_ = imageAnchor[0];\n    this.imageAnchorY_ = imageAnchor[1];\n    this.imageHeight_ = imageSize[1];\n    this.image_ = imageImage;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n    this.imageSnapToPixel_ = imageStyle.getSnapToPixel();\n    this.imageWidth_ = imageSize[0];\n  }\n};\n\n\n/**\n * Set the text style for subsequent draw operations.  Pass null to\n * remove the text style.\n *\n * @param {module:ol/style/Text} textStyle Text style.\n * @override\n */\nCanvasImmediateRenderer.prototype.setTextStyle = function(textStyle) {\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      this.textFillState_ = null;\n    } else {\n      const textFillStyleColor = textFillStyle.getColor();\n      this.textFillState_ = {\n        fillStyle: asColorLike(textFillStyleColor ?\n          textFillStyleColor : defaultFillStyle)\n      };\n    }\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      this.textStrokeState_ = null;\n    } else {\n      const textStrokeStyleColor = textStrokeStyle.getColor();\n      const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n      const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n      const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n      const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n      const textStrokeStyleWidth = textStrokeStyle.getWidth();\n      const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n      this.textStrokeState_ = {\n        lineCap: textStrokeStyleLineCap !== undefined ?\n          textStrokeStyleLineCap : defaultLineCap,\n        lineDash: textStrokeStyleLineDash ?\n          textStrokeStyleLineDash : defaultLineDash,\n        lineDashOffset: textStrokeStyleLineDashOffset ?\n          textStrokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: textStrokeStyleLineJoin !== undefined ?\n          textStrokeStyleLineJoin : defaultLineJoin,\n        lineWidth: textStrokeStyleWidth !== undefined ?\n          textStrokeStyleWidth : defaultLineWidth,\n        miterLimit: textStrokeStyleMiterLimit !== undefined ?\n          textStrokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : defaultStrokeStyle)\n      };\n    }\n    const textFont = textStyle.getFont();\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    const textScale = textStyle.getScale();\n    const textText = textStyle.getText();\n    const textTextAlign = textStyle.getTextAlign();\n    const textTextBaseline = textStyle.getTextBaseline();\n    this.textState_ = {\n      font: textFont !== undefined ?\n        textFont : defaultFont,\n      textAlign: textTextAlign !== undefined ?\n        textTextAlign : defaultTextAlign,\n      textBaseline: textTextBaseline !== undefined ?\n        textTextBaseline : defaultTextBaseline\n    };\n    this.text_ = textText !== undefined ? textText : '';\n    this.textOffsetX_ =\n        textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n    this.textOffsetY_ =\n        textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n    this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n    this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n    this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n      textScale : 1);\n  }\n};\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n * @constructor\n */\nconst IconImageCache = function() {\n\n  /**\n   * @type {!Object.<string, module:ol/style/IconImage>}\n   * @private\n   */\n  this.cache_ = {};\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.cacheSize_ = 0;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxCacheSize_ = 32;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.clear = function() {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nIconImageCache.prototype.expire = function() {\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    let i = 0;\n    for (const key in this.cache_) {\n      const iconImage = this.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this.cache_[key];\n        --this.cacheSize_;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nIconImageCache.prototype.get = function(src, crossOrigin, color) {\n  const key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @param {module:ol/style/IconImage} iconImage Icon image.\n */\nIconImageCache.prototype.set = function(src, crossOrigin, color, iconImage) {\n  const key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n\n/**\n * Set the cache size of the icon cache. Default is `32`. Change this value when\n * your map uses more than 32 different icon images and you are not caching icon\n * styles on the application level.\n * @param {number} maxCacheSize Cache max size.\n * @api\n */\nIconImageCache.prototype.setSize = function(maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/renderer/Map\n */\nimport {getUid, inherits} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, UNDEFINED} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/Disposable}\n * @param {module:ol/PluggableMap} map Map.\n * @struct\n */\nconst MapRenderer = function(map) {\n  Disposable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/PluggableMap}\n   */\n  this.map_ = map;\n\n  /**\n   * @private\n   * @type {!Object.<string, module:ol/renderer/Layer>}\n   */\n  this.layerRenderers_ = {};\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/events~EventsKey>}\n   */\n  this.layerRendererListeners_ = {};\n\n  /**\n   * @private\n   * @type {Array.<module:ol/renderer/Layer>}\n   */\n  this.layerRendererConstructors_ = [];\n\n};\n\ninherits(MapRenderer, Disposable);\n\n\n/**\n * Register layer renderer constructors.\n * @param {Array.<module:ol/renderer/Layer>} constructors Layer renderers.\n */\nMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n};\n\n\n/**\n * Get the registered layer renderer constructors.\n * @return {Array.<module:ol/renderer/Layer>} Registered layer renderers.\n */\nMapRenderer.prototype.getLayerRendererConstructors = function() {\n  return this.layerRendererConstructors_;\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @protected\n */\nMapRenderer.prototype.calculateMatrices2D = function(frameState) {\n  const viewState = frameState.viewState;\n  const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n  const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n  composeTransform(coordinateToPixelTransform,\n    frameState.size[0] / 2, frameState.size[1] / 2,\n    1 / viewState.resolution, -1 / viewState.resolution,\n    -viewState.rotation,\n    -viewState.center[0], -viewState.center[1]);\n\n  invertTransform(\n    transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n};\n\n\n/**\n * Removes all layer renderers.\n */\nMapRenderer.prototype.removeLayerRenderers = function() {\n  for (const key in this.layerRenderers_) {\n    this.removeLayerRendererByKey_(key).dispose();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n *     module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {?} Callback result.\n   */\n  function forEachFeatureAtCoordinate(feature, layer) {\n    const key = getUid(feature).toString();\n    const managed = frameState.layerStates[getUid(layer)].managed;\n    if (!(key in frameState.skippedFeatureUids && !managed)) {\n      return callback.call(thisArg, feature, managed ? layer : null);\n    }\n  }\n\n  const projection = viewState.projection;\n\n  let translatedCoordinate = coordinate;\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n    const worldWidth = getWidth(projectionExtent);\n    const x = coordinate[0];\n    if (x < projectionExtent[0] || x > projectionExtent[2]) {\n      const worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n      translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n    }\n  }\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = this.getLayerRenderer(layer);\n      if (layer.getSource()) {\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n          frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n      }\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @abstract\n * @param {module:ol~Pixel} pixel Pixel.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n *     function, only layers which are visible and for which this function\n *     returns `true` will be tested for features.  By default, all visible\n *     layers will be tested.\n * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n * @return {boolean} Is there a feature at the given coordinate?\n * @template U\n */\nMapRenderer.prototype.hasFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(\n    coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n  return hasFeature !== undefined;\n};\n\n\n/**\n * @param {module:ol/layer/Layer} layer Layer.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRenderer = function(layer) {\n  const layerKey = getUid(layer).toString();\n  if (layerKey in this.layerRenderers_) {\n    return this.layerRenderers_[layerKey];\n  } else {\n    let renderer;\n    for (let i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n      const candidate = this.layerRendererConstructors_[i];\n      if (candidate['handles'](layer)) {\n        renderer = candidate['create'](this, layer);\n        break;\n      }\n    }\n    if (renderer) {\n      this.layerRenderers_[layerKey] = renderer;\n      this.layerRendererListeners_[layerKey] = listen(renderer,\n        EventType.CHANGE, this.handleLayerRendererChange_, this);\n    } else {\n      throw new Error('Unable to create renderer for layer: ' + layer.getType());\n    }\n    return renderer;\n  }\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @protected\n * @return {module:ol/renderer/Layer} Layer renderer.\n */\nMapRenderer.prototype.getLayerRendererByKey = function(layerKey) {\n  return this.layerRenderers_[layerKey];\n};\n\n\n/**\n * @protected\n * @return {Object.<string, module:ol/renderer/Layer>} Layer renderers.\n */\nMapRenderer.prototype.getLayerRenderers = function() {\n  return this.layerRenderers_;\n};\n\n\n/**\n * @return {module:ol/PluggableMap} Map.\n */\nMapRenderer.prototype.getMap = function() {\n  return this.map_;\n};\n\n\n/**\n * Handle changes in a layer renderer.\n * @private\n */\nMapRenderer.prototype.handleLayerRendererChange_ = function() {\n  this.map_.render();\n};\n\n\n/**\n * @param {string} layerKey Layer key.\n * @return {module:ol/renderer/Layer} Layer renderer.\n * @private\n */\nMapRenderer.prototype.removeLayerRendererByKey_ = function(layerKey) {\n  const layerRenderer = this.layerRenderers_[layerKey];\n  delete this.layerRenderers_[layerKey];\n\n  unlistenByKey(this.layerRendererListeners_[layerKey]);\n  delete this.layerRendererListeners_[layerKey];\n\n  return layerRenderer;\n};\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = UNDEFINED;\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nMapRenderer.prototype.removeUnusedLayerRenderers_ = function(map, frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!frameState || !(layerKey in frameState.layerStates)) {\n      this.removeLayerRendererByKey_(layerKey).dispose();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleExpireIconCache = function(frameState) {\n  frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n};\n\n\n/**\n * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n */\nMapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function(frameState) {\n  for (const layerKey in this.layerRenderers_) {\n    if (!(layerKey in frameState.layerStates)) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.removeUnusedLayerRenderers_.bind(this))\n      );\n      return;\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {inherits} from '../../util.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array.<module:ol/renderer/Layer>}\n */\nexport const layerRendererConstructors = [];\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/Map}\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nconst CanvasMapRenderer = function(map) {\n  MapRenderer.call(this, map);\n\n  const container = map.getViewport();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n\n  this.canvas_.style.width = '100%';\n  this.canvas_.style.height = '100%';\n  this.canvas_.style.display = 'block';\n  this.canvas_.className = CLASS_UNSELECTABLE;\n  container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderedVisible_ = true;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasMapRenderer, MapRenderer);\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @private\n */\nCanvasMapRenderer.prototype.dispatchComposeEvent_ = function(type, frameState) {\n  const map = this.getMap();\n  const context = this.context_;\n  if (map.hasListener(type)) {\n    const extent = frameState.extent;\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n\n    const transform = this.getTransform(frameState);\n\n    const vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n      extent, transform, rotation);\n    const composeEvent = new RenderEvent(type, vectorContext,\n      frameState, context, null);\n    map.dispatchEvent(composeEvent);\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasMapRenderer.prototype.getTransform = function(frameState) {\n  const viewState = frameState.viewState;\n  const dx1 = this.canvas_.width / 2;\n  const dy1 = this.canvas_.height / 2;\n  const sx = frameState.pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0];\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.renderFrame = function(frameState) {\n\n  if (!frameState) {\n    if (this.renderedVisible_) {\n      this.canvas_.style.display = 'none';\n      this.renderedVisible_ = false;\n    }\n    return;\n  }\n\n  const context = this.context_;\n  const pixelRatio = frameState.pixelRatio;\n  const width = Math.round(frameState.size[0] * pixelRatio);\n  const height = Math.round(frameState.size[1] * pixelRatio);\n  if (this.canvas_.width != width || this.canvas_.height != height) {\n    this.canvas_.width = width;\n    this.canvas_.height = height;\n  } else {\n    context.clearRect(0, 0, width, height);\n  }\n\n  const rotation = frameState.viewState.rotation;\n\n  this.calculateMatrices2D(frameState);\n\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, frameState);\n\n  const layerStatesArray = frameState.layerStatesArray;\n  stableSort(layerStatesArray, sortByZIndex);\n\n  if (rotation) {\n    context.save();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n\n  const viewResolution = frameState.viewState.resolution;\n  let i, ii, layer, layerRenderer, layerState;\n  for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n    layerState = layerStatesArray[i];\n    layer = layerState.layer;\n    layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n    if (!visibleAtResolution(layerState, viewResolution) ||\n        layerState.sourceState != SourceState.READY) {\n      continue;\n    }\n    if (layerRenderer.prepareFrame(frameState, layerState)) {\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n  }\n\n  if (rotation) {\n    context.restore();\n  }\n\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, frameState);\n\n  if (!this.renderedVisible_) {\n    this.canvas_.style.display = '';\n    this.renderedVisible_ = true;\n  }\n\n  this.scheduleRemoveUnusedLayerRenderers(frameState);\n  this.scheduleExpireIconCache(frameState);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.forEachLayerAtPixel = function(pixel, frameState, hitTolerance, callback, thisArg,\n  layerFilter, thisArg2) {\n  let result;\n  const viewState = frameState.viewState;\n  const viewResolution = viewState.resolution;\n\n  const layerStates = frameState.layerStatesArray;\n  const numLayers = layerStates.length;\n\n  const coordinate = applyTransform(\n    frameState.pixelToCoordinateTransform, pixel.slice());\n\n  let i;\n  for (i = numLayers - 1; i >= 0; --i) {\n    const layerState = layerStates[i];\n    const layer = layerState.layer;\n    if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n      const layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this.getLayerRenderer(layer));\n      result = layerRenderer.forEachLayerAtCoordinate(\n        coordinate, frameState, hitTolerance, callback, thisArg);\n      if (result) {\n        return result;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasMapRenderer.prototype.registerLayerRenderers = function(constructors) {\n  MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n  for (let i = 0, ii = constructors.length; i < ii; ++i) {\n    const ctor = constructors[i];\n    if (!includes(layerRendererConstructors, ctor)) {\n      layerRendererConstructors.push(ctor);\n    }\n  }\n};\n\nexport default CanvasMapRenderer;\n","/**\n * @module ol/renderer/Layer\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, UNDEFINED} from '../functions.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @constructor\n * @extends {module:ol/Observable}\n * @param {module:ol/layer/Layer} layer Layer.\n * @struct\n */\nconst LayerRenderer = function(layer) {\n\n  Observable.call(this);\n\n  /**\n   * @private\n   * @type {module:ol/layer/Layer}\n   */\n  this.layer_ = layer;\n\n\n};\n\ninherits(LayerRenderer, Observable);\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T}\n *     callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = UNDEFINED;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\n/**\n * Create a function that adds loaded tiles to the tile lookup.\n * @param {module:ol/source/Tile} source Tile source.\n * @param {module:ol/proj/Projection} projection Projection of the tiles.\n * @param {Object.<number, Object.<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n * @return {function(number, module:ol/TileRange):boolean} A function that can be\n *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n * @protected\n */\nLayerRenderer.prototype.createLoadedTileFinder = function(source, projection, tiles) {\n  return (\n    /**\n     * @param {number} zoom Zoom level.\n     * @param {module:ol/TileRange} tileRange Tile range.\n     * @return {boolean} The tile range is fully loaded.\n     */\n    function(zoom, tileRange) {\n      function callback(tile) {\n        if (!tiles[zoom]) {\n          tiles[zoom] = {};\n        }\n        tiles[zoom][tile.tileCoord.toString()] = tile;\n      }\n      return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n    }\n  );\n};\n\n\n/**\n * @return {module:ol/layer/Layer} Layer.\n */\nLayerRenderer.prototype.getLayer = function() {\n  return this.layer_;\n};\n\n\n/**\n * Handle changes in image state.\n * @param {module:ol/events/Event} event Image change event.\n * @private\n */\nLayerRenderer.prototype.handleImageChange_ = function(event) {\n  const image = /** @type {module:ol/Image} */ (event.target);\n  if (image.getState() === ImageState.LOADED) {\n    this.renderIfReadyAndVisible();\n  }\n};\n\n\n/**\n * Load the image if not already loaded, and register the image change\n * listener if needed.\n * @param {module:ol/ImageBase} image Image.\n * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n * @protected\n */\nLayerRenderer.prototype.loadImage = function(image) {\n  let imageState = image.getState();\n  if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n    listen(image, EventType.CHANGE, this.handleImageChange_, this);\n  }\n  if (imageState == ImageState.IDLE) {\n    image.load();\n    imageState = image.getState();\n  }\n  return imageState == ImageState.LOADED;\n};\n\n\n/**\n * @protected\n */\nLayerRenderer.prototype.renderIfReadyAndVisible = function() {\n  const layer = this.getLayer();\n  if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @protected\n */\nLayerRenderer.prototype.scheduleExpireCache = function(frameState, tileSource) {\n  if (tileSource.canExpireCache()) {\n    /**\n     * @param {module:ol/source/Tile} tileSource Tile source.\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n     */\n    const postRenderFunction = function(tileSource, map, frameState) {\n      const tileSourceKey = getUid(tileSource).toString();\n      if (tileSourceKey in frameState.usedTiles) {\n        tileSource.expireCache(frameState.viewState.projection,\n          frameState.usedTiles[tileSourceKey]);\n      }\n    }.bind(null, tileSource);\n\n    frameState.postRenderFunctions.push(\n      /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n    );\n  }\n};\n\n\n/**\n * @param {!Object.<string, !Object.<string, module:ol/TileRange>>} usedTiles Used tiles.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {number} z Z.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @protected\n */\nLayerRenderer.prototype.updateUsedTiles = function(usedTiles, tileSource, z, tileRange) {\n  // FIXME should we use tilesToDrawByZ instead?\n  const tileSourceKey = getUid(tileSource).toString();\n  const zKey = z.toString();\n  if (tileSourceKey in usedTiles) {\n    if (zKey in usedTiles[tileSourceKey]) {\n      usedTiles[tileSourceKey][zKey].extend(tileRange);\n    } else {\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  } else {\n    usedTiles[tileSourceKey] = {};\n    usedTiles[tileSourceKey][zKey] = tileRange;\n  }\n};\n\n\n/**\n * Manage tile pyramid.\n * This function performs a number of functions related to the tiles at the\n * current zoom and lower zoom levels:\n * - registers idle tiles in frameState.wantedTiles so that they are not\n *   discarded by the tile queue\n * - enqueues missing tiles\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/source/Tile} tileSource Tile source.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} currentZ Current Z.\n * @param {number} preload Load low resolution tiles up to 'preload' levels.\n * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n * @protected\n * @template T\n */\nLayerRenderer.prototype.manageTilePyramid = function(\n  frameState, tileSource, tileGrid, pixelRatio, projection, extent,\n  currentZ, preload, opt_tileCallback, opt_this) {\n  const tileSourceKey = getUid(tileSource).toString();\n  if (!(tileSourceKey in frameState.wantedTiles)) {\n    frameState.wantedTiles[tileSourceKey] = {};\n  }\n  const wantedTiles = frameState.wantedTiles[tileSourceKey];\n  const tileQueue = frameState.tileQueue;\n  const minZoom = tileGrid.getMinZoom();\n  let tile, tileRange, tileResolution, x, y, z;\n  for (z = minZoom; z <= currentZ; ++z) {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n    tileResolution = tileGrid.getResolution(z);\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (currentZ - z <= preload) {\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (tile.getState() == TileState.IDLE) {\n            wantedTiles[tile.getKey()] = true;\n            if (!tileQueue.isKeyQueued(tile.getKey())) {\n              tileQueue.enqueue([tile, tileSourceKey,\n                tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n            }\n          }\n          if (opt_tileCallback !== undefined) {\n            opt_tileCallback.call(opt_this, tile);\n          }\n        } else {\n          tileSource.useTile(z, x, y, projection);\n        }\n      }\n    }\n  }\n};\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {inherits} from '../../util.js';\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst CanvasLayerRenderer = function(layer) {\n\n  LayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedResolution;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.transform_ = createTransform();\n\n};\n\ninherits(CanvasLayerRenderer, LayerRenderer);\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/extent~Extent} extent Clip extent.\n * @protected\n */\nCanvasLayerRenderer.prototype.clip = function(context, frameState, extent) {\n  const pixelRatio = frameState.pixelRatio;\n  const width = frameState.size[0] * pixelRatio;\n  const height = frameState.size[1] * pixelRatio;\n  const rotation = frameState.viewState.rotation;\n  const topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n  const topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n  const bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n  applyTransform(frameState.coordinateToPixelTransform, topLeft);\n  applyTransform(frameState.coordinateToPixelTransform, topRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n  applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n  context.save();\n  rotateAtOffset(context, -rotation, width / 2, height / 2);\n  context.beginPath();\n  context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n  context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n  context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n  context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n  context.clip();\n  rotateAtOffset(context, rotation, width / 2, height / 2);\n};\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @private\n */\nCanvasLayerRenderer.prototype.dispatchComposeEvent_ = function(type, context, frameState, opt_transform) {\n  const layer = this.getLayer();\n  if (layer.hasListener(type)) {\n    const width = frameState.size[0] * frameState.pixelRatio;\n    const height = frameState.size[1] * frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    const transform = opt_transform !== undefined ?\n      opt_transform : this.getTransform(frameState, 0);\n    const render = new CanvasImmediateRenderer(\n      context, frameState.pixelRatio, frameState.extent, transform,\n      frameState.viewState.rotation);\n    const composeEvent = new RenderEvent(type, render, frameState,\n      context, null);\n    layer.dispatchEvent(composeEvent);\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n *     callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|undefined} Callback result.\n * @template S,T,U\n */\nCanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n  if (hasFeature) {\n    return callback.call(thisArg, this.getLayer(), null);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.postCompose = function(context, frameState, layerState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.preCompose = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/transform~Transform=} opt_transform Transform.\n * @protected\n */\nCanvasLayerRenderer.prototype.dispatchRenderEvent = function(context, frameState, opt_transform) {\n  this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n};\n\n\n/**\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} offsetX Offset on the x-axis in view coordinates.\n * @protected\n * @return {!module:ol/transform~Transform} Transform.\n */\nCanvasLayerRenderer.prototype.getTransform = function(frameState, offsetX) {\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const dx1 = pixelRatio * frameState.size[0] / 2;\n  const dy1 = pixelRatio * frameState.size[1] / 2;\n  const sx = pixelRatio / viewState.resolution;\n  const sy = -sx;\n  const angle = -viewState.rotation;\n  const dx2 = -viewState.center[0] + offsetX;\n  const dy2 = -viewState.center[1];\n  return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n};\n\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {};\n\n/**\n * @abstract\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @return {boolean} whether composeFrame should be called.\n */\nCanvasLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {};\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {inherits} from '../../util.js';\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {UNDEFINED} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @abstract\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Layer} layer Layer.\n */\nconst IntermediateCanvasRenderer = function(layer) {\n\n  CanvasLayerRenderer.call(this, layer);\n\n  /**\n   * @protected\n   * @type {module:ol/transform~Transform}\n   */\n  this.coordinateToCanvasPixelTransform = createTransform();\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitCanvasContext_ = null;\n\n};\n\ninherits(IntermediateCanvasRenderer, CanvasLayerRenderer);\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n\n  this.preCompose(context, frameState);\n\n  const image = this.getImage();\n  if (image) {\n\n    // clipped rendering if layer extent is set\n    const extent = layerState.extent;\n    const clipped = extent !== undefined &&\n        !containsExtent(extent, frameState.extent) &&\n        intersects(extent, frameState.extent);\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n    }\n\n    const imageTransform = this.getImageTransform();\n    // for performance reasons, context.save / context.restore is not used\n    // to save and restore the transformation matrix and the opacity.\n    // see http://jsperf.com/context-save-restore-versus-variable\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n\n    // for performance reasons, context.setTransform is only used\n    // when the view is rotated. see http://jsperf.com/canvas-transform\n    const dx = imageTransform[4];\n    const dy = imageTransform[5];\n    const dw = image.width * imageTransform[0];\n    const dh = image.height * imageTransform[3];\n    context.drawImage(image, 0, 0, +image.width, +image.height,\n      Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n    context.globalAlpha = alpha;\n\n    if (clipped) {\n      context.restore();\n    }\n  }\n\n  this.postCompose(context, frameState, layerState);\n};\n\n\n/**\n * @abstract\n * @return {HTMLCanvasElement|HTMLVideoElement|Image} Canvas.\n */\nIntermediateCanvasRenderer.prototype.getImage = function() {};\n\n\n/**\n * @abstract\n * @return {!module:ol/transform~Transform} Image transform.\n */\nIntermediateCanvasRenderer.prototype.getImageTransform = function() {};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const layer = this.getLayer();\n  const source = layer.getSource();\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  const skippedFeatureUids = frameState.skippedFeatureUids;\n  return source.forEachFeatureAtCoordinate(\n    coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function(feature) {\n      return callback.call(thisArg, feature, layer);\n    });\n};\n\n\n/**\n * @inheritDoc\n */\nIntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.getImage()) {\n    return undefined;\n  }\n\n  if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n    // for ImageCanvas sources use the original hit-detection logic,\n    // so that for example also transparent polygons are detected\n    return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.apply(this, arguments);\n  } else {\n    const pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n    scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n    if (!this.hitCanvasContext_) {\n      this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n    }\n\n    this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n    this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n    const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(),  imageData);\n    } else {\n      return undefined;\n    }\n  }\n};\n\nexport default IntermediateCanvasRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {inherits} from '../../util.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Image|module:ol/layer/Vector} imageLayer Image or vector layer.\n * @api\n */\nconst CanvasImageLayerRenderer = function(imageLayer) {\n\n  IntermediateCanvasRenderer.call(this, imageLayer);\n\n  /**\n   * @private\n   * @type {?module:ol/ImageBase}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @type {!Array.<string>}\n   */\n  this.skippedFeatures_ = [];\n\n  /**\n   * @private\n   * @type {module:ol/renderer/canvas/VectorLayer}\n   */\n  this.vectorRenderer_ = null;\n\n  if (imageLayer.getType() === LayerType.VECTOR) {\n    for (let i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n      const ctor = layerRendererConstructors[i];\n      if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n        this.vectorRenderer_ = new ctor(imageLayer);\n        break;\n      }\n    }\n  }\n\n};\n\ninherits(CanvasImageLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.disposeInternal = function() {\n  if (this.vectorRenderer_) {\n    this.vectorRenderer_.dispose();\n  }\n  IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImage = function() {\n  return !this.image_ ? null : this.image_.getImage();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const viewCenter = viewState.center;\n  const viewResolution = viewState.resolution;\n\n  let image;\n  const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n  const imageSource = imageLayer.getSource();\n\n  const hints = frameState.viewHints;\n\n  const vectorRenderer = this.vectorRenderer_;\n  let renderedExtent = frameState.extent;\n  if (!vectorRenderer && layerState.extent !== undefined) {\n    renderedExtent = getIntersection(renderedExtent, layerState.extent);\n  }\n\n  if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)) {\n    let projection = viewState.projection;\n    if (!ENABLE_RASTER_REPROJECTION) {\n      const sourceProjection = imageSource.getProjection();\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n    }\n    let skippedFeatures = this.skippedFeatures_;\n    if (vectorRenderer) {\n      const context = vectorRenderer.context;\n      const imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n        size: [\n          getWidth(renderedExtent) / viewResolution,\n          getHeight(renderedExtent) / viewResolution\n        ],\n        viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n          rotation: 0\n        }))\n      }));\n      const newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n      image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n        if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n            (vectorRenderer.replayGroupChanged ||\n            !equals(skippedFeatures, newSkippedFeatures))) {\n          context.canvas.width = imageFrameState.size[0] * pixelRatio;\n          context.canvas.height = imageFrameState.size[1] * pixelRatio;\n          vectorRenderer.compose(context, imageFrameState, layerState);\n          skippedFeatures = newSkippedFeatures;\n          callback();\n        }\n      });\n    } else {\n      image = imageSource.getImage(\n        renderedExtent, viewResolution, pixelRatio, projection);\n    }\n    if (image && this.loadImage(image)) {\n      this.image_ = image;\n      this.skippedFeatures_ = skippedFeatures;\n    }\n  }\n\n  if (this.image_) {\n    image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const scale = pixelRatio * imageResolution /\n        (viewResolution * imagePixelRatio);\n    const transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n  }\n\n  return !!this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (this.vectorRenderer_) {\n    return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n  } else {\n    return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n  }\n};\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n *\n * @constructor\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @struct\n */\nconst TileRange = function(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function(tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function(tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function(x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function(tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function(tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n\n/**\n * @return {number} Height.\n */\nTileRange.prototype.getHeight = function() {\n  return this.maxY - this.minY + 1;\n};\n\n\n/**\n * @return {module:ol/size~Size} Size.\n */\nTileRange.prototype.getSize = function() {\n  return [this.getWidth(), this.getHeight()];\n};\n\n\n/**\n * @return {number} Width.\n */\nTileRange.prototype.getWidth = function() {\n  return this.maxX - this.minX + 1;\n};\n\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Intersects.\n */\nTileRange.prototype.intersects = function(tileRange) {\n  return this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY;\n};\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/IntermediateCanvas}\n * @param {module:ol/layer/Tile|module:ol/layer/VectorTile} tileLayer Tile layer.\n * @api\n */\nconst CanvasTileLayerRenderer = function(tileLayer) {\n\n  IntermediateCanvasRenderer.call(this, tileLayer);\n\n  /**\n   * @protected\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = this.context === null ? null : createCanvasContext2D();\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.oversampling_;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = null;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.renderedRevision;\n\n  /**\n   * @protected\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.renderedTiles = [];\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.newTiles_ = false;\n\n  /**\n   * @protected\n   * @type {module:ol/extent~Extent}\n   */\n  this.tmpExtent = createEmpty();\n\n  /**\n   * @private\n   * @type {module:ol/TileRange}\n   */\n  this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.imageTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.zDirection = 0;\n\n};\n\ninherits(CanvasTileLayerRenderer, IntermediateCanvasRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @private\n * @param {module:ol/Tile} tile Tile.\n * @return {boolean} Tile is drawable.\n */\nCanvasTileLayerRenderer.prototype.isDrawableTile_ = function(tile) {\n  const tileState = tile.getState();\n  const useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n  return tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      tileState == TileState.ERROR && !useInterimTilesOnError;\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nCanvasTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n  let tile = source.getTile(z, x, y, pixelRatio, projection);\n  if (tile.getState() == TileState.ERROR) {\n    if (!layer.getUseInterimTilesOnError()) {\n      // When useInterimTilesOnError is false, we consider the error tile as loaded.\n      tile.setState(TileState.LOADED);\n    } else if (layer.getPreload() > 0) {\n      // Preloaded tiles for lower resolutions might have finished loading.\n      this.newTiles_ = true;\n    }\n  }\n  if (!this.isDrawableTile_(tile)) {\n    tile = tile.getInterimTile();\n  }\n  return tile;\n};\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n\n  const pixelRatio = frameState.pixelRatio;\n  const size = frameState.size;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const viewResolution = viewState.resolution;\n  const viewCenter = viewState.center;\n\n  const tileLayer = this.getLayer();\n  const tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n  const sourceRevision = tileSource.getRevision();\n  const tileGrid = tileSource.getTileGridForProjection(projection);\n  const z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n  const tileResolution = tileGrid.getResolution(z);\n  let oversampling = Math.round(viewResolution / tileResolution) || 1;\n  let extent = frameState.extent;\n\n  if (layerState.extent !== undefined) {\n    extent = getIntersection(extent, layerState.extent);\n  }\n  if (isEmpty(extent)) {\n    // Return false to prevent the rendering of the layer.\n    return false;\n  }\n\n  const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  const imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n  const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n  /**\n   * @type {Object.<number, Object.<string, module:ol/Tile>>}\n   */\n  const tilesToDrawByZ = {};\n  tilesToDrawByZ[z] = {};\n\n  const findLoadedTiles = this.createLoadedTileFinder(\n    tileSource, projection, tilesToDrawByZ);\n\n  const hints = frameState.viewHints;\n  const animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n  const tmpExtent = this.tmpExtent;\n  const tmpTileRange = this.tmpTileRange_;\n  this.newTiles_ = false;\n  let tile, x, y;\n  for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n        continue;\n      }\n      tile = this.getTile(z, x, y, pixelRatio, projection);\n      if (this.isDrawableTile_(tile)) {\n        const uid = getUid(this);\n        if (tile.getState() == TileState.LOADED) {\n          tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n          const inTransition = tile.inTransition(uid);\n          if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n            this.newTiles_ = true;\n          }\n        }\n        if (tile.getAlpha(uid, frameState.time) === 1) {\n          // don't look for alt tiles if alpha is 1\n          continue;\n        }\n      }\n\n      const childTileRange = tileGrid.getTileCoordChildTileRange(\n        tile.tileCoord, tmpTileRange, tmpExtent);\n      let covered = false;\n      if (childTileRange) {\n        covered = findLoadedTiles(z + 1, childTileRange);\n      }\n      if (!covered) {\n        tileGrid.forEachTileCoordParentTileRange(\n          tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n      }\n\n    }\n  }\n\n  const renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n  if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n    this.newTiles_ ||\n        !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n        this.renderedRevision != sourceRevision ||\n        oversampling != this.oversampling_ ||\n        !animatingOrInteracting && renderedResolution != this.renderedResolution\n  )) {\n\n    const context = this.context;\n    if (context) {\n      const tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n      const width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n      const height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n      const canvas = context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        this.oversampling_ = oversampling;\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n          context.clearRect(0, 0, width, height);\n        }\n        oversampling = this.oversampling_;\n      }\n    }\n\n    this.renderedTiles.length = 0;\n    /** @type {Array.<number>} */\n    const zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(function(a, b) {\n      if (a === z) {\n        return 1;\n      } else if (b === z) {\n        return -1;\n      } else {\n        return a > b ? 1 : a < b ? -1 : 0;\n      }\n    });\n    let currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n    let tileExtent, tileGutter, tilesToDraw, w, h;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      currentZ = zs[i];\n      currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      currentResolution = tileGrid.getResolution(currentZ);\n      currentScale = currentResolution / tileResolution;\n      tileGutter = tilePixelRatio * tileSource.getGutter(projection);\n      tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        tile = tilesToDraw[tileCoordKey];\n        tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n        x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n        y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n        w = currentTilePixelSize[0] * currentScale / oversampling;\n        h = currentTilePixelSize[1] * currentScale / oversampling;\n        this.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n        this.renderedTiles.push(tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    this.renderedExtent_ = imageExtent;\n  }\n\n  const scale = this.renderedResolution / viewResolution;\n  const transform = composeTransform(this.imageTransform_,\n    pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n    scale, scale,\n    0,\n    (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n    (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n  composeTransform(this.coordinateToCanvasPixelTransform,\n    pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n    pixelRatio / viewResolution, -pixelRatio / viewResolution,\n    0,\n    -viewCenter[0], -viewCenter[1]);\n\n\n  this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n  this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n    projection, extent, z, tileLayer.getPreload());\n  this.scheduleExpireCache(frameState, tileSource);\n\n  return this.renderedTiles.length > 0;\n};\n\n\n/**\n * @param {module:ol/Tile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} x Left of the tile.\n * @param {number} y Top of the tile.\n * @param {number} w Width of the tile.\n * @param {number} h Height of the tile.\n * @param {number} gutter Tile gutter.\n * @param {boolean} transition Apply an alpha transition.\n */\nCanvasTileLayerRenderer.prototype.drawTileImage = function(tile, frameState, layerState, x, y, w, h, gutter, transition) {\n  const image = tile.getImage(this.getLayer());\n  if (!image) {\n    return;\n  }\n  const uid = getUid(this);\n  const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n  if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n    this.context.clearRect(x, y, w, h);\n  }\n  const alphaChanged = alpha !== this.context.globalAlpha;\n  if (alphaChanged) {\n    this.context.save();\n    this.context.globalAlpha = alpha;\n  }\n  this.context.drawImage(image, gutter, gutter,\n    image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n  if (alphaChanged) {\n    this.context.restore();\n  }\n  if (alpha !== 1) {\n    frameState.animate = true;\n  } else if (transition) {\n    tile.endTransition(uid);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImage = function() {\n  const context = this.context;\n  return context ? context.canvas : null;\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\n/**\n * @inheritDoc\n */\nCanvasTileLayerRenderer.prototype.getImageTransform = function() {\n  return this.imageTransform_;\n};\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n * @constructor\n * @abstract\n */\nconst ReplayGroup = function() {};\n\n\n/**\n * @abstract\n * @param {number|undefined} zIndex Z index.\n * @param {module:ol/render/ReplayType} replayType Replay type.\n * @return {module:ol/render/VectorContext} Replay.\n */\nReplayGroup.prototype.getReplay = function(zIndex, replayType) {};\n\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function() {};\nexport default ReplayGroup;\n","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array.<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array.<Array.<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  let chunk = '';\n  let chunkLength = 0;\n  let data, index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    const charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array.<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array.<module:ol/render/ReplayType>}\n */\nexport const ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {UNDEFINED} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/VectorContext}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasReplay = function(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  VectorContext.call(this);\n\n  /**\n   * @type {?}\n   */\n  this.declutterTree = declutterTree;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.tolerance = tolerance;\n\n  /**\n   * @protected\n   * @const\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent = maxExtent;\n\n  /**\n   * @protected\n   * @type {boolean}\n   */\n  this.overlaps = overlaps;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.pixelRatio = pixelRatio;\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxLineWidth = 0;\n\n  /**\n   * @protected\n   * @const\n   * @type {number}\n   */\n  this.resolution = resolution;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.alignFill_;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction1_ = null;\n\n  /**\n   * @private\n   * @type {Array.<*>}\n   */\n  this.beginGeometryInstruction2_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.bufferedMaxExtent_ = null;\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.instructions = [];\n\n  /**\n   * @protected\n   * @type {Array.<number>}\n   */\n  this.coordinates = [];\n\n  /**\n   * @private\n   * @type {!Object.<number,module:ol/coordinate~Coordinate|Array.<module:ol/coordinate~Coordinate>|Array.<Array.<module:ol/coordinate~Coordinate>>>}\n   */\n  this.coordinateCache_ = {};\n\n  /**\n   * @private\n   * @type {!module:ol/transform~Transform}\n   */\n  this.renderedTransform_ = createTransform();\n\n  /**\n   * @protected\n   * @type {Array.<*>}\n   */\n  this.hitDetectionInstructions = [];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.pixelCoordinates_ = null;\n\n  /**\n   * @protected\n   * @type {module:ol/render/canvas~FillStrokeState}\n   */\n  this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.viewRotation_ = 0;\n\n};\n\ninherits(CanvasReplay, VectorContext);\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nconst tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayTextBackground_ = function(context, p1, p2, p3, p4,\n  fillInstruction, strokeInstruction) {\n  context.beginPath();\n  context.moveTo.apply(context, p1);\n  context.lineTo.apply(context, p2);\n  context.lineTo.apply(context, p3);\n  context.lineTo.apply(context, p4);\n  context.lineTo.apply(context, p1);\n  if (fillInstruction) {\n    this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n    this.fill_(context);\n  }\n  if (strokeInstruction) {\n    this.setStrokeStyle_(context, /** @type {Array.<*>} */ (strokeInstruction));\n    context.stroke();\n  }\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} anchorX Anchor X.\n * @param {number} anchorY Anchor Y.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {number} height Height.\n * @param {number} opacity Opacity.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} rotation Rotation.\n * @param {number} scale Scale.\n * @param {boolean} snapToPixel Snap to pixel.\n * @param {number} width Width.\n * @param {Array.<number>} padding Padding.\n * @param {Array.<*>} fillInstruction Fill instruction.\n * @param {Array.<*>} strokeInstruction Stroke instruction.\n */\nCanvasReplay.prototype.replayImage_ = function(context, x, y, image,\n  anchorX, anchorY, declutterGroup, height, opacity, originX, originY,\n  rotation, scale, snapToPixel, width, padding, fillInstruction, strokeInstruction) {\n  const fillStroke = fillInstruction || strokeInstruction;\n  anchorX *= scale;\n  anchorY *= scale;\n  x -= anchorX;\n  y -= anchorY;\n\n  const w = (width + originX > image.width) ? image.width - originX : width;\n  const h = (height + originY > image.height) ? image.height - originY : height;\n  const boxW = padding[3] + w * scale + padding[1];\n  const boxH = padding[0] + h * scale + padding[2];\n  const boxX = x - padding[3];\n  const boxY = y - padding[0];\n\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p1;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p2;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p3;\n  /** @type {module:ol/coordinate~Coordinate} */\n  let p4;\n  if (fillStroke || rotation !== 0) {\n    p1 = [boxX, boxY];\n    p2 = [boxX + boxW, boxY];\n    p3 = [boxX + boxW, boxY + boxH];\n    p4 = [boxX, boxY + boxH];\n  }\n\n  let transform = null;\n  if (rotation !== 0) {\n    const centerX = x + anchorX;\n    const centerY = y + anchorY;\n    transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n    createOrUpdateEmpty(tmpExtent);\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n    extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n  } else {\n    createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n  }\n  const canvas = context.canvas;\n  const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n  const intersects =\n      tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n      tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n  if (snapToPixel) {\n    x = Math.round(x);\n    y = Math.round(y);\n  }\n\n  if (declutterGroup) {\n    if (!intersects && declutterGroup[4] == 1) {\n      return;\n    }\n    extend(declutterGroup, tmpExtent);\n    const declutterArgs = intersects ?\n      [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n      null;\n    if (declutterArgs && fillStroke) {\n      declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n    }\n    declutterGroup.push(declutterArgs);\n  } else if (intersects) {\n    if (fillStroke) {\n      this.replayTextBackground_(context, p1, p2, p3, p4,\n        /** @type {Array.<*>} */ (fillInstruction),\n        /** @type {Array.<*>} */ (strokeInstruction));\n    }\n    drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n  }\n};\n\n\n/**\n * @protected\n * @param {Array.<number>} dashArray Dash array.\n * @return {Array.<number>} Dash array with pixel ratio applied\n */\nCanvasReplay.prototype.applyPixelRatio = function(dashArray) {\n  const pixelRatio = this.pixelRatio;\n  return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n    return dash * pixelRatio;\n  });\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {boolean} closed Last input coordinate equals first.\n * @param {boolean} skipFirst Skip first coordinate.\n * @protected\n * @return {number} My end.\n */\nCanvasReplay.prototype.appendFlatCoordinates = function(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n  let myEnd = this.coordinates.length;\n  const extent = this.getBufferedMaxExtent();\n  if (skipFirst) {\n    offset += stride;\n  }\n  const lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const nextCoord = [NaN, NaN];\n  let skipped = true;\n\n  let i, lastRel, nextRel;\n  for (i = offset + stride; i < end; i += stride) {\n    nextCoord[0] = flatCoordinates[i];\n    nextCoord[1] = flatCoordinates[i + 1];\n    nextRel = coordinateRelationship(extent, nextCoord);\n    if (nextRel !== lastRel) {\n      if (skipped) {\n        this.coordinates[myEnd++] = lastCoord[0];\n        this.coordinates[myEnd++] = lastCoord[1];\n      }\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else if (nextRel === Relationship.INTERSECTING) {\n      this.coordinates[myEnd++] = nextCoord[0];\n      this.coordinates[myEnd++] = nextCoord[1];\n      skipped = false;\n    } else {\n      skipped = true;\n    }\n    lastCoord[0] = nextCoord[0];\n    lastCoord[1] = nextCoord[1];\n    lastRel = nextRel;\n  }\n\n  // Last coordinate equals first or only one point to append:\n  if ((closed && skipped) || i === offset + stride) {\n    this.coordinates[myEnd++] = lastCoord[0];\n    this.coordinates[myEnd++] = lastCoord[1];\n  }\n  return myEnd;\n};\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array.<number>} replayEnds Replay ends.\n * @return {number} Offset.\n */\nCanvasReplay.prototype.drawCustomCoordinates_ = function(flatCoordinates, offset, ends, stride, replayEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const replayEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n    replayEnds.push(replayEnd);\n    offset = end;\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasReplay.prototype.drawCustom = function(geometry, feature, renderer) {\n  this.beginGeometry(geometry, feature);\n  const type = geometry.getType();\n  const stride = geometry.getStride();\n  const replayBegin = this.coordinates.length;\n  let flatCoordinates, replayEnd, replayEnds, replayEndss;\n  let offset;\n  if (type == GeometryType.MULTI_POLYGON) {\n    geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n    flatCoordinates = geometry.getOrientedFlatCoordinates();\n    replayEndss = [];\n    const endss = geometry.getEndss();\n    offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const myEnds = [];\n      offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n      replayEndss.push(myEnds);\n    }\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n  } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n    replayEnds = [];\n    flatCoordinates = (type == GeometryType.POLYGON) ?\n      /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n      geometry.getFlatCoordinates();\n    offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n      /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n      stride, replayEnds);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n  } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    replayEnd = this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n  } else if (type == GeometryType.POINT) {\n    flatCoordinates = geometry.getFlatCoordinates();\n    this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n    replayEnd = this.coordinates.length;\n    this.instructions.push([CanvasInstruction.CUSTOM,\n      replayBegin, replayEnd, geometry, renderer]);\n  }\n  this.endGeometry(geometry, feature);\n};\n\n\n/**\n * @protected\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.beginGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.instructions.push(this.beginGeometryInstruction1_);\n  this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n  this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n */\nCanvasReplay.prototype.fill_ = function(context) {\n  if (this.alignFill_) {\n    const origin = applyTransform(this.renderedTransform_, [0, 0]);\n    const repeatSize = 512 * this.pixelRatio;\n    context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n    context.rotate(this.viewRotation_);\n  }\n  context.fill();\n  if (this.alignFill_) {\n    context.setTransform.apply(context, resetTransform);\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {Array.<*>} instruction Instruction.\n */\nCanvasReplay.prototype.setStrokeStyle_ = function(context, instruction) {\n  context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n  context.lineWidth = /** @type {number} */ (instruction[2]);\n  context.lineCap = /** @type {string} */ (instruction[3]);\n  context.lineJoin = /** @type {string} */ (instruction[4]);\n  context.miterLimit = /** @type {number} */ (instruction[5]);\n  if (CANVAS_LINE_DASH) {\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array.<number>} */ (instruction[6]));\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.renderDeclutter_ = function(declutterGroup, feature) {\n  if (declutterGroup && declutterGroup.length > 5) {\n    const groupCount = declutterGroup[4];\n    if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n      /** @type {module:ol/structs/RBush~Entry} */\n      const box = {\n        minX: /** @type {number} */ (declutterGroup[0]),\n        minY: /** @type {number} */ (declutterGroup[1]),\n        maxX: /** @type {number} */ (declutterGroup[2]),\n        maxY: /** @type {number} */ (declutterGroup[3]),\n        value: feature\n      };\n      if (!this.declutterTree.collides(box)) {\n        this.declutterTree.insert(box);\n        for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n          const declutterData = /** @type {Array} */ (declutterGroup[j]);\n          if (declutterData) {\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n          }\n        }\n      }\n      declutterGroup.length = 5;\n      createOrUpdateEmpty(declutterGroup);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {Array.<*>} instructions Instructions array.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined}\n *     featureCallback Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replay_ = function(\n  context, transform, skippedFeaturesHash,\n  instructions, featureCallback, opt_hitExtent) {\n  /** @type {Array.<number>} */\n  let pixelCoordinates;\n  if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n    pixelCoordinates = this.pixelCoordinates_;\n  } else {\n    if (!this.pixelCoordinates_) {\n      this.pixelCoordinates_ = [];\n    }\n    pixelCoordinates = transform2D(\n      this.coordinates, 0, this.coordinates.length, 2,\n      transform, this.pixelCoordinates_);\n    transformSetFromArray(this.renderedTransform_, transform);\n  }\n  const skipFeatures = !isEmpty(skippedFeaturesHash);\n  let i = 0; // instruction index\n  const ii = instructions.length; // end of instructions\n  let d = 0; // data index\n  let dd; // end of per-instruction data\n  let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n  let pendingFill = 0;\n  let pendingStroke = 0;\n  let lastFillInstruction = null;\n  let lastStrokeInstruction = null;\n  const coordinateCache = this.coordinateCache_;\n  const viewRotation = this.viewRotation_;\n\n  const state = /** @type {module:ol/render~State} */ ({\n    context: context,\n    pixelRatio: this.pixelRatio,\n    resolution: this.resolution,\n    rotation: viewRotation\n  });\n\n  // When the batch size gets too big, performance decreases. 200 is a good\n  // balance between batch size and number of fill/stroke instructions.\n  const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n  let /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n  let x, y;\n  while (i < ii) {\n    const instruction = instructions[i];\n    const type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    switch (type) {\n      case CanvasInstruction.BEGIN_GEOMETRY:\n        feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n        if ((skipFeatures &&\n            skippedFeaturesHash[getUid(feature).toString()]) ||\n            !feature.getGeometry()) {\n          i = /** @type {number} */ (instruction[2]);\n        } else if (opt_hitExtent !== undefined && !intersects(\n          opt_hitExtent, feature.getGeometry().getExtent())) {\n          i = /** @type {number} */ (instruction[2]) + 1;\n        } else {\n          ++i;\n        }\n        break;\n      case CanvasInstruction.BEGIN_PATH:\n        if (pendingFill > batchSize) {\n          this.fill_(context);\n          pendingFill = 0;\n        }\n        if (pendingStroke > batchSize) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        if (!pendingFill && !pendingStroke) {\n          context.beginPath();\n          prevX = prevY = NaN;\n        }\n        ++i;\n        break;\n      case CanvasInstruction.CIRCLE:\n        d = /** @type {number} */ (instruction[1]);\n        const x1 = pixelCoordinates[d];\n        const y1 = pixelCoordinates[d + 1];\n        const x2 = pixelCoordinates[d + 2];\n        const y2 = pixelCoordinates[d + 3];\n        const dx = x2 - x1;\n        const dy = y2 - y1;\n        const r = Math.sqrt(dx * dx + dy * dy);\n        context.moveTo(x1 + r, y1);\n        context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n        ++i;\n        break;\n      case CanvasInstruction.CLOSE_PATH:\n        context.closePath();\n        ++i;\n        break;\n      case CanvasInstruction.CUSTOM:\n        d = /** @type {number} */ (instruction[1]);\n        dd = instruction[2];\n        const geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n        const renderer = instruction[4];\n        const fn = instruction.length == 6 ? instruction[5] : undefined;\n        state.geometry = geometry;\n        state.feature = feature;\n        if (!(i in coordinateCache)) {\n          coordinateCache[i] = [];\n        }\n        const coords = coordinateCache[i];\n        if (fn) {\n          fn(pixelCoordinates, d, dd, 2, coords);\n        } else {\n          coords[0] = pixelCoordinates[d];\n          coords[1] = pixelCoordinates[d + 1];\n          coords.length = 2;\n        }\n        renderer(coords, state);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_IMAGE:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        image =  /** @type {HTMLCanvasElement|HTMLVideoElement|Image} */\n            (instruction[3]);\n        // Remaining arguments in DRAW_IMAGE are in alphabetical order\n        anchorX = /** @type {number} */ (instruction[4]);\n        anchorY = /** @type {number} */ (instruction[5]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n        const height = /** @type {number} */ (instruction[7]);\n        const opacity = /** @type {number} */ (instruction[8]);\n        const originX = /** @type {number} */ (instruction[9]);\n        const originY = /** @type {number} */ (instruction[10]);\n        const rotateWithView = /** @type {boolean} */ (instruction[11]);\n        let rotation = /** @type {number} */ (instruction[12]);\n        const scale = /** @type {number} */ (instruction[13]);\n        const snapToPixel = /** @type {boolean} */ (instruction[14]);\n        const width = /** @type {number} */ (instruction[15]);\n\n        let padding, backgroundFill, backgroundStroke;\n        if (instruction.length > 16) {\n          padding = /** @type {Array.<number>} */ (instruction[16]);\n          backgroundFill = /** @type {boolean} */ (instruction[17]);\n          backgroundStroke = /** @type {boolean} */ (instruction[18]);\n        } else {\n          padding = defaultPadding;\n          backgroundFill = backgroundStroke = false;\n        }\n\n        if (rotateWithView) {\n          rotation += viewRotation;\n        }\n        for (; d < dd; d += 2) {\n          this.replayImage_(context,\n            pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n            declutterGroup, height, opacity, originX, originY, rotation, scale,\n            snapToPixel, width, padding,\n            backgroundFill ? /** @type {Array.<*>} */ (lastFillInstruction) : null,\n            backgroundStroke ? /** @type {Array.<*>} */ (lastStrokeInstruction) : null);\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.DRAW_CHARS:\n        const begin = /** @type {number} */ (instruction[1]);\n        const end = /** @type {number} */ (instruction[2]);\n        const baseline = /** @type {number} */ (instruction[3]);\n        declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n        const overflow = /** @type {number} */ (instruction[5]);\n        const fillKey = /** @type {string} */ (instruction[6]);\n        const maxAngle = /** @type {number} */ (instruction[7]);\n        const measure = /** @type {function(string):number} */ (instruction[8]);\n        const offsetY = /** @type {number} */ (instruction[9]);\n        const strokeKey = /** @type {string} */ (instruction[10]);\n        const strokeWidth =  /** @type {number} */ (instruction[11]);\n        const text = /** @type {string} */ (instruction[12]);\n        const textKey = /** @type {string} */ (instruction[13]);\n        const textScale = /** @type {number} */ (instruction[14]);\n\n        const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n        const textLength = measure(text);\n        if (overflow || textLength <= pathLength) {\n          const textAlign = /** @type {module:ol~render} */ (this).textStates[textKey].textAlign;\n          const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n          const parts = drawTextOnPath(\n            pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n          if (parts) {\n            let c, cc, chars, label, part;\n            if (strokeKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, '', strokeKey);\n                anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n            if (fillKey) {\n              for (c = 0, cc = parts.length; c < cc; ++c) {\n                part = parts[c]; // x, y, anchorX, rotation, chunk\n                chars = /** @type {string} */ (part[4]);\n                label = /** @type {module:ol~render} */ (this).getImage(chars, textKey, fillKey, '');\n                anchorX = /** @type {number} */ (part[2]);\n                anchorY = baseline * label.height - offsetY;\n                this.replayImage_(context,\n                  /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                  anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                  /** @type {number} */ (part[3]), textScale, false, label.width,\n                  defaultPadding, null, null);\n              }\n            }\n          }\n        }\n        this.renderDeclutter_(declutterGroup, feature);\n        ++i;\n        break;\n      case CanvasInstruction.END_GEOMETRY:\n        if (featureCallback !== undefined) {\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          const result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.FILL:\n        if (batchSize) {\n          pendingFill++;\n        } else {\n          this.fill_(context);\n        }\n        ++i;\n        break;\n      case CanvasInstruction.MOVE_TO_LINE_TO:\n        d = /** @type {number} */ (instruction[1]);\n        dd = /** @type {number} */ (instruction[2]);\n        x = pixelCoordinates[d];\n        y = pixelCoordinates[d + 1];\n        roundX = (x + 0.5) | 0;\n        roundY = (y + 0.5) | 0;\n        if (roundX !== prevX || roundY !== prevY) {\n          context.moveTo(x, y);\n          prevX = roundX;\n          prevY = roundY;\n        }\n        for (d += 2; d < dd; d += 2) {\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n            context.lineTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n        }\n        ++i;\n        break;\n      case CanvasInstruction.SET_FILL_STYLE:\n        lastFillInstruction = instruction;\n        this.alignFill_ = instruction[2];\n\n        if (pendingFill) {\n          this.fill_(context);\n          pendingFill = 0;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n        }\n\n        context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n        ++i;\n        break;\n      case CanvasInstruction.SET_STROKE_STYLE:\n        lastStrokeInstruction = instruction;\n        if (pendingStroke) {\n          context.stroke();\n          pendingStroke = 0;\n        }\n        this.setStrokeStyle_(context, /** @type {Array.<*>} */ (instruction));\n        ++i;\n        break;\n      case CanvasInstruction.STROKE:\n        if (batchSize) {\n          pendingStroke++;\n        } else {\n          context.stroke();\n        }\n        ++i;\n        break;\n      default:\n        ++i; // consume the instruction anyway, to avoid an infinite loop\n        break;\n    }\n  }\n  if (pendingFill) {\n    this.fill_(context);\n  }\n  if (pendingStroke) {\n    context.stroke();\n  }\n  return undefined;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n */\nCanvasReplay.prototype.replay = function(\n  context, transform, viewRotation, skippedFeaturesHash) {\n  this.viewRotation_ = viewRotation;\n  this.replay_(context, transform,\n    skippedFeaturesHash, this.instructions, undefined, undefined);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features\n *     to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n *     Feature callback.\n * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n *     extent.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplay.prototype.replayHitDetection = function(\n  context, transform, viewRotation, skippedFeaturesHash,\n  opt_featureCallback, opt_hitExtent) {\n  this.viewRotation_ = viewRotation;\n  return this.replay_(context, transform, skippedFeaturesHash,\n    this.hitDetectionInstructions, opt_featureCallback, opt_hitExtent);\n};\n\n\n/**\n * Reverse the hit detection instructions.\n */\nCanvasReplay.prototype.reverseHitDetectionInstructions = function() {\n  const hitDetectionInstructions = this.hitDetectionInstructions;\n  // step 1 - reverse array\n  hitDetectionInstructions.reverse();\n  // step 2 - reverse instructions within geometry blocks\n  let i;\n  const n = hitDetectionInstructions.length;\n  let instruction;\n  let type;\n  let begin = -1;\n  for (i = 0; i < n; ++i) {\n    instruction = hitDetectionInstructions[i];\n    type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n    if (type == CanvasInstruction.END_GEOMETRY) {\n      begin = i;\n    } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n      instruction[2] = i;\n      reverseSubArray(this.hitDetectionInstructions, begin, i);\n      begin = -1;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplay.prototype.setFillStrokeStyle = function(fillStyle, strokeStyle) {\n  const state = this.state;\n  if (fillStyle) {\n    const fillStyleColor = fillStyle.getColor();\n    state.fillStyle = asColorLike(fillStyleColor ?\n      fillStyleColor : defaultFillStyle);\n  } else {\n    state.fillStyle = undefined;\n  }\n  if (strokeStyle) {\n    const strokeStyleColor = strokeStyle.getColor();\n    state.strokeStyle = asColorLike(strokeStyleColor ?\n      strokeStyleColor : defaultStrokeStyle);\n    const strokeStyleLineCap = strokeStyle.getLineCap();\n    state.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : defaultLineCap;\n    const strokeStyleLineDash = strokeStyle.getLineDash();\n    state.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash.slice() : defaultLineDash;\n    const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    state.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : defaultLineDashOffset;\n    const strokeStyleLineJoin = strokeStyle.getLineJoin();\n    state.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : defaultLineJoin;\n    const strokeStyleWidth = strokeStyle.getWidth();\n    state.lineWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : defaultLineWidth;\n    const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    state.miterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : defaultMiterLimit;\n\n    if (state.lineWidth > this.maxLineWidth) {\n      this.maxLineWidth = state.lineWidth;\n      // invalidate the buffered max extent cache\n      this.bufferedMaxExtent_ = null;\n    }\n  } else {\n    state.strokeStyle = undefined;\n    state.lineCap = undefined;\n    state.lineDash = null;\n    state.lineDashOffset = undefined;\n    state.lineJoin = undefined;\n    state.lineWidth = undefined;\n    state.miterLimit = undefined;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @return {Array.<*>} Fill instruction.\n */\nCanvasReplay.prototype.createFill = function(state, geometry) {\n  const fillStyle = state.fillStyle;\n  const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n  if (typeof fillStyle !== 'string') {\n    // Fill is a pattern or gradient - align it!\n    fillInstruction.push(true);\n  }\n  return fillInstruction;\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n */\nCanvasReplay.prototype.applyStroke = function(state) {\n  this.instructions.push(this.createStroke(state));\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @return {Array.<*>} Stroke instruction.\n */\nCanvasReplay.prototype.createStroke = function(state) {\n  return [\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n    state.lineJoin, state.miterLimit,\n    this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n  ];\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array.<*>} createFill Create fill.\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasReplay.prototype.updateFillStyle = function(state, createFill, geometry) {\n  const fillStyle = state.fillStyle;\n  if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n    if (fillStyle !== undefined) {\n      this.instructions.push(createFill.call(this, state, geometry));\n    }\n    state.currentFillStyle = fillStyle;\n  }\n};\n\n\n/**\n * @param {module:ol/render/canvas~FillStrokeState} state State.\n * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n */\nCanvasReplay.prototype.updateStrokeStyle = function(state, applyStroke) {\n  const strokeStyle = state.strokeStyle;\n  const lineCap = state.lineCap;\n  const lineDash = state.lineDash;\n  const lineDashOffset = state.lineDashOffset;\n  const lineJoin = state.lineJoin;\n  const lineWidth = state.lineWidth;\n  const miterLimit = state.miterLimit;\n  if (state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit) {\n    if (strokeStyle !== undefined) {\n      applyStroke.call(this, state);\n    }\n    state.currentStrokeStyle = strokeStyle;\n    state.currentLineCap = lineCap;\n    state.currentLineDash = lineDash;\n    state.currentLineDashOffset = lineDashOffset;\n    state.currentLineJoin = lineJoin;\n    state.currentLineWidth = lineWidth;\n    state.currentMiterLimit = miterLimit;\n  }\n};\n\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nCanvasReplay.prototype.endGeometry = function(geometry, feature) {\n  this.beginGeometryInstruction1_[2] = this.instructions.length;\n  this.beginGeometryInstruction1_ = null;\n  this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n  this.beginGeometryInstruction2_ = null;\n  const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n  this.instructions.push(endGeometryInstruction);\n  this.hitDetectionInstructions.push(endGeometryInstruction);\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = UNDEFINED;\n\n\n/**\n * Get the buffered rendering extent.  Rendering will be clipped to the extent\n * provided to the constructor.  To account for symbolizers that may intersect\n * this extent, we calculate a buffered extent (e.g. based on stroke width).\n * @return {module:ol/extent~Extent} The buffered rendering extent.\n * @protected\n */\nCanvasReplay.prototype.getBufferedMaxExtent = function() {\n  if (!this.bufferedMaxExtent_) {\n    this.bufferedMaxExtent_ = clone(this.maxExtent);\n    if (this.maxLineWidth > 0) {\n      const width = this.resolution * (this.maxLineWidth + 1) / 2;\n      buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n    }\n  }\n  return this.bufferedMaxExtent_;\n};\nexport default CanvasReplay;\n","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasImageReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement|HTMLVideoElement|Image}\n   */\n  this.image_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.anchorY_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.height_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.opacity_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originX_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.originY_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = undefined;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.snapToPixel_ = undefined;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = undefined;\n\n};\n\ninherits(CanvasImageReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} My end.\n */\nCanvasImageReplay.prototype.drawCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawPoint = function(pointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(pointGeometry, feature);\n  const flatCoordinates = pointGeometry.getFlatCoordinates();\n  const stride = pointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(pointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.drawMultiPoint = function(multiPointGeometry, feature) {\n  if (!this.image_) {\n    return;\n  }\n  this.beginGeometry(multiPointGeometry, feature);\n  const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n  const stride = multiPointGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  const myEnd = this.drawCoordinates_(\n    flatCoordinates, 0, flatCoordinates.length, stride);\n  this.instructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_ * this.pixelRatio, this.snapToPixel_, this.width_\n  ]);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n    // Remaining arguments to DRAW_IMAGE are in alphabetical order\n    this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n    this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n    this.scale_, this.snapToPixel_, this.width_\n  ]);\n  this.endGeometry(multiPointGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  // FIXME this doesn't really protect us against further calls to draw*Geometry\n  this.anchorX_ = undefined;\n  this.anchorY_ = undefined;\n  this.hitDetectionImage_ = null;\n  this.image_ = null;\n  this.height_ = undefined;\n  this.scale_ = undefined;\n  this.opacity_ = undefined;\n  this.originX_ = undefined;\n  this.originY_ = undefined;\n  this.rotateWithView_ = undefined;\n  this.rotation_ = undefined;\n  this.snapToPixel_ = undefined;\n  this.width_ = undefined;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasImageReplay.prototype.setImageStyle = function(imageStyle, declutterGroup) {\n  const anchor = imageStyle.getAnchor();\n  const size = imageStyle.getSize();\n  const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n  const image = imageStyle.getImage(1);\n  const origin = imageStyle.getOrigin();\n  this.anchorX_ = anchor[0];\n  this.anchorY_ = anchor[1];\n  this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n  this.hitDetectionImage_ = hitDetectionImage;\n  this.image_ = image;\n  this.height_ = size[1];\n  this.opacity_ = imageStyle.getOpacity();\n  this.originX_ = origin[0];\n  this.originY_ = origin[1];\n  this.rotateWithView_ = imageStyle.getRotateWithView();\n  this.rotation_ = imageStyle.getRotation();\n  this.scale_ = imageStyle.getScale();\n  this.snapToPixel_ = imageStyle.getSnapToPixel();\n  this.width_ = size[0];\n};\nexport default CanvasImageReplay;\n","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport {inherits} from '../../util.js';\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasLineStringReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasLineStringReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @private\n * @return {number} end.\n */\nCanvasLineStringReplay.prototype.drawFlatCoordinates_ = function(flatCoordinates, offset, end, stride) {\n  const myBegin = this.coordinates.length;\n  const myEnd = this.appendFlatCoordinates(\n    flatCoordinates, offset, end, stride, false, false);\n  const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n  this.instructions.push(moveToLineToInstruction);\n  this.hitDetectionInstructions.push(moveToLineToInstruction);\n  return end;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawLineString = function(lineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(lineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n  const stride = lineStringGeometry.getStride();\n  this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(lineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.drawMultiLineString = function(multiLineStringGeometry, feature) {\n  const state = this.state;\n  const strokeStyle = state.strokeStyle;\n  const lineWidth = state.lineWidth;\n  if (strokeStyle === undefined || lineWidth === undefined) {\n    return;\n  }\n  this.updateStrokeStyle(state, this.applyStroke);\n  this.beginGeometry(multiLineStringGeometry, feature);\n  this.hitDetectionInstructions.push([\n    CanvasInstruction.SET_STROKE_STYLE,\n    state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n    state.miterLimit, state.lineDash, state.lineDashOffset\n  ], beginPathInstruction);\n  const ends = multiLineStringGeometry.getEnds();\n  const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n  const stride = multiLineStringGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n  }\n  this.hitDetectionInstructions.push(strokeInstruction);\n  this.endGeometry(multiLineStringGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasLineStringReplay.prototype.finish = function() {\n  const state = this.state;\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n  }\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n};\n\n\n/**\n * @inheritDoc.\n */\nCanvasLineStringReplay.prototype.applyStroke = function(state) {\n  if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n    this.instructions.push(strokeInstruction);\n    state.lastStroke = this.coordinates.length;\n  }\n  state.lastStroke = 0;\n  CanvasReplay.prototype.applyStroke.call(this, state);\n  this.instructions.push(beginPathInstruction);\n};\nexport default CanvasLineStringReplay;\n","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {inherits} from '../../util.js';\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasPolygonReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n};\n\ninherits(CanvasPolygonReplay, CanvasReplay);\n\n\n/**\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array.<number>} ends Ends.\n * @param {number} stride Stride.\n * @private\n * @return {number} End.\n */\nCanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function(flatCoordinates, offset, ends, stride) {\n  const state = this.state;\n  const fill = state.fillStyle !== undefined;\n  const stroke = state.strokeStyle != undefined;\n  const numEnds = ends.length;\n  this.instructions.push(beginPathInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction);\n  for (let i = 0; i < numEnds; ++i) {\n    const end = ends[i];\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    if (stroke) {\n      // Performance optimization: only call closePath() when we have a stroke.\n      // Otherwise the ring is closed already (see appendFlatCoordinates above).\n      this.instructions.push(closePathInstruction);\n      this.hitDetectionInstructions.push(closePathInstruction);\n    }\n    offset = end;\n  }\n  if (fill) {\n    this.instructions.push(fillInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n  }\n  if (stroke) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  return offset;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawCircle = function(circleGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(circleGeometry);\n  this.beginGeometry(circleGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const flatCoordinates = circleGeometry.getFlatCoordinates();\n  const stride = circleGeometry.getStride();\n  const myBegin = this.coordinates.length;\n  this.appendFlatCoordinates(\n    flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n  const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n  this.instructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n  this.hitDetectionInstructions.push(fillInstruction);\n  if (state.fillStyle !== undefined) {\n    this.instructions.push(fillInstruction);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.instructions.push(strokeInstruction);\n    this.hitDetectionInstructions.push(strokeInstruction);\n  }\n  this.endGeometry(circleGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawPolygon = function(polygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(polygonGeometry);\n  this.beginGeometry(polygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const ends = polygonGeometry.getEnds();\n  const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n  const stride = polygonGeometry.getStride();\n  this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n  this.endGeometry(polygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.drawMultiPolygon = function(multiPolygonGeometry, feature) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  const strokeStyle = state.strokeStyle;\n  if (fillStyle === undefined && strokeStyle === undefined) {\n    return;\n  }\n  this.setFillStrokeStyles_(multiPolygonGeometry);\n  this.beginGeometry(multiPolygonGeometry, feature);\n  if (state.fillStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_FILL_STYLE,\n      asString(defaultFillStyle)\n    ]);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ]);\n  }\n  const endss = multiPolygonGeometry.getEndss();\n  const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n  const stride = multiPolygonGeometry.getStride();\n  let offset = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n  }\n  this.endGeometry(multiPolygonGeometry, feature);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasPolygonReplay.prototype.finish = function() {\n  this.reverseHitDetectionInstructions();\n  this.state = null;\n  // We want to preserve topology when drawing polygons.  Polygons are\n  // simplified using quantization and point elimination. However, we might\n  // have received a mix of quantized and non-quantized geometries, so ensure\n  // that all are quantized by quantizing all coordinates in the batch.\n  const tolerance = this.tolerance;\n  if (tolerance !== 0) {\n    const coordinates = this.coordinates;\n    for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n      coordinates[i] = snap(coordinates[i], tolerance);\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n */\nCanvasPolygonReplay.prototype.setFillStrokeStyles_ = function(geometry) {\n  const state = this.state;\n  const fillStyle = state.fillStyle;\n  if (fillStyle !== undefined) {\n    this.updateFillStyle(state, this.createFill, geometry);\n  }\n  if (state.strokeStyle !== undefined) {\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n};\nexport default CanvasPolygonReplay;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array.<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array.<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid, inherits} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\n/**\n * @constructor\n * @extends {module:ol/render/canvas/Replay}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Maximum extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay can have overlapping geometries.\n * @param {?} declutterTree Declutter tree.\n * @struct\n */\nconst CanvasTextReplay = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n  CanvasReplay.call(this,\n    tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   */\n  this.declutterGroup_;\n\n  /**\n   * @private\n   * @type {Array.<HTMLCanvasElement>}\n   */\n  this.labels_ = null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.text_ = '';\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetX_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textOffsetY_ = 0;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.textRotateWithView_ = undefined;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.textRotation_ = 0;\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~FillState}\n   */\n  this.textFillState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~FillState>}\n   */\n  this.fillStates = {};\n\n  /**\n   * @private\n   * @type {?module:ol/render/canvas~StrokeState}\n   */\n  this.textStrokeState_ = null;\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~StrokeState>}\n   */\n  this.strokeStates = {};\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas~TextState}\n   */\n  this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n  /**\n   * @type {!Object.<string, module:ol/render/canvas~TextState>}\n   */\n  this.textStates = {};\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.textKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.fillKey_ = '';\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.strokeKey_ = '';\n\n  /**\n   * @private\n   * @type {Object.<string, Object.<string, number>>}\n   */\n  this.widths_ = {};\n\n  labelCache.prune();\n\n};\n\ninherits(CanvasTextReplay, CanvasReplay);\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array.<string>} lines Lines to measure.\n * @param {Array.<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.drawText = function(geometry, feature) {\n  const fillState = this.textFillState_;\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n    return;\n  }\n\n  let begin = this.coordinates.length;\n\n  const geometryType = geometry.getType();\n  let flatCoordinates = null;\n  let end = 2;\n  let stride = 2;\n  let i, ii;\n\n  if (textState.placement === TextPlacement.LINE) {\n    if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n      return;\n    }\n    let ends;\n    flatCoordinates = geometry.getFlatCoordinates();\n    stride = geometry.getStride();\n    if (geometryType == GeometryType.LINE_STRING) {\n      ends = [flatCoordinates.length];\n    } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n      ends = geometry.getEnds();\n    } else if (geometryType == GeometryType.POLYGON) {\n      ends = geometry.getEnds().slice(0, 1);\n    } else if (geometryType == GeometryType.MULTI_POLYGON) {\n      const endss = geometry.getEndss();\n      ends = [];\n      for (i = 0, ii = endss.length; i < ii; ++i) {\n        ends.push(endss[i][0]);\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    const textAlign = textState.textAlign;\n    let flatOffset = 0;\n    let flatEnd;\n    for (let o = 0, oo = ends.length; o < oo; ++o) {\n      if (textAlign == undefined) {\n        const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n        flatOffset = range[0];\n        flatEnd = range[1];\n      } else {\n        flatEnd = ends[o];\n      }\n      for (i = flatOffset; i < flatEnd; i += stride) {\n        this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n      }\n      end = this.coordinates.length;\n      flatOffset = ends[o];\n      this.drawChars_(begin, end, this.declutterGroup_);\n      begin = end;\n    }\n    this.endGeometry(geometry, feature);\n\n  } else {\n    const label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n    const width = label.width / this.pixelRatio;\n    switch (geometryType) {\n      case GeometryType.POINT:\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n        break;\n      case GeometryType.CIRCLE:\n        flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n        end = flatCoordinates.length;\n        break;\n      case GeometryType.POLYGON:\n        flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n        if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n          return;\n        }\n        stride = 3;\n        break;\n      case GeometryType.MULTI_POLYGON:\n        const interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n        flatCoordinates = [];\n        for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n          if (textState.overflow || interiorPoints[i + 2] / this.resolution >= width) {\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n        }\n        end = flatCoordinates.length;\n        if (end == 0) {\n          return;\n        }\n        break;\n      default:\n    }\n    end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n    if (textState.backgroundFill || textState.backgroundStroke) {\n      this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n      if (textState.backgroundFill) {\n        this.updateFillStyle(this.state, this.createFill, geometry);\n        this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n      }\n      if (textState.backgroundStroke) {\n        this.updateStrokeStyle(this.state, this.applyStroke);\n        this.hitDetectionInstructions.push(this.createStroke(this.state));\n      }\n    }\n    this.beginGeometry(geometry, feature);\n    this.drawTextImage_(label, begin, end);\n    this.endGeometry(geometry, feature);\n  }\n};\n\n\n/**\n * @param {string} text Text.\n * @param {string} textKey Text style key.\n * @param {string} fillKey Fill style key.\n * @param {string} strokeKey Stroke style key.\n * @return {HTMLCanvasElement} Image.\n */\nCanvasTextReplay.prototype.getImage = function(text, textKey, fillKey, strokeKey) {\n  let label;\n  const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n  if (!labelCache.containsKey(key)) {\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n    const fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n    const textState = this.textStates[textKey] || this.textState_;\n    const pixelRatio = this.pixelRatio;\n    const scale = textState.scale * pixelRatio;\n    const align =  TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = (width + strokeWidth);\n    const context = createCanvasContext2D(\n      Math.ceil(renderWidth * scale),\n      Math.ceil((height + strokeWidth) * scale));\n    label = context.canvas;\n    labelCache.set(key, label);\n    if (scale != 1) {\n      context.scale(scale, scale);\n    }\n    context.font = textState.font;\n    if (strokeKey) {\n      context.strokeStyle = strokeState.strokeStyle;\n      context.lineWidth = strokeWidth;\n      context.lineCap = strokeState.lineCap;\n      context.lineJoin = strokeState.lineJoin;\n      context.miterLimit = strokeState.miterLimit;\n      if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n    }\n    if (fillKey) {\n      context.fillStyle = fillState.fillStyle;\n    }\n    context.textBaseline = 'middle';\n    context.textAlign = 'center';\n    const leftRight = (0.5 - align);\n    const x = align * label.width / scale + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n      }\n    }\n  }\n  return labelCache.get(key);\n};\n\n\n/**\n * @private\n * @param {HTMLCanvasElement} label Label.\n * @param {number} begin Begin.\n * @param {number} end End.\n */\nCanvasTextReplay.prototype.drawTextImage_ = function(label, begin, end) {\n  const textState = this.textState_;\n  const strokeState = this.textStrokeState_;\n  const pixelRatio = this.pixelRatio;\n  const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n  const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n  const anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n  const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n  this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1, true, label.width,\n    textState.padding == defaultPadding ?\n      defaultPadding : textState.padding.map(function(p) {\n        return p * pixelRatio;\n      }),\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n    label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n    this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n    1 / pixelRatio, true, label.width, textState.padding,\n    !!textState.backgroundFill, !!textState.backgroundStroke\n  ]);\n};\n\n\n/**\n * @private\n * @param {number} begin Begin.\n * @param {number} end End.\n * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n */\nCanvasTextReplay.prototype.drawChars_ = function(begin, end, declutterGroup) {\n  const strokeState = this.textStrokeState_;\n  const textState = this.textState_;\n  const fillState = this.textFillState_;\n\n  const strokeKey = this.strokeKey_;\n  if (strokeState) {\n    if (!(strokeKey in this.strokeStates)) {\n      this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n        strokeStyle: strokeState.strokeStyle,\n        lineCap: strokeState.lineCap,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineWidth: strokeState.lineWidth,\n        lineJoin: strokeState.lineJoin,\n        miterLimit: strokeState.miterLimit,\n        lineDash: strokeState.lineDash\n      });\n    }\n  }\n  const textKey = this.textKey_;\n  if (!(this.textKey_ in this.textStates)) {\n    this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n      font: textState.font,\n      textAlign: textState.textAlign || defaultTextAlign,\n      scale: textState.scale\n    });\n  }\n  const fillKey = this.fillKey_;\n  if (fillState) {\n    if (!(fillKey in this.fillStates)) {\n      this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n        fillStyle: fillState.fillStyle\n      });\n    }\n  }\n\n  const pixelRatio = this.pixelRatio;\n  const baseline = TEXT_ALIGN[textState.textBaseline];\n\n  const offsetY = this.textOffsetY_ * pixelRatio;\n  const text = this.text_;\n  const font = textState.font;\n  const textScale = textState.scale;\n  const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n  let widths = this.widths_[font];\n  if (!widths) {\n    this.widths_[font] = widths = {};\n  }\n  this.instructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale * pixelRatio;\n    },\n    offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n  ]);\n  this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n    begin, end, baseline, declutterGroup,\n    textState.overflow, fillKey, textState.maxAngle,\n    function(text) {\n      let width = widths[text];\n      if (!width) {\n        width = widths[text] = measureTextWidth(font, text);\n      }\n      return width * textScale;\n    },\n    offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n  ]);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasTextReplay.prototype.setTextStyle = function(textStyle, declutterGroup) {\n  let textState, fillState, strokeState;\n  if (!textStyle) {\n    this.text_ = '';\n  } else {\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n    const textFillStyle = textStyle.getFill();\n    if (!textFillStyle) {\n      fillState = this.textFillState_ = null;\n    } else {\n      fillState = this.textFillState_;\n      if (!fillState) {\n        fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n      }\n      fillState.fillStyle = asColorLike(\n        textFillStyle.getColor() || defaultFillStyle);\n    }\n\n    const textStrokeStyle = textStyle.getStroke();\n    if (!textStrokeStyle) {\n      strokeState = this.textStrokeState_ = null;\n    } else {\n      strokeState = this.textStrokeState_;\n      if (!strokeState) {\n        strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n      }\n      const lineDash = textStrokeStyle.getLineDash();\n      const lineDashOffset = textStrokeStyle.getLineDashOffset();\n      const lineWidth = textStrokeStyle.getWidth();\n      const miterLimit = textStrokeStyle.getMiterLimit();\n      strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n      strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n      strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n      strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n      strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n      strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n      strokeState.strokeStyle = asColorLike(\n        textStrokeStyle.getColor() || defaultStrokeStyle);\n    }\n\n    textState = this.textState_;\n    const font = textStyle.getFont() || defaultFont;\n    checkFont(font);\n    const textScale = textStyle.getScale();\n    textState.overflow = textStyle.getOverflow();\n    textState.font = font;\n    textState.maxAngle = textStyle.getMaxAngle();\n    textState.placement = textStyle.getPlacement();\n    textState.textAlign = textStyle.getTextAlign();\n    textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n    textState.backgroundFill = textStyle.getBackgroundFill();\n    textState.backgroundStroke = textStyle.getBackgroundStroke();\n    textState.padding = textStyle.getPadding() || defaultPadding;\n    textState.scale = textScale === undefined ? 1 : textScale;\n\n    const textOffsetX = textStyle.getOffsetX();\n    const textOffsetY = textStyle.getOffsetY();\n    const textRotateWithView = textStyle.getRotateWithView();\n    const textRotation = textStyle.getRotation();\n    this.text_ = textStyle.getText() || '';\n    this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n    this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n    this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n    this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n    this.strokeKey_ = strokeState ?\n      (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n      strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n      strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n      '';\n    this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n    this.fillKey_ = fillState ?\n      (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n      '';\n  }\n};\nexport default CanvasTextReplay;\n","/**\n * @module ol/render/canvas/ReplayGroup\n */\nimport {inherits} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object.<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array.<module:ol/render/canvas~DeclutterGroup>)>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/render/ReplayGroup}\n * @param {number} tolerance Tolerance.\n * @param {module:ol/extent~Extent} maxExtent Max extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {boolean} overlaps The replay group can have overlapping geometries.\n * @param {?} declutterTree Declutter tree\n * for declutter processing in postrender.\n * @param {number=} opt_renderBuffer Optional rendering buffer.\n * @struct\n */\nconst CanvasReplayGroup = function(\n  tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree, opt_renderBuffer) {\n  ReplayGroup.call(this);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = declutterTree;\n\n  /**\n   * @type {module:ol/render/canvas~DeclutterGroup}\n   * @private\n   */\n  this.declutterGroup_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tolerance_ = tolerance;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.maxExtent_ = maxExtent;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overlaps_ = overlaps;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.resolution_ = resolution;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.renderBuffer_ = opt_renderBuffer;\n\n  /**\n   * @private\n   * @type {!Object.<string, !Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n   */\n  this.replaysByZIndex_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.hitDetectionTransform_ = createTransform();\n};\n\ninherits(CanvasReplayGroup, ReplayGroup);\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object.<number, Array.<Array.<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array.<Array.<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array.<Array.<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object.<string, Array.<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n */\nexport function replayDeclutter(declutterReplays, context, rotation) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  const skippedFeatureUids = {};\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const replayData = declutterReplays[zs[z].toString()];\n    for (let i = 0, ii = replayData.length; i < ii;) {\n      const replay = replayData[i++];\n      const transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids);\n    }\n  }\n}\n\n\n/**\n * @param {boolean} group Group with previous replay.\n * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n */\nCanvasReplayGroup.prototype.addDeclutter = function(group) {\n  let declutter = null;\n  if (this.declutterTree_) {\n    if (group) {\n      declutter = this.declutterGroup_;\n      /** @type {number} */ (declutter[4])++;\n    } else {\n      declutter = this.declutterGroup_ = createEmpty();\n      declutter.push(1);\n    }\n  }\n  return declutter;\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n */\nCanvasReplayGroup.prototype.clip = function(context, transform) {\n  const flatClipCoords = this.getClipCoords(transform);\n  context.beginPath();\n  context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n  context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n  context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n  context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n  context.clip();\n};\n\n\n/**\n * @param {Array.<module:ol/render/ReplayType>} replays Replays.\n * @return {boolean} Has replays of the provided types.\n */\nCanvasReplayGroup.prototype.hasReplays = function(replays) {\n  for (const zIndex in this.replaysByZIndex_) {\n    const candidates = this.replaysByZIndex_[zIndex];\n    for (let i = 0, ii = replays.length; i < ii; ++i) {\n      if (replays[i] in candidates) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplayGroup.prototype.finish = function() {\n  for (const zKey in this.replaysByZIndex_) {\n    const replays = this.replaysByZIndex_[zKey];\n    for (const replayKey in replays) {\n      replays[replayKey].finish();\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n * @return {T|undefined} Callback result.\n * @template T\n */\nCanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function(\n  coordinate, resolution, rotation, hitTolerance, skippedFeaturesHash, callback, declutterReplays) {\n\n  hitTolerance = Math.round(hitTolerance);\n  const contextSize = hitTolerance * 2 + 1;\n  const transform = composeTransform(this.hitDetectionTransform_,\n    hitTolerance + 0.5, hitTolerance + 0.5,\n    1 / resolution, -1 / resolution,\n    -rotation,\n    -coordinate[0], -coordinate[1]);\n  const context = this.hitDetectionContext_;\n\n  if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n    context.canvas.width = contextSize;\n    context.canvas.height = contextSize;\n  } else {\n    context.clearRect(0, 0, contextSize, contextSize);\n  }\n\n  /**\n   * @type {module:ol/extent~Extent}\n   */\n  let hitExtent;\n  if (this.renderBuffer_ !== undefined) {\n    hitExtent = createEmpty();\n    extendCoordinate(hitExtent, coordinate);\n    buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n  }\n\n  const mask = getCircleArray(hitTolerance);\n  let declutteredFeatures;\n  if (this.declutterTree_) {\n    declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n      return entry.value;\n    });\n  }\n\n  let replayType;\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @return {?} Callback result.\n   */\n  function featureCallback(feature) {\n    const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n    for (let i = 0; i < contextSize; i++) {\n      for (let j = 0; j < contextSize; j++) {\n        if (mask[i][j]) {\n          if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n            let result;\n            if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                declutteredFeatures.indexOf(feature) !== -1) {\n              result = callback(feature);\n            }\n            if (result) {\n              return result;\n            } else {\n              context.clearRect(0, 0, contextSize, contextSize);\n              return undefined;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  let i, j, replays, replay, result;\n  for (i = zs.length - 1; i >= 0; --i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = ORDER.length - 1; j >= 0; --j) {\n      replayType = ORDER[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = declutterReplays[zIndexKey];\n          if (!declutter) {\n            declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          result = replay.replayHitDetection(context, transform, rotation,\n            skippedFeaturesHash, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {module:ol/transform~Transform} transform Transform.\n * @return {Array.<number>} Clip coordinates.\n */\nCanvasReplayGroup.prototype.getClipCoords = function(transform) {\n  const maxExtent = this.maxExtent_;\n  const minX = maxExtent[0];\n  const minY = maxExtent[1];\n  const maxX = maxExtent[2];\n  const maxY = maxExtent[3];\n  const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n  transform2D(\n    flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n  return flatClipCoords;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.getReplay = function(zIndex, replayType) {\n  const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n  let replays = this.replaysByZIndex_[zIndexKey];\n  if (replays === undefined) {\n    replays = {};\n    this.replaysByZIndex_[zIndexKey] = replays;\n  }\n  let replay = replays[replayType];\n  if (replay === undefined) {\n    const Constructor = BATCH_CONSTRUCTORS[replayType];\n    replay = new Constructor(this.tolerance_, this.maxExtent_,\n      this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n    replays[replayType] = replay;\n  }\n  return replay;\n};\n\n\n/**\n * @return {Object.<string, Object.<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n */\nCanvasReplayGroup.prototype.getReplays = function() {\n  return this.replaysByZIndex_;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasReplayGroup.prototype.isEmpty = function() {\n  return isEmpty(this.replaysByZIndex_);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {number} viewRotation View rotation.\n * @param {Object.<string, boolean>} skippedFeaturesHash Ids of features to skip.\n * @param {Array.<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n *     Default is {@link module:ol/render/replay~ORDER}\n * @param {Object.<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n */\nCanvasReplayGroup.prototype.replay = function(context,\n  transform, viewRotation, skippedFeaturesHash, opt_replayTypes, opt_declutterReplays) {\n\n  /** @type {Array.<number>} */\n  const zs = Object.keys(this.replaysByZIndex_).map(Number);\n  zs.sort(numberSafeCompareFunction);\n\n  // setup clipping so that the parts of over-simplified geometries are not\n  // visible outside the current extent when panning\n  context.save();\n  this.clip(context, transform);\n\n  const replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n  let i, ii, j, jj, replays, replay;\n  for (i = 0, ii = zs.length; i < ii; ++i) {\n    const zIndexKey = zs[i].toString();\n    replays = this.replaysByZIndex_[zIndexKey];\n    for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n      const replayType = replayTypes[j];\n      replay = replays[replayType];\n      if (replay !== undefined) {\n        if (opt_declutterReplays &&\n            (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n          const declutter = opt_declutterReplays[zIndexKey];\n          if (!declutter) {\n            opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n          } else {\n            declutter.push(replay, transform.slice(0));\n          }\n        } else {\n          replay.replay(context, transform, viewRotation, skippedFeaturesHash);\n        }\n      }\n    }\n  }\n\n  context.restore();\n};\n\nexport default CanvasReplayGroup;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object.<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/Layer}\n * @param {module:ol/layer/Vector} vectorLayer Vector layer.\n * @api\n */\nconst CanvasVectorLayerRenderer = function(vectorLayer) {\n\n  CanvasLayerRenderer.call(this, vectorLayer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedRevision_ = -1;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedResolution_ = NaN;\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.renderedExtent_ = createEmpty();\n\n  /**\n   * @private\n   * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n   */\n  this.renderedRenderOrder_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/render/canvas/ReplayGroup}\n   */\n  this.replayGroup_ = null;\n\n  /**\n   * A new replay group had to be created by `prepareFrame()`\n   * @type {boolean}\n   */\n  this.replayGroupChanged = true;\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = createCanvasContext2D();\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorLayerRenderer, CanvasLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n */\nCanvasVectorLayerRenderer.prototype.compose = function(context, frameState, layerState) {\n  const extent = frameState.extent;\n  const pixelRatio = frameState.pixelRatio;\n  const skippedFeatureUids = layerState.managed ?\n    frameState.skippedFeatureUids : {};\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const rotation = viewState.rotation;\n  const projectionExtent = projection.getExtent();\n  const vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n  let transform = this.getTransform(frameState, 0);\n\n  // clipped rendering if layer extent is set\n  const clipExtent = layerState.extent;\n  const clipped = clipExtent !== undefined;\n  if (clipped) {\n    this.clip(context, frameState,  /** @type {module:ol/extent~Extent} */ (clipExtent));\n  }\n  const replayGroup = this.replayGroup_;\n  if (replayGroup && !replayGroup.isEmpty()) {\n    if (this.declutterTree_) {\n      this.declutterTree_.clear();\n    }\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    let drawOffsetX = 0;\n    let drawOffsetY = 0;\n    let replayContext;\n    const transparentLayer = layerState.opacity !== 1;\n    const hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n    if (transparentLayer || hasRenderListeners) {\n      let drawWidth = context.canvas.width;\n      let drawHeight = context.canvas.height;\n      if (rotation) {\n        const drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n        drawOffsetX = (drawSize - drawWidth) / 2;\n        drawOffsetY = (drawSize - drawHeight) / 2;\n        drawWidth = drawHeight = drawSize;\n      }\n      // resize and clear\n      this.context.canvas.width = drawWidth;\n      this.context.canvas.height = drawHeight;\n      replayContext = this.context;\n    } else {\n      replayContext = context;\n    }\n\n    const alpha = replayContext.globalAlpha;\n    if (!transparentLayer) {\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      replayContext.globalAlpha = layerState.opacity;\n    }\n\n    if (replayContext != context) {\n      replayContext.translate(drawOffsetX, drawOffsetY);\n    }\n\n    const width = frameState.size[0] * pixelRatio;\n    const height = frameState.size[1] * pixelRatio;\n    rotateAtOffset(replayContext, -rotation,\n      width / 2, height / 2);\n    replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n    if (vectorSource.getWrapX() && projection.canWrapX() &&\n        !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        transform = this.getTransform(frameState, offsetX);\n        replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids);\n        startX -= worldWidth;\n      }\n    }\n    rotateAtOffset(replayContext, rotation,\n      width / 2, height / 2);\n\n    if (replayContext != context) {\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (transparentLayer) {\n        const mainContextAlpha = context.globalAlpha;\n        context.globalAlpha = layerState.opacity;\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        context.globalAlpha = mainContextAlpha;\n      } else {\n        context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n      }\n      replayContext.translate(-drawOffsetX, -drawOffsetY);\n    }\n\n    if (!transparentLayer) {\n      replayContext.globalAlpha = alpha;\n    }\n  }\n\n  if (clipped) {\n    context.restore();\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.composeFrame = function(frameState, layerState, context) {\n  const transform = this.getTransform(frameState, 0);\n  this.preCompose(context, frameState, transform);\n  this.compose(context, frameState, layerState);\n  this.postCompose(context, frameState, layerState, transform);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  if (!this.replayGroup_) {\n    return undefined;\n  } else {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    /** @type {!Object.<string, boolean>} */\n    const features = {};\n    const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        const key = getUid(feature).toString();\n        if (!(key in features)) {\n          features[key] = true;\n          return callback.call(thisArg, feature, layer);\n        }\n      }, null);\n    return result;\n  }\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.replayGroup_) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n  const vectorSource = vectorLayer.getSource();\n\n  const animating = frameState.viewHints[ViewHint.ANIMATING];\n  const interacting = frameState.viewHints[ViewHint.INTERACTING];\n  const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n  const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n  if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)) {\n    return true;\n  }\n\n  const frameStateExtent = frameState.extent;\n  const viewState = frameState.viewState;\n  const projection = viewState.projection;\n  const resolution = viewState.resolution;\n  const pixelRatio = frameState.pixelRatio;\n  const vectorLayerRevision = vectorLayer.getRevision();\n  const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n  let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n  if (vectorLayerRenderOrder === undefined) {\n    vectorLayerRenderOrder = defaultRenderOrder;\n  }\n\n  const extent = buffer(frameStateExtent,\n    vectorLayerRenderBuffer * resolution);\n  const projectionExtent = viewState.projection.getExtent();\n\n  if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)) {\n    // For the replay group, we need an extent that intersects the real world\n    // (-180° to +180°). To support geometries in a coordinate range from -540°\n    // to +540°, we add at least 1 world width on each side of the projection\n    // extent. If the viewport is wider than the world, we need to add half of\n    // the viewport width to make sure we cover the whole viewport.\n    const worldWidth = getWidth(projectionExtent);\n    const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n    extent[0] = projectionExtent[0] - gutter;\n    extent[2] = projectionExtent[2] + gutter;\n  }\n\n  if (!this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.renderedExtent_, extent)) {\n    this.replayGroupChanged = false;\n    return true;\n  }\n\n  this.replayGroup_ = null;\n\n  this.dirty_ = false;\n\n  const replayGroup = new CanvasReplayGroup(\n    getRenderTolerance(resolution, pixelRatio), extent, resolution,\n    pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n  vectorSource.loadFeatures(extent, resolution, projection);\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @this {module:ol/renderer/canvas/VectorLayer}\n   */\n  const render = function(feature) {\n    let styles;\n    const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n    if (styleFunction) {\n      styles = styleFunction(feature, resolution);\n    }\n    if (styles) {\n      const dirty = this.renderFeature(\n        feature, resolution, pixelRatio, styles, replayGroup);\n      this.dirty_ = this.dirty_ || dirty;\n    }\n  }.bind(this);\n  if (vectorLayerRenderOrder) {\n    /** @type {Array.<module:ol/Feature>} */\n    const features = [];\n    vectorSource.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        features.push(feature);\n      }, this);\n    features.sort(vectorLayerRenderOrder);\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n  } else {\n    vectorSource.forEachFeatureInExtent(extent, render, this);\n  }\n  replayGroup.finish();\n\n  this.renderedResolution_ = resolution;\n  this.renderedRevision_ = vectorLayerRevision;\n  this.renderedRenderOrder_ = vectorLayerRenderOrder;\n  this.renderedExtent_ = extent;\n  this.replayGroup_ = replayGroup;\n\n  this.replayGroupChanged = true;\n  return true;\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorLayerRenderer.prototype.renderFeature = function(feature, resolution, pixelRatio, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i],\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles,\n      getSquaredRenderTolerance(resolution, pixelRatio),\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid, inherits} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object.<string, Array.<module:ol/render/ReplayType>>}\n */\nconst VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @constructor\n * @extends {module:ol/renderer/canvas/TileLayer}\n * @param {module:ol/layer/VectorTile} layer VectorTile layer.\n * @api\n */\nconst CanvasVectorTileLayerRenderer = function(layer) {\n\n  /**\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context = null;\n\n  CanvasTileLayerRenderer.call(this, layer);\n\n  /**\n   * Declutter tree.\n   * @private\n   */\n  this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.dirty_ = false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.renderedLayerRevision_;\n\n  /**\n   * @private\n   * @type {module:ol/transform~Transform}\n   */\n  this.tmpTransform_ = createTransform();\n\n  // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n  this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n  listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n};\n\ninherits(CanvasVectorTileLayerRenderer, CanvasTileLayerRenderer);\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.disposeInternal = function() {\n  unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n  CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n  if (tile.getState() === TileState.LOADED) {\n    this.createReplayGroup_(tile, pixelRatio, projection);\n    if (this.context) {\n      this.renderTileImage_(tile, pixelRatio, projection);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.prepareFrame = function(frameState, layerState) {\n  const layer = this.getLayer();\n  const layerRevision = layer.getRevision();\n  if (this.renderedLayerRevision_ != layerRevision) {\n    this.renderedTiles.length = 0;\n    const renderMode = layer.getRenderMode();\n    if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n      this.context = createCanvasContext2D();\n    }\n    if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n      this.context = null;\n    }\n  }\n  this.renderedLayerRevision_ = layerRevision;\n  return CanvasTileLayerRenderer.prototype.prepareFrame.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function(tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const revision = layer.getRevision();\n  const renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n  const replayState = tile.getReplayState(layer);\n  if (!replayState.dirty && replayState.renderedRevision == revision &&\n      replayState.renderedRenderOrder == renderOrder) {\n    return;\n  }\n\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const sourceTileGrid = source.getTileGrid();\n  const tileGrid = source.getTileGridForProjection(projection);\n  const resolution = tileGrid.getResolution(tile.tileCoord[0]);\n  const tileExtent = tile.extent;\n\n  const zIndexKeys = {};\n  for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n    const sourceTile = tile.getTile(tile.tileKeys[t]);\n    if (sourceTile.getState() != TileState.LOADED) {\n      continue;\n    }\n\n    const sourceTileCoord = sourceTile.tileCoord;\n    const sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n    const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n    const bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n      buffer(sharedExtent, layer.getRenderBuffer() * resolution, this.tmpExtent);\n    const tileProjection = sourceTile.getProjection();\n    let reproject = false;\n    if (!equivalentProjection(projection, tileProjection)) {\n      reproject = true;\n      sourceTile.setProjection(projection);\n    }\n    replayState.dirty = false;\n    const replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n      pixelRatio, source.getOverlaps(), this.declutterTree_, layer.getRenderBuffer());\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorTileLayer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n        replayState.dirty = replayState.dirty || dirty;\n      }\n    };\n\n    const features = sourceTile.getFeatures();\n    if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n      features.sort(renderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      if (reproject) {\n        if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n          // projected tile extent\n          tileProjection.setWorldExtent(sourceTileExtent);\n          // tile extent in tile pixel space\n          tileProjection.setExtent(sourceTile.getExtent());\n        }\n        feature.getGeometry().transform(tileProjection, projection);\n      }\n      if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n        render.call(this, feature);\n      }\n    }\n    replayGroup.finish();\n    for (const r in replayGroup.getReplays()) {\n      zIndexKeys[r] = true;\n    }\n    sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n  }\n  replayState.renderedRevision = revision;\n  replayState.renderedRenderOrder = renderOrder;\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function(coordinate, frameState, hitTolerance, callback, thisArg) {\n  const resolution = frameState.viewState.resolution;\n  const rotation = frameState.viewState.rotation;\n  hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n  const layer = this.getLayer();\n  /** @type {!Object.<string, boolean>} */\n  const features = {};\n\n  /** @type {Array.<module:ol/VectorImageTile>} */\n  const renderedTiles = this.renderedTiles;\n\n  let bufferedExtent, found;\n  let i, ii, replayGroup;\n  for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n    const tile = renderedTiles[i];\n    bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n    if (!containsCoordinate(bufferedExtent, coordinate)) {\n      continue;\n    }\n    for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n      const sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n    }\n  }\n  return found;\n};\n\n\n/**\n * @param {module:ol/VectorTile} tile Tile.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {module:ol/transform~Transform} transform Transform.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function(tile, frameState) {\n  const layer = this.getLayer();\n  const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n  const tileGrid = source.getTileGrid();\n  const tileCoord = tile.tileCoord;\n  const tileResolution = tileGrid.getResolution(tileCoord[0]);\n  const viewState = frameState.viewState;\n  const pixelRatio = frameState.pixelRatio;\n  const renderResolution = viewState.resolution / pixelRatio;\n  const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n  const center = viewState.center;\n  const origin = getTopLeft(tileExtent);\n  const size = frameState.size;\n  const offsetX = Math.round(pixelRatio * size[0] / 2);\n  const offsetY = Math.round(pixelRatio * size[1] / 2);\n  return composeTransform(this.tmpTransform_,\n    offsetX, offsetY,\n    tileResolution / renderResolution, tileResolution / renderResolution,\n    viewState.rotation,\n    (origin[0] - center[0]) / tileResolution,\n    (center[1] - origin[1]) / tileResolution);\n};\n\n\n/**\n * @param {module:ol/events/Event} event Event.\n */\nCanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function(event) {\n  const layer = this.getLayer();\n  if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n    layer.changed();\n  }\n};\n\n\n/**\n * Handle changes in image style state.\n * @param {module:ol/events/Event} event Image style change event.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function(event) {\n  this.renderIfReadyAndVisible();\n};\n\n\n/**\n * @inheritDoc\n */\nCanvasVectorTileLayerRenderer.prototype.postCompose = function(context, frameState, layerState) {\n  const layer = this.getLayer();\n  const renderMode = layer.getRenderMode();\n  if (renderMode != VectorTileRenderType.IMAGE) {\n    const declutterReplays = layer.getDeclutter() ? {} : null;\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const pixelRatio = frameState.pixelRatio;\n    const rotation = frameState.viewState.rotation;\n    const size = frameState.size;\n    let offsetX, offsetY;\n    if (rotation) {\n      offsetX = Math.round(pixelRatio * size[0] / 2);\n      offsetY = Math.round(pixelRatio * size[1] / 2);\n      rotateAtOffset(context, -rotation, offsetX, offsetY);\n    }\n    if (declutterReplays) {\n      this.declutterTree_.clear();\n    }\n    const tiles = this.renderedTiles;\n    const tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n    const clips = [];\n    const zs = [];\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n      if (tile.getState() == TileState.ABORT) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n      const worldOffset = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tile.extent[0];\n      let transform = undefined;\n      for (let t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        const sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        const replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n        if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n          // sourceTile was not yet loaded when this.createReplayGroup_() was\n          // called, or it has no replays of the types we want to render\n          continue;\n        }\n        if (!transform) {\n          transform = this.getTransform(frameState, worldOffset);\n        }\n        const currentZ = sourceTile.tileCoord[0];\n        const currentClip = replayGroup.getClipCoords(transform);\n        context.save();\n        context.globalAlpha = layerState.opacity;\n        // Create a clip mask for regions in this low resolution tile that are\n        // already filled by a higher resolution tile\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          const clip = clips[j];\n          if (currentZ < zs[j]) {\n            context.beginPath();\n            // counter-clockwise (outer ring) for current tile\n            context.moveTo(currentClip[0], currentClip[1]);\n            context.lineTo(currentClip[2], currentClip[3]);\n            context.lineTo(currentClip[4], currentClip[5]);\n            context.lineTo(currentClip[6], currentClip[7]);\n            // clockwise (inner ring) for higher resolution tile\n            context.moveTo(clip[6], clip[7]);\n            context.lineTo(clip[4], clip[5]);\n            context.lineTo(clip[2], clip[3]);\n            context.lineTo(clip[0], clip[1]);\n            context.clip();\n          }\n        }\n        replayGroup.replay(context, transform, rotation, {}, replayTypes, declutterReplays);\n        context.restore();\n        clips.push(currentClip);\n        zs.push(currentZ);\n      }\n    }\n    if (declutterReplays) {\n      replayDeclutter(declutterReplays, context, rotation);\n    }\n    if (rotation) {\n      rotateAtOffset(context, rotation,\n        /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n    }\n  }\n  CanvasTileLayerRenderer.prototype.postCompose.apply(this, arguments);\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {(module:ol/style/Style|Array.<module:ol/style/Style>)} styles The style or array of styles.\n * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n * @return {boolean} `true` if an image is loading.\n */\nCanvasVectorTileLayerRenderer.prototype.renderFeature = function(feature, squaredTolerance, styles, replayGroup) {\n  if (!styles) {\n    return false;\n  }\n  let loading = false;\n  if (Array.isArray(styles)) {\n    for (let i = 0, ii = styles.length; i < ii; ++i) {\n      loading = renderFeature(\n        replayGroup, feature, styles[i], squaredTolerance,\n        this.handleStyleImageChange_, this) || loading;\n    }\n  } else {\n    loading = renderFeature(\n      replayGroup, feature, styles, squaredTolerance,\n      this.handleStyleImageChange_, this);\n  }\n  return loading;\n};\n\n\n/**\n * @param {module:ol/VectorImageTile} tile Tile.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nCanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function(\n  tile, pixelRatio, projection) {\n  const layer = this.getLayer();\n  const replayState = tile.getReplayState(layer);\n  const revision = layer.getRevision();\n  const replays = IMAGE_REPLAYS[layer.getRenderMode()];\n  if (replays && replayState.renderedTileRevision !== revision) {\n    replayState.renderedTileRevision = revision;\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    const tileGrid = source.getTileGridForProjection(projection);\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    for (let i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n      const sourceTile = tile.getTile(tile.tileKeys[i]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const pixelScale = pixelRatio / resolution;\n      const transform = resetTransform(this.tmpTransform_);\n      scaleTransform(transform, pixelScale, -pixelScale);\n      translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n      const replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n      replayGroup.replay(context, transform, 0, {}, replays);\n    }\n  }\n};\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/Map\n */\nimport {inherits} from './util.js';\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @constructor\n * @extends {module:ol/PluggableMap}\n * @param {module:ol/PluggableMap~MapOptions} options Map options.\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nconst Map = function(options) {\n  options = assign({}, options);\n  if (!options.controls) {\n    options.controls = defaultControls();\n  }\n  if (!options.interactions) {\n    options.interactions = defaultInteractions();\n  }\n\n  PluggableMap.call(this, options);\n};\n\ninherits(Map, PluggableMap);\n\nMap.prototype.createRenderer = function() {\n  const renderer = new CanvasMapRenderer(this);\n  renderer.registerLayerRenderers([\n    CanvasImageLayerRenderer,\n    CanvasTileLayerRenderer,\n    CanvasVectorLayerRenderer,\n    CanvasVectorTileLayerRenderer\n  ]);\n  return renderer;\n};\n\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/layer/Tile\n */\nimport {inherits} from '../util.js';\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @constructor\n * @extends {module:ol/layer/Layer}\n * @fires module:ol/render/Event~RenderEvent\n * @param {module:ol/layer/Tile~Options=} opt_options Tile layer options.\n * @api\n */\nconst TileLayer = function(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const baseOptions = assign({}, options);\n\n  delete baseOptions.preload;\n  delete baseOptions.useInterimTilesOnError;\n  Layer.call(this,  /** @type {module:ol/layer/Layer~Options} */ (baseOptions));\n\n  this.setPreload(options.preload !== undefined ? options.preload : 0);\n  this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n    options.useInterimTilesOnError : true);\n\n  /**\n   * The layer type.\n   * @protected\n   * @type {module:ol/LayerType}\n   */\n  this.type = LayerType.TILE;\n\n};\n\ninherits(TileLayer, Layer);\n\n\n/**\n * Return the level as number to which we will preload tiles up to.\n * @return {number} The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.getPreload = function() {\n  return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n};\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\n/**\n * Set the level as number to which we will preload tiles up to.\n * @param {number} preload The level to preload tiles up to.\n * @observable\n * @api\n */\nTileLayer.prototype.setPreload = function(preload) {\n  this.set(TileProperty.PRELOAD, preload);\n};\n\n\n/**\n * Whether we use interim tiles on error.\n * @return {boolean} Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.getUseInterimTilesOnError = function() {\n  return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n};\n\n\n/**\n * Set whether we use interim tiles on error.\n * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n * @observable\n * @api\n */\nTileLayer.prototype.setUseInterimTilesOnError = function(useInterimTilesOnError) {\n  this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n};\nexport default TileLayer;\n","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n/**\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @constructor\n * @struct\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nconst Atlas = function(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object.<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function(id) {\n  return this.entries_[id] || null;\n};\n\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function(id, width, height, renderCallback, opt_this) {\n  for (let i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    const block = this.emptyBlocks_[i];\n    if (block.width >= width + this.space_ &&\n        block.height >= height + this.space_) {\n      // we found a block that is big enough for our entry\n      const entry = {\n        offsetX: block.x + this.space_,\n        offsetY: block.y + this.space_,\n        image: this.canvas_\n      };\n      this.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this.context_,\n        block.x + this.space_, block.y + this.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this.split_(i, block, width + this.space_, height + this.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function(index, block, width, height) {\n  const deltaWidth = block.width - width;\n  const deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  let newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function(index, newBlock1, newBlock2) {\n  const args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\nexport default Atlas;\n","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {UNDEFINED} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nconst INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nconst MAX_ATLAS_SIZE = -1;\n\n\n/**\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n *\n * @constructor\n * @struct\n * @api\n * @param {module:ol/style/AtlasManager~Options=} opt_options Options.\n */\nconst AtlasManager = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function(id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {Array.<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *    or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function(atlases, id) {\n  for (let i = 0, ii = atlases.length; i < ii; ++i) {\n    const atlas = atlases[i];\n    const info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *    image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *    entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function(info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=}\n *    opt_renderHitCallback Called to render a hit-detection image onto a hit\n *    detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}  The position and atlas image for the\n *    entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function(id, width, height,\n  renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  const info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  const renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : UNDEFINED;\n\n  const hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *    Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *    `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}  The position and atlas image for the entry,\n *    or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function(isHitAtlas, id, width, height, renderCallback, opt_this) {\n  const atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  let atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      let size;\n      if (isHitAtlas) {\n        size = Math.min(this.currentHitSize_ * 2, this.maxSize_);\n        this.currentHitSize_ = size;\n      } else {\n        size = Math.min(this.currentSize_ * 2, this.maxSize_);\n        this.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\nexport default AtlasManager;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/style/IconImage\n */\nimport {inherits} from '../util.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/EventTarget.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\n/**\n * @constructor\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string|undefined} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @extends {module:ol/events/EventTarget}\n */\nconst IconImage = function(image, src, size, crossOrigin, imageState, color) {\n\n  EventTarget.call(this);\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.hitDetectionImage_ = null;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = !image ? new Image() : image;\n\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = color ?\n    /** @type {HTMLCanvasElement} */ (document.createElement('CANVAS')) :\n    null;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = color;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/ImageState}\n   */\n  this.imageState_ = imageState;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = size;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.tainting_ = false;\n  if (this.imageState_ == ImageState.LOADED) {\n    this.determineTainting_();\n  }\n\n};\n\ninherits(IconImage, EventTarget);\n\n\n/**\n * @param {Image|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\n/**\n * @private\n */\nIconImage.prototype.determineTainting_ = function() {\n  const context = createCanvasContext2D(1, 1);\n  try {\n    context.drawImage(this.image_, 0, 0);\n    context.getImageData(0, 0, 1, 1);\n  } catch (e) {\n    this.tainting_ = true;\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.dispatchChangeEvent_ = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageError_ = function() {\n  this.imageState_ = ImageState.ERROR;\n  this.unlistenImage_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.handleImageLoad_ = function() {\n  this.imageState_ = ImageState.LOADED;\n  if (this.size_) {\n    this.image_.width = this.size_[0];\n    this.image_.height = this.size_[1];\n  }\n  this.size_ = [this.image_.width, this.image_.height];\n  this.unlistenImage_();\n  this.determineTainting_();\n  this.replaceColor_();\n  this.dispatchChangeEvent_();\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n */\nIconImage.prototype.getImage = function(pixelRatio) {\n  return this.canvas_ ? this.canvas_ : this.image_;\n};\n\n\n/**\n * @return {module:ol/ImageState} Image state.\n */\nIconImage.prototype.getImageState = function() {\n  return this.imageState_;\n};\n\n\n/**\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image element.\n */\nIconImage.prototype.getHitDetectionImage = function(pixelRatio) {\n  if (!this.hitDetectionImage_) {\n    if (this.tainting_) {\n      const width = this.size_[0];\n      const height = this.size_[1];\n      const context = createCanvasContext2D(width, height);\n      context.fillRect(0, 0, width, height);\n      this.hitDetectionImage_ = context.canvas;\n    } else {\n      this.hitDetectionImage_ = this.image_;\n    }\n  }\n  return this.hitDetectionImage_;\n};\n\n\n/**\n * @return {module:ol/size~Size} Image size.\n */\nIconImage.prototype.getSize = function() {\n  return this.size_;\n};\n\n\n/**\n * @return {string|undefined} Image src.\n */\nIconImage.prototype.getSrc = function() {\n  return this.src_;\n};\n\n\n/**\n * Load not yet loaded URI.\n */\nIconImage.prototype.load = function() {\n  if (this.imageState_ == ImageState.IDLE) {\n    this.imageState_ = ImageState.LOADING;\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    try {\n      this.image_.src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n  }\n};\n\n\n/**\n * @private\n */\nIconImage.prototype.replaceColor_ = function() {\n  if (this.tainting_ || this.color_ === null) {\n    return;\n  }\n\n  this.canvas_.width = this.image_.width;\n  this.canvas_.height = this.image_.height;\n\n  const ctx = this.canvas_.getContext('2d');\n  ctx.drawImage(this.image_, 0, 0);\n\n  const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n  const data = imgData.data;\n  const r = this.color_[0] / 255.0;\n  const g = this.color_[1] / 255.0;\n  const b = this.color_[2] / 255.0;\n\n  for (let i = 0, ii = data.length; i < ii; i += 4) {\n    data[i] *= r;\n    data[i + 1] *= g;\n    data[i + 2] *= b;\n  }\n  ctx.putImageData(imgData, 0, 0);\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nIconImage.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\nexport default IconImage;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Icon\n */\nimport {getUid, inherits} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array.<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {Image|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array.<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [snapToPixel=true] If `true` integral numbers of pixels are used as the X and Y pixel coordinate\n * when drawing the icon in the output canvas. If `false` fractional numbers may be used. Using `true` allows for\n * \"sharp\" rendering (no blur), while using `false` allows for \"accurate\" rendering. Note that accuracy is important if\n * the icon's position is animated. Without it, the icon may jitter noticeably.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Icon~Options=} opt_options Options.\n * @extends {module:ol/style/Image}\n * @api\n */\nconst Icon = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.normalizedAnchor_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n    options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n    options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconAnchorUnits}\n   */\n  this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n    options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @type {Image|HTMLCanvasElement}\n   */\n  const image = options.img !== undefined ? options.img : null;\n\n  /**\n   * @type {module:ol/size~Size}\n   */\n  const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n  /**\n   * @type {string|undefined}\n   */\n  let src = options.src;\n\n  assert(!(src !== undefined && image),\n    4); // `image` and `src` cannot be provided at the same time\n  assert(!image || (image && imgSize),\n    5); // `imgSize` must be set when `image` is provided\n\n  if ((src === undefined || src.length === 0) && image) {\n    src = image.src || getUid(image).toString();\n  }\n  assert(src !== undefined && src.length > 0,\n    6); // A defined and non-empty `src` or `image` must be provided\n\n  /**\n   * @type {module:ol/ImageState}\n   */\n  const imageState = options.src !== undefined ?\n    ImageState.IDLE : ImageState.LOADED;\n\n  /**\n   * @private\n   * @type {module:ol/color~Color}\n   */\n  this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/IconImage}\n   */\n  this.iconImage_ = getIconImage(\n    image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n  /**\n   * @private\n   * @type {module:ol/style/IconOrigin}\n   */\n  this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n    options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.origin_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.size_ = options.size !== undefined ? options.size : null;\n\n  /**\n   * @type {number}\n   */\n  const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const rotateWithView = options.rotateWithView !== undefined ?\n    options.rotateWithView : false;\n\n  /**\n   * @type {number}\n   */\n  const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n  /**\n   * @type {number}\n   */\n  const scale = options.scale !== undefined ? options.scale : 1;\n\n  /**\n   * @type {boolean}\n   */\n  const snapToPixel = options.snapToPixel !== undefined ?\n    options.snapToPixel : true;\n\n  ImageStyle.call(this, {\n    opacity: opacity,\n    rotation: rotation,\n    scale: scale,\n    snapToPixel: snapToPixel,\n    rotateWithView: rotateWithView\n  });\n\n};\n\ninherits(Icon, ImageStyle);\n\n\n/**\n * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n * @return {module:ol/style/Icon} The cloned style.\n * @api\n */\nIcon.prototype.clone = function() {\n  return new Icon({\n    anchor: this.anchor_.slice(),\n    anchorOrigin: this.anchorOrigin_,\n    anchorXUnits: this.anchorXUnits_,\n    anchorYUnits: this.anchorYUnits_,\n    crossOrigin: this.crossOrigin_,\n    color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n    src: this.getSrc(),\n    offset: this.offset_.slice(),\n    offsetOrigin: this.offsetOrigin_,\n    size: this.size_ !== null ? this.size_.slice() : undefined,\n    opacity: this.getOpacity(),\n    scale: this.getScale(),\n    snapToPixel: this.getSnapToPixel(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView()\n  });\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getAnchor = function() {\n  if (this.normalizedAnchor_) {\n    return this.normalizedAnchor_;\n  }\n  let anchor = this.anchor_;\n  const size = this.getSize();\n  if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n    if (!size) {\n      return null;\n    }\n    anchor = this.anchor_.slice();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[0] *= size[0];\n    }\n    if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      anchor[1] *= size[1];\n    }\n  }\n\n  if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n    if (!size) {\n      return null;\n    }\n    if (anchor === this.anchor_) {\n      anchor = this.anchor_.slice();\n    }\n    if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[0] = -anchor[0] + size[0];\n    }\n    if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      anchor[1] = -anchor[1] + size[1];\n    }\n  }\n  this.normalizedAnchor_ = anchor;\n  return this.normalizedAnchor_;\n};\n\n\n/**\n * Get the icon color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nIcon.prototype.getColor = function() {\n  return this.color_;\n};\n\n\n/**\n * Get the image icon.\n * @param {number} pixelRatio Pixel ratio.\n * @return {Image|HTMLCanvasElement} Image or Canvas element.\n * @override\n * @api\n */\nIcon.prototype.getImage = function(pixelRatio) {\n  return this.iconImage_.getImage(pixelRatio);\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageSize = function() {\n  return this.iconImage_.getSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImageSize = function() {\n  return this.getImageSize();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getImageState = function() {\n  return this.iconImage_.getImageState();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.getHitDetectionImage = function(pixelRatio) {\n  return this.iconImage_.getHitDetectionImage(pixelRatio);\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getOrigin = function() {\n  if (this.origin_) {\n    return this.origin_;\n  }\n  let offset = this.offset_;\n\n  if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n    const size = this.getSize();\n    const iconImageSize = this.iconImage_.getSize();\n    if (!size || !iconImageSize) {\n      return null;\n    }\n    offset = offset.slice();\n    if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[0] = iconImageSize[0] - size[0] - offset[0];\n    }\n    if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n      offset[1] = iconImageSize[1] - size[1] - offset[1];\n    }\n  }\n  this.origin_ = offset;\n  return this.origin_;\n};\n\n\n/**\n * Get the image URL.\n * @return {string|undefined} Image src.\n * @api\n */\nIcon.prototype.getSrc = function() {\n  return this.iconImage_.getSrc();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nIcon.prototype.getSize = function() {\n  return !this.size_ ? this.iconImage_.getSize() : this.size_;\n};\n\n\n/**\n * @override\n */\nIcon.prototype.listenImageChange = function(listener, thisArg) {\n  return listen(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\n\n\n/**\n * Load not yet loaded URI.\n * When rendering a feature with an icon style, the vector renderer will\n * automatically call this method. However, you might want to call this\n * method yourself for preloading or other purposes.\n * @override\n * @api\n */\nIcon.prototype.load = function() {\n  this.iconImage_.load();\n};\n\n\n/**\n * @override\n */\nIcon.prototype.unlistenImageChange = function(listener, thisArg) {\n  unlisten(this.iconImage_, EventType.CHANGE,\n    listener, thisArg);\n};\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font}. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array.<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n *\n * @constructor\n * @param {module:ol/style/Text~Options=} opt_options Options.\n * @api\n */\nconst Text = function(opt_options) {\n\n  const options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.font_ = options.font;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {boolean|undefined}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.scale_ = options.scale;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.text_ = options.text;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textAlign_ = options.textAlign;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n   * @private\n   * @type {module:ol/style/TextPlacement|string}\n   */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.overflow_ = !!options.overflow;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n   * @private\n   * @type {Array.<number>}\n   */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n\n/**\n * Clones the style.\n * @return {module:ol/style/Text} The cloned style.\n * @api\n */\nText.prototype.clone = function() {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n\n/**\n * Get the `overflow` configuration.\n * @return {boolean} Let text overflow the length of the path they follow.\n * @api\n */\nText.prototype.getOverflow = function() {\n  return this.overflow_;\n};\n\n\n/**\n * Get the font name.\n * @return {string|undefined} Font.\n * @api\n */\nText.prototype.getFont = function() {\n  return this.font_;\n};\n\n\n/**\n * Get the maximum angle between adjacent characters.\n * @return {number} Angle in radians.\n * @api\n */\nText.prototype.getMaxAngle = function() {\n  return this.maxAngle_;\n};\n\n\n/**\n * Get the label placement.\n * @return {module:ol/style/TextPlacement|string} Text placement.\n * @api\n */\nText.prototype.getPlacement = function() {\n  return this.placement_;\n};\n\n\n/**\n * Get the x-offset for the text.\n * @return {number} Horizontal text offset.\n * @api\n */\nText.prototype.getOffsetX = function() {\n  return this.offsetX_;\n};\n\n\n/**\n * Get the y-offset for the text.\n * @return {number} Vertical text offset.\n * @api\n */\nText.prototype.getOffsetY = function() {\n  return this.offsetY_;\n};\n\n\n/**\n * Get the fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getFill = function() {\n  return this.fill_;\n};\n\n\n/**\n * Determine whether the text rotates with the map.\n * @return {boolean|undefined} Rotate with map.\n * @api\n */\nText.prototype.getRotateWithView = function() {\n  return this.rotateWithView_;\n};\n\n\n/**\n * Get the text rotation.\n * @return {number|undefined} Rotation.\n * @api\n */\nText.prototype.getRotation = function() {\n  return this.rotation_;\n};\n\n\n/**\n * Get the text scale.\n * @return {number|undefined} Scale.\n * @api\n */\nText.prototype.getScale = function() {\n  return this.scale_;\n};\n\n\n/**\n * Get the stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getStroke = function() {\n  return this.stroke_;\n};\n\n\n/**\n * Get the text to be rendered.\n * @return {string|undefined} Text.\n * @api\n */\nText.prototype.getText = function() {\n  return this.text_;\n};\n\n\n/**\n * Get the text alignment.\n * @return {string|undefined} Text align.\n * @api\n */\nText.prototype.getTextAlign = function() {\n  return this.textAlign_;\n};\n\n\n/**\n * Get the text baseline.\n * @return {string|undefined} Text baseline.\n * @api\n */\nText.prototype.getTextBaseline = function() {\n  return this.textBaseline_;\n};\n\n\n/**\n * Get the background fill style for the text.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nText.prototype.getBackgroundFill = function() {\n  return this.backgroundFill_;\n};\n\n\n/**\n * Get the background stroke style for the text.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nText.prototype.getBackgroundStroke = function() {\n  return this.backgroundStroke_;\n};\n\n\n/**\n * Get the padding for the text.\n * @return {Array.<number>} Padding.\n * @api\n */\nText.prototype.getPadding = function() {\n  return this.padding_;\n};\n\n\n/**\n * Set the `overflow` property.\n *\n * @param {boolean} overflow Let text overflow the path that it follows.\n * @api\n */\nText.prototype.setOverflow = function(overflow) {\n  this.overflow_ = overflow;\n};\n\n\n/**\n * Set the font.\n *\n * @param {string|undefined} font Font.\n * @api\n */\nText.prototype.setFont = function(font) {\n  this.font_ = font;\n};\n\n\n/**\n * Set the maximum angle between adjacent characters.\n *\n * @param {number} maxAngle Angle in radians.\n * @api\n */\nText.prototype.setMaxAngle = function(maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n\n/**\n * Set the x offset.\n *\n * @param {number} offsetX Horizontal text offset.\n * @api\n */\nText.prototype.setOffsetX = function(offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n\n/**\n * Set the y offset.\n *\n * @param {number} offsetY Vertical text offset.\n * @api\n */\nText.prototype.setOffsetY = function(offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n\n/**\n * Set the text placement.\n *\n * @param {module:ol/style/TextPlacement|string} placement Placement.\n * @api\n */\nText.prototype.setPlacement = function(placement) {\n  this.placement_ = placement;\n};\n\n\n/**\n * Set the fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setFill = function(fill) {\n  this.fill_ = fill;\n};\n\n\n/**\n * Set the rotation.\n *\n * @param {number|undefined} rotation Rotation.\n * @api\n */\nText.prototype.setRotation = function(rotation) {\n  this.rotation_ = rotation;\n};\n\n\n/**\n * Set the scale.\n *\n * @param {number|undefined} scale Scale.\n * @api\n */\nText.prototype.setScale = function(scale) {\n  this.scale_ = scale;\n};\n\n\n/**\n * Set the stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setStroke = function(stroke) {\n  this.stroke_ = stroke;\n};\n\n\n/**\n * Set the text.\n *\n * @param {string|undefined} text Text.\n * @api\n */\nText.prototype.setText = function(text) {\n  this.text_ = text;\n};\n\n\n/**\n * Set the text alignment.\n *\n * @param {string|undefined} textAlign Text align.\n * @api\n */\nText.prototype.setTextAlign = function(textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n\n/**\n * Set the text baseline.\n *\n * @param {string|undefined} textBaseline Text baseline.\n * @api\n */\nText.prototype.setTextBaseline = function(textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n\n/**\n * Set the background fill.\n *\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nText.prototype.setBackgroundFill = function(fill) {\n  this.backgroundFill_ = fill;\n};\n\n\n/**\n * Set the background stroke.\n *\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nText.prototype.setBackgroundStroke = function(stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n\n/**\n * Set the padding (`[top, right, bottom, left]`).\n *\n * @param {!Array.<number>} padding Padding.\n * @api\n */\nText.prototype.setPadding = function(padding) {\n  this.padding_ = padding;\n};\nexport default Text;\n","/**\n * @module ol/style\n */\n\n\nexport {default as Atlas} from './style/Atlas.js';\nexport {default as AtlasManager} from './style/AtlasManager.js';\nexport {default as Circle} from './style/Circle.js';\nexport {default as Fill} from './style/Fill.js';\nexport {default as Icon} from './style/Icon.js';\nexport {default as IconImage} from './style/IconImage.js';\nexport {default as Image} from './style/Image.js';\nexport {default as RegularShape} from './style/RegularShape.js';\nexport {default as Stroke} from './style/Stroke.js';\nexport {default as Style} from './style/Style.js';\nexport {default as Text} from './style/Text.js';\n","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} extent Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} dataProjection Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} featureProjection Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @constructor\n * @abstract\n * @api\n */\nconst FeatureFormat = function() {\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function(source, opt_options) {\n  let options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n *     Options.\n * @protected\n * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n *     Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function(options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {module:ol/extent~Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function() {\n  return null;\n};\n\n\n/**\n * @abstract\n * @return {module:ol/format/FormatType} Format.\n */\nFeatureFormat.prototype.getType = function() {};\n\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nFeatureFormat.prototype.readFeature = function(source, opt_options) {};\n\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n */\nFeatureFormat.prototype.readFeatures = function(source, opt_options) {};\n\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function(source, opt_options) {};\n\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n */\nFeatureFormat.prototype.readProjection = function(source) {};\n\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function(feature, opt_options) {};\n\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function(features, opt_options) {};\n\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function(geometry, opt_options) {};\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {(module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions)=} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  const dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  let transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    const power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array.<number>} coordinates Coordinates.\n     * @return {Array.<number>} Transformed coordinates.\n     */\n    const transform = function(coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Node, Array.<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Node, *, Array.<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport const DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array.<string>} accumulator Accumulator.\n * @private\n * @return {Array.<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\nexport function isDocument(value) {\n  return value instanceof Document;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\nexport function isNode(value) {\n  return value instanceof Node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): (Array.<*>|undefined)}\n *     valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array.<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        let array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array.<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array.<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      const value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        const property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    const parent = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    const parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array.<*>)}\n *     nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  let serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array.<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  const fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array.<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      const context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      const namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object.<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array.<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array.<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array.<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object.<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object.<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object.<string, T>}\n   */\n  const structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  const length = (opt_keys !== undefined ? opt_keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object.<string, Object.<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array.<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array.<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array.<*>} objectStack Node stack.\n * @param {Array.<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n","/**\n * @module ol/format/XMLFeature\n */\nimport {inherits} from '../util.js';\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/format/Feature}\n */\nconst XMLFeature = function() {\n\n  /**\n   * @type {XMLSerializer}\n   * @private\n   */\n  this.xmlSerializer_ = new XMLSerializer();\n\n  FeatureFormat.call(this);\n};\n\ninherits(XMLFeature, FeatureFormat);\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.getType = function() {\n  return FormatType.XML;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeature = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeatureFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromDocument = function(doc, opt_options) {\n  const features = this.readFeaturesFromDocument(doc, opt_options);\n  if (features.length > 0) {\n    return features[0];\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/Feature} Feature.\n */\nXMLFeature.prototype.readFeatureFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readFeatures = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readFeaturesFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readFeaturesFromDocument(doc, opt_options);\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromDocument = function(doc, opt_options) {\n  /** @type {Array.<module:ol/Feature>} */\n  const features = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(features, this.readFeaturesFromNode(n, opt_options));\n    }\n  }\n  return features;\n};\n\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {Array.<module:ol/Feature>} Features.\n */\nXMLFeature.prototype.readFeaturesFromNode = function(node, opt_options) {};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readGeometry = function(source, opt_options) {\n  if (isDocument(source)) {\n    return this.readGeometryFromDocument(\n      /** @type {Document} */ (source), opt_options);\n  } else if (isNode(source)) {\n    return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readGeometryFromDocument(doc, opt_options);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromDocument = function(doc, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @protected\n * @return {module:ol/geom/Geometry} Geometry.\n */\nXMLFeature.prototype.readGeometryFromNode = function(node, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.readProjection = function(source) {\n  if (isDocument(source)) {\n    return this.readProjectionFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readProjectionFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readProjectionFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromDocument = function(doc) {\n  return this.dataProjection;\n};\n\n\n/**\n * @param {Node} node Node.\n * @protected\n * @return {module:ol/proj/Projection} Projection.\n */\nXMLFeature.prototype.readProjectionFromNode = function(node) {\n  return this.dataProjection;\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeature = function(feature, opt_options) {\n  const node = this.writeFeatureNode(feature, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @protected\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeatureNode = function(feature, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeFeatures = function(features, opt_options) {\n  const node = this.writeFeaturesNode(features, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeFeaturesNode = function(features, opt_options) {\n  return null; // not implemented\n};\n\n\n/**\n * @inheritDoc\n */\nXMLFeature.prototype.writeGeometry = function(geometry, opt_options) {\n  const node = this.writeGeometryNode(geometry, opt_options);\n  return this.xmlSerializer_.serializeToString(node);\n};\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n */\nXMLFeature.prototype.writeGeometryNode = function(geometry, opt_options) {\n  return null; // not implemented\n};\nexport default XMLFeature;\n","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport {inherits} from '../util.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @constructor\n * @extends {module:ol/geom/Geometry}\n * @param {Array.<module:ol/geom/Geometry>=} opt_geometries Geometries.\n * @api\n */\nconst GeometryCollection = function(opt_geometries) {\n\n  Geometry.call(this);\n\n  /**\n   * @private\n   * @type {Array.<module:ol/geom/Geometry>}\n   */\n  this.geometries_ = opt_geometries ? opt_geometries : null;\n\n  this.listenGeometriesChange_();\n};\n\ninherits(GeometryCollection, Geometry);\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array.<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.unlistenGeometriesChange_ = function() {\n  if (!this.geometries_) {\n    return;\n  }\n  for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    unlisten(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * @private\n */\nGeometryCollection.prototype.listenGeometriesChange_ = function() {\n  if (!this.geometries_) {\n    return;\n  }\n  for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n    listen(\n      this.geometries_[i], EventType.CHANGE,\n      this.changed, this);\n  }\n};\n\n\n/**\n * Make a complete copy of the geometry.\n * @return {!module:ol/geom/GeometryCollection} Clone.\n * @override\n * @api\n */\nGeometryCollection.prototype.clone = function() {\n  const geometryCollection = new GeometryCollection(null);\n  geometryCollection.setGeometries(this.geometries_);\n  return geometryCollection;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.closestPointXY = function(x, y, closestPoint, minSquaredDistance) {\n  if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n    return minSquaredDistance;\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    minSquaredDistance = geometries[i].closestPointXY(\n      x, y, closestPoint, minSquaredDistance);\n  }\n  return minSquaredDistance;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.containsXY = function(x, y) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].containsXY(x, y)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.computeExtent = function(extent) {\n  createOrUpdateEmpty(extent);\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    extend(extent, geometries[i].getExtent());\n  }\n  return extent;\n};\n\n\n/**\n * Return the geometries that make up this geometry collection.\n * @return {Array.<module:ol/geom/Geometry>} Geometries.\n * @api\n */\nGeometryCollection.prototype.getGeometries = function() {\n  return cloneGeometries(this.geometries_);\n};\n\n\n/**\n * @return {Array.<module:ol/geom/Geometry>} Geometries.\n */\nGeometryCollection.prototype.getGeometriesArray = function() {\n  return this.geometries_;\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.getSimplifiedGeometry = function(squaredTolerance) {\n  if (this.simplifiedGeometryRevision != this.getRevision()) {\n    clear(this.simplifiedGeometryCache);\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n    this.simplifiedGeometryRevision = this.getRevision();\n  }\n  if (squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n       squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n    return this;\n  }\n  const key = squaredTolerance.toString();\n  if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n    return this.simplifiedGeometryCache[key];\n  } else {\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.getType = function() {\n  return GeometryType.GEOMETRY_COLLECTION;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.intersectsExtent = function(extent) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    if (geometries[i].intersectsExtent(extent)) {\n      return true;\n    }\n  }\n  return false;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nGeometryCollection.prototype.isEmpty = function() {\n  return this.geometries_.length === 0;\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.rotate = function(angle, anchor) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].rotate(angle, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.scale = function(sx, opt_sy, opt_anchor) {\n  let anchor = opt_anchor;\n  if (!anchor) {\n    anchor = getCenter(this.getExtent());\n  }\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].scale(sx, opt_sy, anchor);\n  }\n  this.changed();\n};\n\n\n/**\n * Set the geometries that make up this geometry collection.\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n * @api\n */\nGeometryCollection.prototype.setGeometries = function(geometries) {\n  this.setGeometriesArray(cloneGeometries(geometries));\n};\n\n\n/**\n * @param {Array.<module:ol/geom/Geometry>} geometries Geometries.\n */\nGeometryCollection.prototype.setGeometriesArray = function(geometries) {\n  this.unlistenGeometriesChange_();\n  this.geometries_ = geometries;\n  this.listenGeometriesChange_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nGeometryCollection.prototype.applyTransform = function(transformFn) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].applyTransform(transformFn);\n  }\n  this.changed();\n};\n\n\n/**\n * Translate the geometry.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @override\n * @api\n */\nGeometryCollection.prototype.translate = function(deltaX, deltaY) {\n  const geometries = this.geometries_;\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    geometries[i].translate(deltaX, deltaY);\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nGeometryCollection.prototype.disposeInternal = function() {\n  this.unlistenGeometriesChange_();\n  Geometry.prototype.disposeInternal.call(this);\n};\nexport default GeometryCollection;\n","/**\n * @module ol/format/KML\n */\nimport {inherits} from '../util.js';\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from '../format/xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, isNode, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {module:ol/style/IconAnchorUnits} xunits\n * @property {number} y\n * @property {module:ol/style/IconAnchorUnits} yunits\n * @property {module:ol/style/IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array.<number>} flatCoordinates\n * @property {Array.<number>} whens\n */\n\n/**\n * @type {module:ol/color~Color}\n */\nlet DEFAULT_COLOR;\n\n/**\n * @type {module:ol/style/Fill}\n */\nlet DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {module:ol/style/Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nlet DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {module:ol/size~Size}\n */\nlet DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nlet DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nlet DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {module:ol/style/Image}\n */\nlet DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {module:ol/style/Image} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nlet DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {module:ol/style/Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {module:ol/style/Stroke}\n */\nlet DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {module:ol/style/Text}\n */\nlet DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {module:ol/style/Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {module:ol/style/Style}\n */\nlet DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {module:ol/style/Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array.<module:ol/style/Style>}\n */\nlet DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array.<module:ol/style/Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array.<module:ol/style/Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @constructor\n * @extends {module:ol/format/XMLFeature}\n * @param {module:ol/format/KML~Options=} opt_options Options.\n * @api\n */\nconst KML = function(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  XMLFeature.call(this);\n\n  if (!DEFAULT_STYLE_ARRAY) {\n    createStyleDefaults();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  this.dataProjection = getProjection('EPSG:4326');\n\n  /**\n   * @private\n   * @type {Array.<module:ol/style/Style>}\n   */\n  this.defaultStyle_ = options.defaultStyle ?\n    options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.extractStyles_ = options.extractStyles !== undefined ?\n    options.extractStyles : true;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.writeStyles_ = options.writeStyles !== undefined ?\n    options.writeStyles : true;\n\n  /**\n   * @private\n   * @type {!Object.<string, (Array.<module:ol/style/Style>|string)>}\n   */\n  this.sharedStyles_ = {};\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.showPointNames_ = options.showPointNames !== undefined ?\n    options.showPointNames : true;\n\n};\n\ninherits(KML, XMLFeature);\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array.<null|string>}\n */\nconst NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nconst SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object.<string, module:ol/style/IconAnchorUnits>}\n */\nconst ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n\n/**\n * @param {module:ol/style/Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {module:ol/style/Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  let textStyle = null;\n  const textOffset = [0, 0];\n  let textAlign = 'start';\n  if (foundStyle.getImage()) {\n    let imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      const imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    const foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  const nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {module:ol/style/Style~StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {module:ol/Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array.<module:ol/style/Style>} Style.\n     */\n    function(feature, resolution) {\n      let drawName = showPointNames;\n      /** @type {module:ol/style/Style|undefined} */\n      let nameStyle;\n      let name = '';\n      if (drawName) {\n        const geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        const foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array.<module:ol/style/Style>|string|undefined} styleValue Style value.\n * @param {Array.<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object.<string, (Array.<module:ol/style/Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/color~Color|undefined} Color.\n */\nfunction readColor(node) {\n  const s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  const m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    const hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  let s = getAllTextContent(node, false);\n  const flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  const re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  let m;\n  while ((m = re.exec(s))) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  const s = getAllTextContent(node, false).trim();\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/KML~Vec2} Vec2.\n */\nfunction readVec2(node) {\n  const xunits = node.getAttribute('xunits');\n  const yunits = node.getAttribute('yunits');\n  let origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  const object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const IconObject = 'Icon' in object ? object['Icon'] : {};\n  const drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  let src;\n  const href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  let anchor, anchorXUnits, anchorYUnits;\n  let anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  const hotSpot = /** @type {module:ol/format/KML~Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  let offset;\n  const x = /** @type {number|undefined} */\n      (IconObject['x']);\n  const y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  let size;\n  const w = /** @type {number|undefined} */\n      (IconObject['w']);\n  const h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  let rotation;\n  const heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  let scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    const imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {module:ol/color~Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  const object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const strokeStyle = new Stroke({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  const object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const styleObject = objectStack[objectStack.length - 1];\n  const fillStyle = new Fill({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  const fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  const outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const s = getAllTextContent(node, false);\n  const re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  const m = re.exec(s);\n  if (m) {\n    const x = parseFloat(m[1]);\n    const y = parseFloat(m[2]);\n    const z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  const lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  const multiLineString = new MultiLineString(null);\n  multiLineString.setLineStrings(lineStrings);\n  return multiLineString;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  const gxTrackObject = pushParseAndPop(\n    /** @type {module:ol/format/KML~GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  const flatCoordinates = gxTrackObject.flatCoordinates;\n  const whens = gxTrackObject.whens;\n  for (let i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  const lineString = new LineString(null);\n  lineString.setFlatCoordinates(GeometryLayout.XYZM, flatCoordinates);\n  return lineString;\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  const iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const lineString = new LineString(null);\n    lineString.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const polygon = new Polygon(null);\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates,\n      [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  const geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {module:ol/geom/Geometry} */\n  let multiGeometry;\n  let homogeneous = true;\n  const type = geometries[0].getType();\n  let geometry;\n  for (let i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    let layout;\n    let flatCoordinates;\n    if (type == GeometryType.POINT) {\n      const point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (let i = 1, ii = geometries.length; i < ii; ++i) {\n        geometry = geometries[i];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(null);\n      multiGeometry.setFlatCoordinates(layout, flatCoordinates);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(null);\n      multiGeometry.setLineStrings(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(null);\n      multiGeometry.setPolygons(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {module:ol/geom/Geometry} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  const properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    const point = new Point(null);\n    point.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  const properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  const flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    const polygon = new Polygon(null);\n    const flatCoordinates = flatLinearRings[0];\n    const ends = [flatCoordinates.length];\n    for (let i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    polygon.setFlatCoordinates(GeometryLayout.XYZ, flatCoordinates, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @return {Array.<module:ol/style/Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  const styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  let fillStyle = /** @type {module:ol/style/Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  const fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  let imageStyle = /** @type {module:ol/style/Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : DEFAULT_IMAGE_STYLE);\n  if (imageStyle == DEFAULT_NO_IMAGE_STYLE) {\n    imageStyle = undefined;\n  }\n  const textStyle = /** @type {module:ol/style/Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  let strokeStyle = /** @type {module:ol/style/Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  const outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon}\n *     multiGeometry A multi-geometry.\n * @param {Array.<module:ol/geom/Geometry>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  const ii = geometries.length;\n  const extrudes = new Array(geometries.length);\n  const tessellates = new Array(geometries.length);\n  const altitudeModes = new Array(geometries.length);\n  let hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (let i = 0; i < ii; ++i) {\n    const geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  const pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  const key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    const styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    const Style = /** @type {module:ol/style/Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  const placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (name !== null) {\n    const data = readString(node);\n    const featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  const object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  const extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  const object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  const lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array.<number>|undefined} */\n  const flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    const flatLinearRings = /** @type {Array.<Array.<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  const gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  const whens = gxTrackObject.whens;\n  const s = getAllTextContent(node, false);\n  const when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Parser>>}\n */\nconst PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {Array.<module:ol/Feature>|undefined} Features.\n */\nKML.prototype.readDocumentOrFolder_ = function(node, objectStack) {\n  // FIXME use scope somehow\n  const parsersNS = makeStructureNS(\n    NAMESPACE_URIS, {\n      'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n      'Placemark': makeArrayPusher(this.readPlacemark_, this),\n      'Style': this.readSharedStyle_.bind(this),\n      'StyleMap': this.readSharedStyleMap_.bind(this)\n    });\n  /** @type {Array.<module:ol/Feature>} */\n  const features = pushParseAndPop([], parsersNS, node, objectStack, this);\n  if (features) {\n    return features;\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n * @return {module:ol/Feature|undefined} Feature.\n */\nKML.prototype.readPlacemark_ = function(node, objectStack) {\n  const object = pushParseAndPop({'geometry': null},\n    PLACEMARK_PARSERS, node, objectStack);\n  if (!object) {\n    return undefined;\n  }\n  const feature = new Feature();\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    feature.setId(id);\n  }\n  const options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n\n  const geometry = object['geometry'];\n  if (geometry) {\n    transformWithOptions(geometry, false, options);\n  }\n  feature.setGeometry(geometry);\n  delete object['geometry'];\n\n  if (this.extractStyles_) {\n    const style = object['Style'];\n    const styleUrl = object['styleUrl'];\n    const styleFunction = createFeatureStyleFunction(\n      style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n      this.showPointNames_);\n    feature.setStyle(styleFunction);\n  }\n  delete object['Style'];\n  // we do not remove the styleUrl property from the object, so it\n  // gets stored on feature when setProperties is called\n\n  feature.setProperties(object);\n\n  return feature;\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyle_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id !== null) {\n    const style = readStyle(node, objectStack);\n    if (style) {\n      let styleUri;\n      let baseURI = node.baseURI;\n      if (!baseURI || baseURI == 'about:blank') {\n        baseURI = window.location.href;\n      }\n      if (baseURI) {\n        const url = new URL('#' + id, baseURI);\n        styleUri = url.href;\n      } else {\n        styleUri = '#' + id;\n      }\n      this.sharedStyles_[styleUri] = style;\n    }\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<*>} objectStack Object stack.\n * @private\n */\nKML.prototype.readSharedStyleMap_ = function(node, objectStack) {\n  const id = node.getAttribute('id');\n  if (id === null) {\n    return;\n  }\n  const styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  let styleUri;\n  let baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    const url = new URL('#' + id, baseURI);\n    styleUri = url.href;\n  } else {\n    styleUri = '#' + id;\n  }\n  this.sharedStyles_[styleUri] = styleMapValue;\n};\n\n\n/**\n * Read the first feature from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n * @api\n */\nKML.prototype.readFeature;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeatureFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return null;\n  }\n  const feature = this.readPlacemark_(\n    node, [this.getReadOptions(node, opt_options)]);\n  if (feature) {\n    return feature;\n  } else {\n    return null;\n  }\n};\n\n\n/**\n * Read all features from a KML source. MultiGeometries are converted into\n * GeometryCollections if they are a mix of geometry types, and into MultiPoint/\n * MultiLineString/MultiPolygon if they are all of the same type.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array.<module:ol/Feature>} Features.\n * @api\n */\nKML.prototype.readFeatures;\n\n\n/**\n * @inheritDoc\n */\nKML.prototype.readFeaturesFromNode = function(node, opt_options) {\n  if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n    return [];\n  }\n  let features;\n  const localName = node.localName;\n  if (localName == 'Document' || localName == 'Folder') {\n    features = this.readDocumentOrFolder_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (features) {\n      return features;\n    } else {\n      return [];\n    }\n  } else if (localName == 'Placemark') {\n    const feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  } else if (localName == 'kml') {\n    features = [];\n    for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n      const fs = this.readFeaturesFromNode(n, opt_options);\n      if (fs) {\n        extend(features, fs);\n      }\n    }\n    return features;\n  } else {\n    return [];\n  }\n};\n\n\n/**\n * Read the name of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {string|undefined} Name.\n * @api\n */\nKML.prototype.readName = function(source) {\n  if (isDocument(source)) {\n    return this.readNameFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readNameFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    return this.readNameFromDocument(doc);\n  } else {\n    return undefined;\n  }\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromDocument = function(doc) {\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} Name.\n */\nKML.prototype.readNameFromNode = function(node) {\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'name') {\n      return readString(n);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'Placemark' ||\n         localName == 'kml')) {\n      const name = this.readNameFromNode(n);\n      if (name) {\n        return name;\n      }\n    }\n  }\n  return undefined;\n};\n\n\n/**\n * Read the network links of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Network links.\n * @api\n */\nKML.prototype.readNetworkLinks = function(source) {\n  const networkLinks = [];\n  if (isDocument(source)) {\n    extend(networkLinks, this.readNetworkLinksFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (isNode(source)) {\n    extend(networkLinks, this.readNetworkLinksFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromDocument = function(doc) {\n  const networkLinks = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Network links.\n */\nKML.prototype.readNetworkLinksFromNode = function(node) {\n  const networkLinks = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'NetworkLink') {\n      const obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n        n, []);\n      networkLinks.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(networkLinks, this.readNetworkLinksFromNode(n));\n    }\n  }\n  return networkLinks;\n};\n\n\n/**\n * Read the regions of the KML.\n *\n * @param {Document|Node|string} source Source.\n * @return {Array.<Object>} Regions.\n * @api\n */\nKML.prototype.readRegion = function(source) {\n  const regions = [];\n  if (isDocument(source)) {\n    extend(regions, this.readRegionFromDocument(\n      /** @type {Document} */ (source)));\n  } else if (isNode(source)) {\n    extend(regions, this.readRegionFromNode(\n      /** @type {Node} */ (source)));\n  } else if (typeof source === 'string') {\n    const doc = parse(source);\n    extend(regions, this.readRegionFromDocument(doc));\n  }\n  return regions;\n};\n\n\n/**\n * @param {Document} doc Document.\n * @return {Array.<Object>} Region.\n */\nKML.prototype.readRegionFromDocument = function(doc) {\n  const regions = [];\n  for (let n = doc.firstChild; n; n = n.nextSibling) {\n    if (n.nodeType == Node.ELEMENT_NODE) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * @param {Node} node Node.\n * @return {Array.<Object>} Region.\n * @api\n */\nKML.prototype.readRegionFromNode = function(node) {\n  const regions = [];\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        n.localName == 'Region') {\n      const obj = pushParseAndPop({}, REGION_PARSERS,\n        n, []);\n      regions.push(obj);\n    }\n  }\n  for (let n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const localName = n.localName;\n    if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n        (localName == 'Document' ||\n         localName == 'Folder' ||\n         localName == 'kml')) {\n      extend(regions, this.readRegionFromNode(n));\n    }\n  }\n  return regions;\n};\n\n\n/**\n * Read the projection from a KML source.\n *\n * @function\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n * @api\n */\nKML.prototype.readProjection;\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {module:ol/color~Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  const rgba = asArray(color);\n  const opacity = (rgba.length == 4) ? rgba[3] : 1;\n  const abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (let i = 0; i < 4; ++i) {\n    const hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array.<number>} coordinates Coordinates.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  const context = objectStack[objectStack.length - 1];\n\n  const layout = context['layout'];\n  const stride = context['stride'];\n\n  let dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  const ii = coordinates.length;\n  let text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (let d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (let i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (let d = 1; d < dimension; ++d) {\n        text += ',' + coordinates[i + d];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  const parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const names = namesAndValues.names;\n  const values = namesAndValues.values;\n  const length = names.length;\n\n  for (let i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const parentNode = objectStack[objectStack.length - 1].node;\n  let orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  let values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Icon} style Icon style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const src = style.getSrc();\n  const size = style.getSize();\n  const iconImageSize = style.getImageSize();\n  const iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    const anchor = style.getAnchor(); // top-left\n    const origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      const /** @type {module:ol/format/KML~Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  const scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  const rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Text} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  const scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Stroke} style style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, string>}\n */\nconst GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array.<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nconst GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    const parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {module:ol/geom/Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  const context = {node: node};\n  const type = geometry.getType();\n  /** @type {Array.<module:ol/geom/Geometry>} */\n  let geometries;\n  /** @type {function(*, Array.<*>, string=): (Node|undefined)} */\n  let factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {module:ol/geom/MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {module:ol/geom/MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {module:ol/geom/MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array.<*>): (Node|undefined)}\n */\nconst EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array.<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  const filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  const keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    const sequence = makeSequence(properties, keys);\n    const namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  const styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    const styles = styleFunction(feature, 0);\n    if (styles) {\n      const style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      const textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  const options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  let geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  const flatCoordinates = geometry.getFlatCoordinates();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  const properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  const linearRings = polygon.getLinearRings();\n  const outerRing = linearRings.shift();\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array.<*>, string=): (Node|undefined)}\n */\nconst COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Fill} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Style} style Style.\n * @param {Array.<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  const properties = {};\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  const parentNode = objectStack[objectStack.length - 1].node;\n  const orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {module:ol/format/KML~Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\n/**\n * @const\n * @type {Object.<string, Array.<string>>}\n */\nconst KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object.<string, Object.<string, module:ol/xml~Serializer>>}\n */\nconst KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * Encode an array of features in the KML format. GeometryCollections, MultiPoints,\n * MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @function\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nKML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the KML format as an XML node. GeometryCollections,\n * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n *\n * @param {Array.<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @override\n * @api\n */\nKML.prototype.writeFeaturesNode = function(features, opt_options) {\n  opt_options = this.adaptOptions(opt_options);\n  const kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n  const xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n  kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n  kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n  kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n  const /** @type {module:ol/xml~NodeStackItem} */ context = {node: kml};\n  const properties = {};\n  if (features.length > 1) {\n    properties['Document'] = features;\n  } else if (features.length == 1) {\n    properties['Placemark'] = features[0];\n  }\n  const orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n  const values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, KML_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n    this);\n  return kml;\n};\n\nexport default KML;\n","/**\n * @module ol/Tile\n */\nimport {inherits} from './util.js';\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/EventTarget.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments.\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/events/EventTarget}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst Tile = function(tileCoord, state, opt_options) {\n  EventTarget.call(this);\n\n  const options = opt_options ? opt_options : {};\n\n  /**\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.tileCoord = tileCoord;\n\n  /**\n   * @protected\n   * @type {module:ol/TileState}\n   */\n  this.state = state;\n\n  /**\n   * An \"interim\" tile for this tile. The interim tile may be used while this\n   * one is loading, for \"smooth\" transitions when changing params/dimensions\n   * on the source.\n   * @type {module:ol/Tile}\n   */\n  this.interimTile = null;\n\n  /**\n   * A key assigned to the tile. This is used by the tile source to determine\n   * if this tile can effectively be used, or if a new tile should be created\n   * and this one be used as an interim tile for this new tile.\n   * @type {string}\n   */\n  this.key = '';\n\n  /**\n   * The duration for the opacity transition.\n   * @type {number}\n   */\n  this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n  /**\n   * Lookup of start times for rendering transitions.  If the start time is\n   * equal to -1, the transition is complete.\n   * @type {Object.<number, number>}\n   */\n  this.transitionStarts_ = {};\n\n};\n\ninherits(Tile, EventTarget);\n\n\n/**\n * @protected\n */\nTile.prototype.changed = function() {\n  this.dispatchEvent(EventType.CHANGE);\n};\n\n\n/**\n * @return {string} Key.\n */\nTile.prototype.getKey = function() {\n  return this.key + '/' + this.tileCoord;\n};\n\n/**\n * Get the interim tile most suitable for rendering using the chain of interim\n * tiles. This corresponds to the  most recent tile that has been loaded, if no\n * such tile exists, the original tile is returned.\n * @return {!module:ol/Tile} Best tile for rendering.\n */\nTile.prototype.getInterimTile = function() {\n  if (!this.interimTile) {\n    //empty chain\n    return this;\n  }\n  let tile = this.interimTile;\n\n  // find the first loaded tile and return it. Since the chain is sorted in\n  // decreasing order of creation time, there is no need to search the remainder\n  // of the list (all those tiles correspond to older requests and will be\n  // cleaned up by refreshInterimChain)\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      return tile;\n    }\n    tile = tile.interimTile;\n  } while (tile);\n\n  // we can not find a better tile\n  return this;\n};\n\n/**\n * Goes through the chain of interim tiles and discards sections of the chain\n * that are no longer relevant.\n */\nTile.prototype.refreshInterimChain = function() {\n  if (!this.interimTile) {\n    return;\n  }\n\n  let tile = this.interimTile;\n  let prev = this;\n\n  do {\n    if (tile.getState() == TileState.LOADED) {\n      //we have a loaded tile, we can discard the rest of the list\n      //we would could abort any LOADING tile request\n      //older than this tile (i.e. any LOADING tile following this entry in the chain)\n      tile.interimTile = null;\n      break;\n    } else if (tile.getState() == TileState.LOADING) {\n      //keep this LOADING tile any loaded tiles later in the chain are\n      //older than this tile, so we're still interested in the request\n      prev = tile;\n    } else if (tile.getState() == TileState.IDLE) {\n      //the head of the list is the most current tile, we don't need\n      //to start any other requests for this chain\n      prev.interimTile = tile.interimTile;\n    } else {\n      prev = tile;\n    }\n    tile = prev.interimTile;\n  } while (tile);\n};\n\n/**\n * Get the tile coordinate for this tile.\n * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n * @api\n */\nTile.prototype.getTileCoord = function() {\n  return this.tileCoord;\n};\n\n\n/**\n * @return {module:ol/TileState} State.\n */\nTile.prototype.getState = function() {\n  return this.state;\n};\n\n/**\n * @param {module:ol/TileState} state State.\n */\nTile.prototype.setState = function(state) {\n  this.state = state;\n  this.changed();\n};\n\n/**\n * Load the image or retry if loading previously failed.\n * Loading is taken care of by the tile queue, and calling this method is\n * only needed for preloading or for reloading in case of an error.\n * @abstract\n * @api\n */\nTile.prototype.load = function() {};\n\n/**\n * Get the alpha value for rendering.\n * @param {number} id An id for the renderer.\n * @param {number} time The render frame time.\n * @return {number} A number between 0 and 1.\n */\nTile.prototype.getAlpha = function(id, time) {\n  if (!this.transition_) {\n    return 1;\n  }\n\n  let start = this.transitionStarts_[id];\n  if (!start) {\n    start = time;\n    this.transitionStarts_[id] = start;\n  } else if (start === -1) {\n    return 1;\n  }\n\n  const delta = time - start + (1000 / 60); // avoid rendering at 0\n  if (delta >= this.transition_) {\n    return 1;\n  }\n  return easeIn(delta / this.transition_);\n};\n\n/**\n * Determine if a tile is in an alpha transition.  A tile is considered in\n * transition if tile.getAlpha() has not yet been called or has been called\n * and returned 1.\n * @param {number} id An id for the renderer.\n * @return {boolean} The tile is in transition.\n */\nTile.prototype.inTransition = function(id) {\n  if (!this.transition_) {\n    return false;\n  }\n  return this.transitionStarts_[id] !== -1;\n};\n\n/**\n * Mark a transition as complete.\n * @param {number} id An id for the renderer.\n */\nTile.prototype.endTransition = function(id) {\n  if (this.transition_) {\n    this.transitionStarts_[id] = -1;\n  }\n};\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport {inherits} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\n/**\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileState} state State.\n * @param {string} src Image source URI.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @param {module:ol/Tile~Options=} opt_options Tile options.\n */\nconst ImageTile = function(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n  Tile.call(this, tileCoord, state, opt_options);\n\n  /**\n   * @private\n   * @type {?string}\n   */\n  this.crossOrigin_ = crossOrigin;\n\n  /**\n   * Image URI\n   *\n   * @private\n   * @type {string}\n   */\n  this.src_ = src;\n\n  /**\n   * @private\n   * @type {Image|HTMLCanvasElement}\n   */\n  this.image_ = new Image();\n  if (crossOrigin !== null) {\n    this.image_.crossOrigin = crossOrigin;\n  }\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.imageListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction_ = tileLoadFunction;\n\n};\n\ninherits(ImageTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n  }\n  if (this.interimTile) {\n    this.interimTile.dispose();\n  }\n  this.state = TileState.ABORT;\n  this.changed();\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n * @api\n */\nImageTile.prototype.getImage = function() {\n  return this.image_;\n};\n\n\n/**\n * @inheritDoc\n */\nImageTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * Tracks loading or read errors.\n *\n * @private\n */\nImageTile.prototype.handleImageError_ = function() {\n  this.state = TileState.ERROR;\n  this.unlistenImage_();\n  this.image_ = getBlankImage();\n  this.changed();\n};\n\n\n/**\n * Tracks successful image load.\n *\n * @private\n */\nImageTile.prototype.handleImageLoad_ = function() {\n  if (this.image_.naturalWidth && this.image_.naturalHeight) {\n    this.state = TileState.LOADED;\n  } else {\n    this.state = TileState.EMPTY;\n  }\n  this.unlistenImage_();\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n * @api\n */\nImageTile.prototype.load = function() {\n  if (this.state == TileState.ERROR) {\n    this.state = TileState.IDLE;\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n    this.imageListenerKeys_ = [\n      listenOnce(this.image_, EventType.ERROR,\n        this.handleImageError_, this),\n      listenOnce(this.image_, EventType.LOAD,\n        this.handleImageLoad_, this)\n    ];\n    this.tileLoadFunction_(this, this.src_);\n  }\n};\n\n\n/**\n * Discards event handlers which listen for load completion or errors.\n *\n * @private\n */\nImageTile.prototype.unlistenImage_ = function() {\n  this.imageListenerKeys_.forEach(unlistenByKey);\n  this.imageListenerKeys_ = null;\n};\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array.<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport {inherits} from './util.js';\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\n/**\n * @constructor\n * @extends {module:ol/structs/LRUCache.<module:ol/Tile>}\n * @param {number=} opt_highWaterMark High water mark.\n * @struct\n */\nconst TileCache = function(opt_highWaterMark) {\n\n  LRUCache.call(this, opt_highWaterMark);\n\n};\n\ninherits(TileCache, LRUCache);\n\n\n/**\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileCache.prototype.expireCache = function(usedTiles) {\n  while (this.canExpireCache()) {\n    const tile = this.peekLast();\n    const zKey = tile.tileCoord[0].toString();\n    if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n      break;\n    } else {\n      this.pop().dispose();\n    }\n  }\n};\n\n\n/**\n * Prune all tiles from the cache that don't have the same z as the newest tile.\n */\nTileCache.prototype.pruneExceptNewestZ = function() {\n  if (this.getCount() === 0) {\n    return;\n  }\n  const key = this.peekFirstKey();\n  const tileCoord = fromKey(key);\n  const z = tileCoord[0];\n  this.forEach(function(tile) {\n    if (tile.tileCoord[0] !== z) {\n      this.remove(getKey(tile.tileCoord));\n      tile.dispose();\n    }\n  }, this);\n};\nexport default TileCache;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array.<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|Image|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array.<module:ol/coordinate~Coordinate>} source\n * @property {Array.<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/extent~Extent} targetExtent Target extent to triangulate.\n * @param {module:ol/extent~Extent} maxSourceExtent Maximal source extent that can be used.\n * @param {number} errorThreshold Acceptable error (in source units).\n * @constructor\n */\nconst Triangulation = function(sourceProj, targetProj, targetExtent,\n  maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object.<string, module:ol/coordinate~Coordinate>} */\n  let transformInvCache = {};\n  const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    const key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array.<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  const destinationTopLeft = getTopLeft(targetExtent);\n  const destinationTopRight = getTopRight(targetExtent);\n  const destinationBottomRight = getBottomRight(targetExtent);\n  const destinationBottomLeft = getBottomLeft(targetExtent);\n  const sourceTopLeft = this.transformInv_(destinationTopLeft);\n  const sourceTopRight = this.transformInv_(destinationTopRight);\n  const sourceBottomRight = this.transformInv_(destinationBottomRight);\n  const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    let leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        const minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        const maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function(a, b, c,\n  aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function(a, b, c, d,\n  aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  const sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  const wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  let needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      const targetQuadExtent = boundingExtent([a, b, c, d]);\n      const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      const centerSrc = this.transformInv_(center);\n\n      let dx;\n      if (wrapsX) {\n        const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      const centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        const bcSrc = this.transformInv_(bc);\n        const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        const daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        const abSrc = this.transformInv_(ab);\n        const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        const cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function() {\n  const extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    const src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n\n/**\n * @return {Array.<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function() {\n  return this.triangles_;\n};\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\nimport {inherits} from '../util.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n * @constructor\n * @extends {module:ol/Tile}\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/tilegrid/TileGrid} sourceTileGrid Source tile grid.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/tilegrid/TileGrid} targetTileGrid Target tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Coordinate of the tile.\n * @param {module:ol/tilecoord~TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} gutter Gutter of the source tiles.\n * @param {module:ol/reproj/Tile~FunctionType} getTileFunction\n *     Function returning source tiles (z, x, y, pixelRatio).\n * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n */\nconst ReprojTile = function(sourceProj, sourceTileGrid,\n  targetProj, targetTileGrid, tileCoord, wrappedTileCoord,\n  pixelRatio, gutter, getTileFunction,\n  opt_errorThreshold, opt_renderEdges) {\n  Tile.call(this, tileCoord, TileState.IDLE);\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.pixelRatio_ = pixelRatio;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.gutter_ = gutter;\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.sourceTileGrid_ = sourceTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.targetTileGrid_ = targetTileGrid;\n\n  /**\n   * @private\n   * @type {module:ol/tilecoord~TileCoord}\n   */\n  this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n  /**\n   * @private\n   * @type {!Array.<module:ol/Tile>}\n   */\n  this.sourceTiles_ = [];\n\n  /**\n   * @private\n   * @type {Array.<module:ol/events~EventsKey>}\n   */\n  this.sourcesListenerKeys_ = null;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.sourceZ_ = 0;\n\n  const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n  const maxTargetExtent = this.targetTileGrid_.getExtent();\n  let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n  const limitedTargetExtent = maxTargetExtent ?\n    getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n  if (getArea(limitedTargetExtent) === 0) {\n    // Tile is completely outside range -> EMPTY\n    // TODO: is it actually correct that the source even creates the tile ?\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const sourceProjExtent = sourceProj.getExtent();\n  if (sourceProjExtent) {\n    if (!maxSourceExtent) {\n      maxSourceExtent = sourceProjExtent;\n    } else {\n      maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n    }\n  }\n\n  const targetResolution = targetTileGrid.getResolution(\n    this.wrappedTileCoord_[0]);\n\n  const targetCenter = getCenter(limitedTargetExtent);\n  const sourceResolution = calculateSourceResolution(\n    sourceProj, targetProj, targetCenter, targetResolution);\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    // invalid sourceResolution -> EMPTY\n    // probably edges of the projections when no extent is defined\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n    opt_errorThreshold : ERROR_THRESHOLD;\n\n  /**\n   * @private\n   * @type {!module:ol/reproj/Triangulation}\n   */\n  this.triangulation_ = new Triangulation(\n    sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n    sourceResolution * errorThresholdInPixels);\n\n  if (this.triangulation_.getTriangles().length === 0) {\n    // no valid triangles -> EMPTY\n    this.state = TileState.EMPTY;\n    return;\n  }\n\n  this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n  let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n  if (maxSourceExtent) {\n    if (sourceProj.canWrapX()) {\n      sourceExtent[1] = clamp(\n        sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n      sourceExtent[3] = clamp(\n        sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n    } else {\n      sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n    }\n  }\n\n  if (!getArea(sourceExtent)) {\n    this.state = TileState.EMPTY;\n  } else {\n    const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n      sourceExtent, this.sourceZ_);\n\n    for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n      for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n        const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n        if (tile) {\n          this.sourceTiles_.push(tile);\n        }\n      }\n    }\n\n    if (this.sourceTiles_.length === 0) {\n      this.state = TileState.EMPTY;\n    }\n  }\n};\n\ninherits(ReprojTile, Tile);\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.disposeInternal = function() {\n  if (this.state == TileState.LOADING) {\n    this.unlistenSources_();\n  }\n  Tile.prototype.disposeInternal.call(this);\n};\n\n\n/**\n * Get the HTML Canvas element for this tile.\n * @return {HTMLCanvasElement} Canvas.\n */\nReprojTile.prototype.getImage = function() {\n  return this.canvas_;\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.reproject_ = function() {\n  const sources = [];\n  this.sourceTiles_.forEach(function(tile, i, arr) {\n    if (tile && tile.getState() == TileState.LOADED) {\n      sources.push({\n        extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n        image: tile.getImage()\n      });\n    }\n  }.bind(this));\n  this.sourceTiles_.length = 0;\n\n  if (sources.length === 0) {\n    this.state = TileState.ERROR;\n  } else {\n    const z = this.wrappedTileCoord_[0];\n    const size = this.targetTileGrid_.getTileSize(z);\n    const width = typeof size === 'number' ? size : size[0];\n    const height = typeof size === 'number' ? size : size[1];\n    const targetResolution = this.targetTileGrid_.getResolution(z);\n    const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n    const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n      this.wrappedTileCoord_);\n    this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n      sourceResolution, this.sourceTileGrid_.getExtent(),\n      targetResolution, targetExtent, this.triangulation_, sources,\n      this.gutter_, this.renderEdges_);\n\n    this.state = TileState.LOADED;\n  }\n  this.changed();\n};\n\n\n/**\n * @inheritDoc\n */\nReprojTile.prototype.load = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    this.changed();\n\n    let leftToLoad = 0;\n\n    this.sourcesListenerKeys_ = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE || state == TileState.LOADING) {\n        leftToLoad++;\n\n        const sourceListenKey = listen(tile, EventType.CHANGE,\n          function(e) {\n            const state = tile.getState();\n            if (state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          }, this);\n        this.sourcesListenerKeys_.push(sourceListenKey);\n      }\n    }.bind(this));\n\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      const state = tile.getState();\n      if (state == TileState.IDLE) {\n        tile.load();\n      }\n    });\n\n    if (leftToLoad === 0) {\n      setTimeout(this.reproject_.bind(this), 0);\n    }\n  }\n};\n\n\n/**\n * @private\n */\nReprojTile.prototype.unlistenSources_ = function() {\n  this.sourcesListenerKeys_.forEach(unlistenByKey);\n  this.sourcesListenerKeys_ = null;\n};\nexport default ReprojTile;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            const y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array.<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array.<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array.<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array.<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array.<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array.<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array.<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n *\n * @constructor\n * @param {module:ol/tilegrid/TileGrid~Options} options Tile grid options.\n * @struct\n * @api\n */\nconst TileGrid = function(options) {\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array.<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  let zoomFactor;\n  if (!options.origins) {\n    for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n      } else {\n        if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array.<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  const extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array.<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array.<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      const tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function(extent, zoom, callback) {\n  const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function(tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n  let tileRange, x, y;\n  let tileCoordExtent = null;\n  let z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function() {\n  return this.extent_;\n};\n\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function() {\n  return this.maxZoom;\n};\n\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function() {\n  return this.minZoom;\n};\n\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function(z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function(z) {\n  return this.resolutions_[z];\n};\n\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array.<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function() {\n  return this.resolutions_;\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function(tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      const minX = tileCoord[1] * 2;\n      const minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function(z, tileRange, opt_extent) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function(extent, z, opt_tileRange) {\n  const tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  const minX = tileCoord[1];\n  const minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function(tileCoord) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function(tileCoord, opt_extent) {\n  const origin = this.getOrigin(tileCoord[0]);\n  const resolution = this.getResolution(tileCoord[0]);\n  const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  const minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  const maxX = minX + tileSize[0] * resolution;\n  const maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.  This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function(coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function(\n  x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  const z = this.getZForResolution(resolution);\n  const scale = resolution / this.getResolution(z);\n  const origin = this.getOrigin(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = scale * xFromOrigin / tileSize[0];\n  let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.  This method is for integer zoom\n * levels.  The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *     intersections go to the higher tile coordinate, let edge intersections\n *     go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  const origin = this.getOrigin(z);\n  const resolution = this.getResolution(z);\n  const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  const yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  let tileCoordX = xFromOrigin / tileSize[0];\n  let tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function(coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function(tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function(z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function(z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *     If 1, the nearest lower resolution will be used. If -1, the nearest\n *     higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function(resolution, opt_direction) {\n  const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function(extent) {\n  const length = this.resolutions_.length;\n  const fullTileRanges = new Array(length);\n  for (let z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array.<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport {inherits} from '../util.js';\nimport {UNDEFINED} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @abstract\n * @extends {module:ol/source/Source}\n * @param {module:ol/source/Tile~Options=} options SourceTile source options.\n * @api\n */\nconst TileSource = function(options) {\n\n  Source.call(this, {\n    attributions: options.attributions,\n    extent: options.extent,\n    projection: options.projection,\n    state: options.state,\n    wrapX: options.wrapX\n  });\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n    options.tilePixelRatio : 1;\n\n  /**\n   * @protected\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n  /**\n   * @protected\n   * @type {module:ol/TileCache}\n   */\n  this.tileCache = new TileCache(options.cacheSize);\n\n  /**\n   * @protected\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize = [0, 0];\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.key_ = '';\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~Options}\n   */\n  this.tileOptions = {transition: options.transition};\n\n};\n\ninherits(TileSource, Source);\n\n\n/**\n * @return {boolean} Can expire cache.\n */\nTileSource.prototype.canExpireCache = function() {\n  return this.tileCache.canExpireCache();\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {!Object.<string, module:ol/TileRange>} usedTiles Used tiles.\n */\nTileSource.prototype.expireCache = function(projection, usedTiles) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (tileCache) {\n    tileCache.expireCache(usedTiles);\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} z Zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n *     loaded tile.  If the callback returns `false`, the tile will not be\n *     considered loaded.\n * @return {boolean} The tile range is fully covered with loaded tiles.\n */\nTileSource.prototype.forEachLoadedTile = function(projection, z, tileRange, callback) {\n  const tileCache = this.getTileCacheForProjection(projection);\n  if (!tileCache) {\n    return false;\n  }\n\n  let covered = true;\n  let tile, tileCoordKey, loaded;\n  for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n    for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n      tileCoordKey = getKeyZXY(z, x, y);\n      loaded = false;\n      if (tileCache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n        loaded = tile.getState() === TileState.LOADED;\n        if (loaded) {\n          loaded = (callback(tile) !== false);\n        }\n      }\n      if (!loaded) {\n        covered = false;\n      }\n    }\n  }\n  return covered;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {number} Gutter.\n */\nTileSource.prototype.getGutter = function(projection) {\n  return 0;\n};\n\n\n/**\n * Return the key to be used for all tiles in the source.\n * @return {string} The key for all tiles.\n * @protected\n */\nTileSource.prototype.getKey = function() {\n  return this.key_;\n};\n\n\n/**\n * Set the value to be used as the key for all tiles in the source.\n * @param {string} key The key for tiles.\n * @protected\n */\nTileSource.prototype.setKey = function(key) {\n  if (this.key_ !== key) {\n    this.key_ = key;\n    this.changed();\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {boolean} Opaque.\n */\nTileSource.prototype.getOpaque = function(projection) {\n  return this.opaque_;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.getResolutions = function() {\n  return this.tileGrid.getResolutions();\n};\n\n\n/**\n * @abstract\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n */\nTileSource.prototype.getTile = function(z, x, y, pixelRatio, projection) {};\n\n\n/**\n * Return the tile grid of the tile source.\n * @return {module:ol/tilegrid/TileGrid} Tile grid.\n * @api\n */\nTileSource.prototype.getTileGrid = function() {\n  return this.tileGrid;\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n */\nTileSource.prototype.getTileGridForProjection = function(projection) {\n  if (!this.tileGrid) {\n    return getTileGridForProjection(projection);\n  } else {\n    return this.tileGrid;\n  }\n};\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/TileCache} Tile cache.\n * @protected\n */\nTileSource.prototype.getTileCacheForProjection = function(projection) {\n  const thisProj = this.getProjection();\n  if (thisProj && !equivalent(thisProj, projection)) {\n    return null;\n  } else {\n    return this.tileCache;\n  }\n};\n\n\n/**\n * Get the tile pixel ratio for this source. Subclasses may override this\n * method, which is meant to return a supported pixel ratio that matches the\n * provided `pixelRatio` as close as possible.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Tile pixel ratio.\n */\nTileSource.prototype.getTilePixelRatio = function(pixelRatio) {\n  return this.tilePixelRatio_;\n};\n\n\n/**\n * @param {number} z Z.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/size~Size} Tile size.\n */\nTileSource.prototype.getTilePixelSize = function(z, pixelRatio, projection) {\n  const tileGrid = this.getTileGridForProjection(projection);\n  const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n  const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n  if (tilePixelRatio == 1) {\n    return tileSize;\n  } else {\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n};\n\n\n/**\n * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n * is outside the resolution and extent range of the tile grid, `null` will be\n * returned.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection=} opt_projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n *     null if no tile URL should be created for the passed `tileCoord`.\n */\nTileSource.prototype.getTileCoordForTileUrlFunction = function(tileCoord, opt_projection) {\n  const projection = opt_projection !== undefined ?\n    opt_projection : this.getProjection();\n  const tileGrid = this.getTileGridForProjection(projection);\n  if (this.getWrapX() && projection.isGlobal()) {\n    tileCoord = wrapX(tileGrid, tileCoord, projection);\n  }\n  return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n};\n\n\n/**\n * @inheritDoc\n */\nTileSource.prototype.refresh = function() {\n  this.tileCache.clear();\n  this.changed();\n};\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = UNDEFINED;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n *\n * @constructor\n * @extends {module:ol/events/Event}\n * @param {string} type Type.\n * @param {module:ol/Tile} tile The tile.\n */\nexport const TileSourceEvent = function(type, tile) {\n\n  Event.call(this, type);\n\n  /**\n   * The tile related to the event.\n   * @type {module:ol/Tile}\n   * @api\n   */\n  this.tile = tile;\n\n};\ninherits(TileSourceEvent, Event);\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid, inherits} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array.<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @constructor\n * @abstract\n * @fires module:ol/source/TileEvent\n * @extends {module:ol/source/Tile}\n * @param {module:ol/source/UrlTile~Options=} options Image tile options.\n */\nconst UrlTile = function(options) {\n\n  TileSource.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tilePixelRatio: options.tilePixelRatio,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~LoadFunction}\n   */\n  this.tileLoadFunction = options.tileLoadFunction;\n\n  /**\n   * @protected\n   * @type {module:ol/Tile~UrlFunction}\n   */\n  this.tileUrlFunction = this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n  /**\n   * @protected\n   * @type {!Array.<string>|null}\n   */\n  this.urls = null;\n\n  if (options.urls) {\n    this.setUrls(options.urls);\n  } else if (options.url) {\n    this.setUrl(options.url);\n  }\n  if (options.tileUrlFunction) {\n    this.setTileUrlFunction(options.tileUrlFunction);\n  }\n\n  /**\n   * @private\n   * @type {!Object.<number, boolean>}\n   */\n  this.tileLoadingKeys_ = {};\n\n};\n\ninherits(UrlTile, TileSource);\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\n/**\n * Return the tile load function of the source.\n * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n * @api\n */\nUrlTile.prototype.getTileLoadFunction = function() {\n  return this.tileLoadFunction;\n};\n\n\n/**\n * Return the tile URL function of the source.\n * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n * @api\n */\nUrlTile.prototype.getTileUrlFunction = function() {\n  return this.tileUrlFunction;\n};\n\n\n/**\n * Return the URLs used for this source.\n * When a tileUrlFunction is used instead of url or urls,\n * null will be returned.\n * @return {!Array.<string>|null} URLs.\n * @api\n */\nUrlTile.prototype.getUrls = function() {\n  return this.urls;\n};\n\n\n/**\n * Handle tile change events.\n * @param {module:ol/events/Event} event Event.\n * @protected\n */\nUrlTile.prototype.handleTileChange = function(event) {\n  const tile = /** @type {module:ol/Tile} */ (event.target);\n  const uid = getUid(tile);\n  const tileState = tile.getState();\n  let type;\n  if (tileState == TileState.LOADING) {\n    this.tileLoadingKeys_[uid] = true;\n    type = TileEventType.TILELOADSTART;\n  } else if (uid in this.tileLoadingKeys_) {\n    delete this.tileLoadingKeys_[uid];\n    type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n      (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n        TileEventType.TILELOADEND : undefined;\n  }\n  if (type != undefined) {\n    this.dispatchEvent(new TileSourceEvent(type, tile));\n  }\n};\n\n\n/**\n * Set the tile load function of the source.\n * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n * @api\n */\nUrlTile.prototype.setTileLoadFunction = function(tileLoadFunction) {\n  this.tileCache.clear();\n  this.tileLoadFunction = tileLoadFunction;\n  this.changed();\n};\n\n\n/**\n * Set the tile URL function of the source.\n * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n * @param {string=} opt_key Optional new tile key for the source.\n * @api\n */\nUrlTile.prototype.setTileUrlFunction = function(tileUrlFunction, opt_key) {\n  this.tileUrlFunction = tileUrlFunction;\n  this.tileCache.pruneExceptNewestZ();\n  if (typeof opt_key !== 'undefined') {\n    this.setKey(opt_key);\n  } else {\n    this.changed();\n  }\n};\n\n\n/**\n * Set the URL to use for requests.\n * @param {string} url URL.\n * @api\n */\nUrlTile.prototype.setUrl = function(url) {\n  const urls = this.urls = expandUrl(url);\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), url);\n};\n\n\n/**\n * Set the URLs to use for requests.\n * @param {Array.<string>} urls URLs.\n * @api\n */\nUrlTile.prototype.setUrls = function(urls) {\n  this.urls = urls;\n  const key = urls.join('\\n');\n  this.setTileUrlFunction(this.fixedTileUrlFunction ?\n    this.fixedTileUrlFunction.bind(this) :\n    createFromTemplates(urls, this.tileGrid), key);\n};\n\n\n/**\n * @inheritDoc\n */\nUrlTile.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid, inherits} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @constructor\n * @fires module:ol/source/Tile~TileSourceEvent\n * @extends {module:ol/source/UrlTile}\n * @param {module:ol/source/TileImage~Options=} options Image tile options.\n * @api\n */\nconst TileImage = function(options) {\n\n  UrlTile.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    extent: options.extent,\n    opaque: options.opaque,\n    projection: options.projection,\n    state: options.state,\n    tileGrid: options.tileGrid,\n    tileLoadFunction: options.tileLoadFunction ?\n      options.tileLoadFunction : defaultTileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX,\n    transition: options.transition\n  });\n\n  /**\n   * @protected\n   * @type {?string}\n   */\n  this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n  /**\n   * @protected\n   * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n   *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n   */\n  this.tileClass = options.tileClass !== undefined ?\n    options.tileClass : ImageTile;\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/TileCache>}\n   */\n  this.tileCacheForProjection = {};\n\n  /**\n   * @protected\n   * @type {!Object.<string, module:ol/tilegrid/TileGrid>}\n   */\n  this.tileGridForProjection = {};\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.renderReprojectionEdges_ = false;\n};\n\ninherits(TileImage, UrlTile);\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.canExpireCache = function() {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.canExpireCache.call(this);\n  }\n  if (this.tileCache.canExpireCache()) {\n    return true;\n  } else {\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.expireCache = function(projection, usedTiles) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n    return;\n  }\n  const usedTileCache = this.getTileCacheForProjection(projection);\n\n  this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n  for (const id in this.tileCacheForProjection) {\n    const tileCache = this.tileCacheForProjection[id];\n    tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getGutter = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return 0;\n  } else {\n    return this.getGutterInternal();\n  }\n};\n\n\n/**\n * @protected\n * @return {number} Gutter.\n */\nTileImage.prototype.getGutterInternal = function() {\n  return 0;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getOpaque = function(projection) {\n  if (ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n    return false;\n  } else {\n    return UrlTile.prototype.getOpaque.call(this, projection);\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileGridForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection();\n  if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n    return this.tileGrid;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n    }\n    return (\n      /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n    );\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTileCacheForProjection = function(projection) {\n  if (!ENABLE_RASTER_REPROJECTION) {\n    return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n  }\n  const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n    return this.tileCache;\n  } else {\n    const projKey = getUid(projection).toString();\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {string} key The key set on the tile.\n * @return {!module:ol/Tile} Tile.\n * @private\n */\nTileImage.prototype.createTile_ = function(z, x, y, pixelRatio, projection, key) {\n  const tileCoord = [z, x, y];\n  const urlTileCoord = this.getTileCoordForTileUrlFunction(\n    tileCoord, projection);\n  const tileUrl = urlTileCoord ?\n    this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n  const tile = new this.tileClass(\n    tileCoord,\n    tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n    tileUrl !== undefined ? tileUrl : '',\n    this.crossOrigin,\n    this.tileLoadFunction,\n    this.tileOptions);\n  tile.key = key;\n  listen(tile, EventType.CHANGE,\n    this.handleTileChange, this);\n  return tile;\n};\n\n\n/**\n * @inheritDoc\n */\nTileImage.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n  if (!ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n    return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n  } else {\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    } else {\n      const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n      const targetTileGrid = this.getTileGridForProjection(projection);\n      const wrappedTileCoord =\n          this.getTileCoordForTileUrlFunction(tileCoord, projection);\n      const newTile = new ReprojTile(\n        sourceProjection, sourceTileGrid,\n        projection, targetTileGrid,\n        tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n        this.getGutterInternal(),\n        function(z, x, y, pixelRatio) {\n          return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n        }.bind(this), this.reprojectionErrorThreshold_,\n        this.renderReprojectionEdges_);\n      newTile.key = key;\n\n      if (tile) {\n        newTile.interimTile = tile;\n        newTile.refreshInterimChain();\n        cache.replace(tileCoordKey, newTile);\n      } else {\n        cache.set(tileCoordKey, newTile);\n      }\n      return newTile;\n    }\n  }\n};\n\n\n/**\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {number} pixelRatio Pixel ratio.\n * @param {!module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/Tile} Tile.\n * @protected\n */\nTileImage.prototype.getTileInternal = function(z, x, y, pixelRatio, projection) {\n  let tile = null;\n  const tileCoordKey = getKeyZXY(z, x, y);\n  const key = this.getKey();\n  if (!this.tileCache.containsKey(tileCoordKey)) {\n    tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n    this.tileCache.set(tileCoordKey, tile);\n  } else {\n    tile = this.tileCache.get(tileCoordKey);\n    if (tile.key != key) {\n      // The source's params changed. If the tile has an interim tile and if we\n      // can use it then we use it. Otherwise we create a new tile.  In both\n      // cases we attempt to assign an interim tile to the new tile.\n      const interimTile = tile;\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n      //make the new tile the head of the list,\n      if (interimTile.getState() == TileState.IDLE) {\n        //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n        tile.interimTile = interimTile.interimTile;\n      } else {\n        tile.interimTile = interimTile;\n      }\n      tile.refreshInterimChain();\n      this.tileCache.replace(tileCoordKey, tile);\n    }\n  }\n  return tile;\n};\n\n\n/**\n * Sets whether to render reprojection edges or not (usually for debugging).\n * @param {boolean} render Render the edges.\n * @api\n */\nTileImage.prototype.setRenderReprojectionEdges = function(render) {\n  if (!ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render) {\n    return;\n  }\n  this.renderReprojectionEdges_ = render;\n  for (const id in this.tileCacheForProjection) {\n    this.tileCacheForProjection[id].clear();\n  }\n  this.changed();\n};\n\n\n/**\n * Sets the tile grid to use when reprojecting the tiles to the given\n * projection instead of the default tile grid for the projection.\n *\n * This can be useful when the default tile grid cannot be created\n * (e.g. projection has no extent defined) or\n * for optimization reasons (custom tile size, resolutions, ...).\n *\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n * @api\n */\nTileImage.prototype.setTileGridForProjection = function(projection, tilegrid) {\n  if (ENABLE_RASTER_REPROJECTION) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n};\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\nimport {inherits} from '../util.js';\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array.<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n *\n * @constructor\n * @extends {module:ol/source/TileImage}\n * @param {module:ol/source/XYZ~Options=} opt_options XYZ options.\n * @api\n */\nconst XYZ = function(opt_options) {\n  const options = opt_options || {};\n  const projection = options.projection !== undefined ?\n    options.projection : 'EPSG:3857';\n\n  const tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n    createXYZ({\n      extent: extentFromProjection(projection),\n      maxZoom: options.maxZoom,\n      minZoom: options.minZoom,\n      tileSize: options.tileSize\n    });\n\n  TileImage.call(this, {\n    attributions: options.attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: options.crossOrigin,\n    opaque: options.opaque,\n    projection: projection,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileGrid: tileGrid,\n    tileLoadFunction: options.tileLoadFunction,\n    tilePixelRatio: options.tilePixelRatio,\n    tileUrlFunction: options.tileUrlFunction,\n    url: options.url,\n    urls: options.urls,\n    wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    transition: options.transition\n  });\n\n};\n\ninherits(XYZ, TileImage);\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\nimport {inherits} from '../util.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION = '&copy; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * {@link https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image} for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/OSM~Options=} [opt_options] Open Street Map options.\n * @api\n */\nconst OSM = function(opt_options) {\n\n  const options = opt_options || {};\n\n  let attributions;\n  if (options.attributions !== undefined) {\n    attributions = options.attributions;\n  } else {\n    attributions = [ATTRIBUTION];\n  }\n\n  const crossOrigin = options.crossOrigin !== undefined ?\n    options.crossOrigin : 'anonymous';\n\n  const url = options.url !== undefined ?\n    options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n  XYZ.call(this, {\n    attributions: attributions,\n    cacheSize: options.cacheSize,\n    crossOrigin: crossOrigin,\n    opaque: options.opaque !== undefined ? options.opaque : true,\n    maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n\n};\n\ninherits(OSM, XYZ);\n\nexport default OSM;\n","/**\n * @module ol/source/Stamen\n */\nimport {inherits} from '../util.js';\nimport {ATTRIBUTION as OSM_ATTRIBUTION} from '../source/OSM.js';\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * @const\n * @type {Array.<string>}\n */\nconst ATTRIBUTIONS = [\n  'Map tiles by <a href=\"https://stamen.com/\">Stamen Design</a>, ' +\n        'under <a href=\"https://creativecommons.org/licenses/by/3.0/\">CC BY' +\n        ' 3.0</a>.',\n  OSM_ATTRIBUTION\n];\n\n\n/**\n * @type {Object.<string, {extension: string, opaque: boolean}>}\n */\nconst LayerConfig = {\n  'terrain': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-background': {\n    extension: 'jpg',\n    opaque: true\n  },\n  'terrain-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'terrain-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-background': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner': {\n    extension: 'png',\n    opaque: true\n  },\n  'toner-hybrid': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-labels': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lines': {\n    extension: 'png',\n    opaque: false\n  },\n  'toner-lite': {\n    extension: 'png',\n    opaque: true\n  },\n  'watercolor': {\n    extension: 'jpg',\n    opaque: true\n  }\n};\n\n\n/**\n * @type {Object.<string, {minZoom: number, maxZoom: number}>}\n */\nconst ProviderConfig = {\n  'terrain': {\n    minZoom: 4,\n    maxZoom: 18\n  },\n  'toner': {\n    minZoom: 0,\n    maxZoom: 20\n  },\n  'watercolor': {\n    minZoom: 1,\n    maxZoom: 16\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=2048] Cache size.\n * @property {string} [layer] Layer.\n * @property {number} [minZoom] Minimum zoom.\n * @property {number} [maxZoom] Maximum zoom.\n * @property {boolean} [opaque] Whether the layer is opaque.\n * @property {boolean} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction]\n * Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the Stamen tile server.\n *\n * @constructor\n * @extends {module:ol/source/XYZ}\n * @param {module:ol/source/Stamen~Options=} options Stamen options.\n * @api\n */\nconst Stamen = function(options) {\n  const i = options.layer.indexOf('-');\n  const provider = i == -1 ? options.layer : options.layer.slice(0, i);\n  const providerConfig = ProviderConfig[provider];\n\n  const layerConfig = LayerConfig[options.layer];\n\n  const url = options.url !== undefined ? options.url :\n    'https://stamen-tiles-{a-d}.a.ssl.fastly.net/' + options.layer +\n      '/{z}/{x}/{y}.' + layerConfig.extension;\n\n  XYZ.call(this, {\n    attributions: ATTRIBUTIONS,\n    cacheSize: options.cacheSize,\n    crossOrigin: 'anonymous',\n    maxZoom: options.maxZoom != undefined ? options.maxZoom : providerConfig.maxZoom,\n    minZoom: options.minZoom != undefined ? options.minZoom : providerConfig.minZoom,\n    opaque: layerConfig.opaque,\n    reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n    tileLoadFunction: options.tileLoadFunction,\n    url: url,\n    wrapX: options.wrapX\n  });\n};\n\ninherits(Stamen, XYZ);\n\nexport default Stamen;\n","/*** OpenLayer Set Up ***/\r\n\r\nimport 'ol/ol.css';\r\nimport Map from 'ol/Map';\r\nimport VectorLayer from 'ol/layer/Vector';\r\nimport VectorSource from 'ol/source/Vector';\r\nimport View from 'ol/View';\r\nimport TileLayer from 'ol/layer/Tile';\r\nimport {Fill, Stroke, Style} from 'ol/style';\r\nimport KML from 'ol/format/KML.js';\r\nimport Stamen from 'ol/source/Stamen.js';\r\n\r\n/*** Map and Time Zone Set Up ***/\r\n\r\nvar styleFunction = function(feature) {\r\n    var offset = 0;\r\n    var name = feature.get('name'); // e.g. GMT -08:30\r\n    var match = name.match(/([\\-+]\\d{2}):(\\d{2})$/);\r\n    if (match) {\r\n        var hours = parseInt(match[1], 10);\r\n        var minutes = parseInt(match[2], 10);\r\n        offset = 60 * hours + minutes;\r\n    }\r\n    var date = new Date();\r\n    var local = new Date(date.getTime() +\r\n        (date.getTimezoneOffset() + offset) * 60000);\r\n    // offset from local noon (in hours)\r\n    var delta = Math.abs(12 - local.getHours() + (local.getMinutes() / 60));\r\n    if (delta > 12) {\r\n        delta = 24 - delta;\r\n    }\r\n    var opacity = 0.75 * (1 - delta / 12);\r\n    return new Style({\r\n        fill: new Fill({\r\n            color: [0xff, 0xff, 0x33, opacity]\r\n        }),\r\n        stroke: new Stroke({\r\n            color: '#ffffff'\r\n        })\r\n    });\r\n};\r\n\r\nconst map = new Map({\r\n    target: 'map-container',\r\n    layers: [\r\n        new TileLayer({\r\n            source: new Stamen({\r\n                layer: 'toner'\r\n            })\r\n        }),\r\n        new VectorLayer({\r\n            source: new VectorSource({\r\n                url: 'http://openlayers.org/en/v3.18.2/examples/data/kml/timezones.kml',\r\n                format: new KML({\r\n                    extractStyles: false\r\n                })\r\n            }),\r\n            style: styleFunction\r\n        }),\r\n    ],\r\n    view: new View({\r\n        center: [0, 0],\r\n        zoom: 2\r\n    })\r\n});\r\n\r\nvar info = $('#info');\r\ninfo.tooltip({\r\n    animation: false,\r\n    trigger: 'manual'\r\n});\r\n\r\nvar displayFeatureInfo = function(pixel) {\r\n    info.css({\r\n        left: pixel[0] + 'px',\r\n        top: (pixel[1] - 15) + 'px'\r\n    });\r\n    var feature = map.forEachFeatureAtPixel(pixel, function(feature) {\r\n        return feature;\r\n    });\r\n    if (feature) {\r\n        info.tooltip('hide')\r\n            .attr('data-original-title', feature.get('name'))\r\n            .tooltip('fixTitle')\r\n            .tooltip('show');\r\n    } else {\r\n        info.tooltip('hide');\r\n    }\r\n};\r\n\r\nmap.on('pointermove', function(evt) {\r\n    if (evt.dragging) {\r\n        info.tooltip('hide');\r\n        return;\r\n    }\r\n    displayFeatureInfo(map.getEventPixel(evt.originalEvent));\r\n});\r\n\r\nmap.on('click', function(evt) {\r\n    displayFeatureInfo(evt.pixel);\r\n});\r\n\r\n//------------------------------------------------------------------------------\r\n\r\n/*** FlightPaths ***/\r\n\r\nvar style = new Style({\r\n    stroke: new Stroke({\r\n        color: '#ff0000',\r\n        width: 2\r\n    })\r\n});\r\n\r\nvar flightsSource = new VectorSource({\r\n    wrapX: false,\r\n    attributions: 'Flight data by ' +\r\n    '<a href=\"http://openflights.org/data.html\">OpenFlights</a>,',\r\n    loader: function() {\r\n        var url = 'data/openflights/flights.json';\r\n        fetch(url).then(function(response) {\r\n            return response.json();\r\n        }).then(function(json) {\r\n            var flightsData = json.flights;\r\n            for (var i = 0; i < flightsData.length; i++) {\r\n                var flight = flightsData[i];\r\n                var from = flight[0];\r\n                var to = flight[1];\r\n\r\n                // create an arc circle between the two locations\r\n                var arcGenerator = new arc.GreatCircle(\r\n                    {x: from[1], y: from[0]},\r\n                    {x: to[1], y: to[0]});\r\n\r\n                var arcLine = arcGenerator.Arc(100, {offset: 10});\r\n                if (arcLine.geometries.length === 1) {\r\n                    var line = new LineString(arcLine.geometries[0].coords);\r\n                    line.transform('EPSG:4326', 'EPSG:3857');\r\n\r\n                    var feature = new Feature({\r\n                        geometry: line,\r\n                        finished: false\r\n                    });\r\n                    // add the feature with a delay so that the animation\r\n                    // for all features does not start at the same time\r\n                    addLater(feature, i * 50);\r\n                }\r\n            }\r\n            map.on('postcompose', animateFlights);\r\n        });\r\n    }\r\n});\r\n\r\nvar flightsLayer = new VectorLayer({\r\n    source: flightsSource,\r\n    style: function(feature) {\r\n        // if the animation is still active for a feature, do not\r\n        // render the feature with the layer style\r\n        if (feature.get('finished')) {\r\n            return style;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n});\r\n\r\nmap.addLayer(flightsLayer);\r\n\r\nvar pointsPerMs = 0.1;\r\nfunction animateFlights(event) {\r\n    var vectorContext = event.vectorContext;\r\n    var frameState = event.frameState;\r\n    vectorContext.setStyle(style);\r\n\r\n    var features = flightsSource.getFeatures();\r\n    for (var i = 0; i < features.length; i++) {\r\n        var feature = features[i];\r\n        if (!feature.get('finished')) {\r\n            // only draw the lines for which the animation has not finished yet\r\n            var coords = feature.getGeometry().getCoordinates();\r\n            var elapsedTime = frameState.time - feature.get('start');\r\n            var elapsedPoints = elapsedTime * pointsPerMs;\r\n\r\n            if (elapsedPoints >= coords.length) {\r\n                feature.set('finished', true);\r\n            }\r\n\r\n            var maxIndex = Math.min(elapsedPoints, coords.length);\r\n            var currentLine = new LineString(coords.slice(0, maxIndex));\r\n\r\n            // directly draw the line with the vector context\r\n            vectorContext.drawGeometry(currentLine);\r\n        }\r\n    }\r\n    // tell OpenLayers to continue the animation\r\n    map.render();\r\n}\r\n\r\nfunction addLater(feature, timeout) {\r\n    window.setTimeout(function() {\r\n        feature.set('start', new Date().getTime());\r\n        flightsSource.addFeature(feature);\r\n    }, timeout);\r\n}\r\n\r\n\r\n//------------------------------------------------------------------------------\r\n\r\n/*** Main Script ***/\r\nvar flightSearch = new FlightSearchAPI();\r\nvar params = {\r\n    from: document.getElementById('from').value,\r\n    to: document.getElementById('to').value\r\n};\r\n// Display All available airports\r\nflightSearch.requestAPI('/airports/all', params, successCallback);\r\n\r\n//------------------------------------------------------------------------------\r\n\r\n/** API functions **/\r\nfunction FlightSearchAPI() {\r\n    this.endpoint = 'http://flights.eliashenrich.de/api.php';\r\n\r\n    this.requestAPI = function(action, data, callback) {\r\n        var url = this.endpoint + '?action=' + action;\r\n\r\n        var keys = Object.keys(data);\r\n        for (var i = 0; i < keys.length; i++) {\r\n            var paramName = keys[i];\r\n            var paramValue = data[keys[i]];\r\n\r\n            url += \"&\" + paramName + \"=\" + paramValue;\r\n        }\r\n\r\n        var request = new XMLHttpRequest();\r\n\r\n        request.onreadystatechange = function() {\r\n            console.log(\"Status hat sich geändert\", this.readyState);\r\n\r\n            // Ist die Anfrage beendet?\r\n            if (this.readyState === 4) {\r\n                // Http-Statuscode prüfen\r\n                if (this.status === 200) {\r\n                    console.log(\"Anfrage erfolgreich: \" + action);\r\n                    console.log(this.responseText);\r\n\r\n                    callback(this.responseText, action);\r\n                }\r\n            }\r\n        };\r\n\r\n        request.open('GET', url, true);\r\n        request.send();\r\n    };\r\n}\r\n\r\nfunction successCallback(data, action) {\r\n    var response = JSON.parse(data);\r\n\r\n    if (action == '/route/find') {\r\n        for (var i = 0; i < response.length; i++) {\r\n            var flug = response[i];\r\n\r\n            console.log(\"Flug \" + i);\r\n\r\n            for (var j = 0; j < flug.length; j++) {\r\n                var leg = flug[j];\r\n\r\n                console.log(\"Leg \" + j, leg);\r\n\r\n                var airportFrom = leg.airportFrom.CityName;\r\n                var airportTo = leg.airportTo.CityName;\r\n                var latFrom = leg.airportFrom.PositionLat;\r\n                var lonFrom = leg.airportFrom.PositionLon;\r\n                var latTo = leg.airportTo.PositionLat;\r\n                var lonTo = leg.airportTo.PositionLon;\r\n                if(leg.schedule[j]){\r\n                    var depTime = leg.schedule[j].ScheduledDepartureTime;\r\n                    var arrTime = leg.schedule[j].ScheduledArrivalTime;\r\n                }\r\n\r\n                addListItemRoute(airportFrom, latFrom, lonFrom, airportTo, latTo, lonTo, depTime, arrTime);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (action == '/airports/all') {\r\n        if (response) {\r\n            var result = {};\r\n\r\n            for (var i = 0; i < response.data.length; i++) {\r\n                var obj = response.data[i];\r\n                addListItemAirport(obj.Id, obj.CodeIATA, obj.CityName, obj.PositionLat, obj.PositionLon)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n\r\n/*** General functions ***/\r\nfunction showOverlay() {\r\n    var params = {\r\n        from: document.getElementById('from').value,\r\n        to: document.getElementById('to').value\r\n    };\r\n    var start = mapAirportCodeToName(params.from);\r\n    var startId = mapAirportCodeToId(params.from);\r\n    var destination = mapAirportCodeToName(params.to);\r\n    var destinationId = mapAirportCodeToId(params.to);\r\n    var startLon = mapAirportCodeToLon(params.from);\r\n    var startLat = mapAirportCodeToLat(params.from);\r\n    var destinationLon = mapAirportCodeToLon(params.to);\r\n    var destinationLat = mapAirportCodeToLat(params.to);\r\n    params.from = startId;\r\n    params.to = destinationId;\r\n    //console.log(\"startLon\"+startLon+\"startLat\"+startLat+\"destinationLon\"+destinationLon+\"destinationLat\"+destinationLat);\r\n\r\n    // Get Routes between aiports\r\n    flightSearch.requestAPI('/route/find', params, successCallback);\r\n    return false;\r\n\r\n    var element = document.getElementById('waitOverlayWrapper');\r\n    element.style.display = \"block\";\r\n    return false;\r\n}\r\n\r\nfunction hideOverlay() {\r\n    var element = document.getElementById('waitOverlayWrapper');\r\n    element.style.display = 'none';\r\n}\r\n\r\nfunction addListItemRoute(airportFrom, latFrom, lonFrom, airportTo, latTo, lonTo, departureTime, arrivalTime) {\r\n\r\n    var listItem = document.getElementById('listDummyRoute');\r\n\r\n    // Listenelement klonen und neu einfügen\r\n    var newListItem = listItem.cloneNode(true);\r\n    newListItem.setAttribute('id', '');\r\n    newListItem.classList.remove('hidden');\r\n\r\n\r\n    // Kindelement des neuen Knotens bearbeiten\r\n    newListItem.getElementsByClassName('flightFrom')[0].innerText = airportFrom;\r\n    newListItem.getElementsByClassName('latFrom')[0].innerText = latFrom;\r\n    newListItem.getElementsByClassName('lonFrom')[0].innerText = lonFrom;\r\n    newListItem.getElementsByClassName('flightTo')[0].innerText = airportTo;\r\n    newListItem.getElementsByClassName('latTo')[0].innerText = latTo;\r\n    newListItem.getElementsByClassName('lonTo')[0].innerText = lonTo;\r\n    newListItem.getElementsByClassName('timeDeparture')[0].innerText = departureTime.substr(0, 5);\r\n    newListItem.getElementsByClassName('timeArrival')[0].innerText = arrivalTime.substr(0, 5);\r\n\r\n    document.getElementById('flightList').appendChild(newListItem);\r\n\r\n}\r\n\r\nfunction addListItemAirport(id, code, city, lat, lon) {\r\n\r\n    var listItem = document.getElementById('listDummyAirport');\r\n\r\n    // Listenelement klonen und neu einfügen\r\n    var newListItem = listItem.cloneNode(true);\r\n    newListItem.setAttribute('id', '');\r\n    newListItem.classList.remove('hidden');\r\n\r\n    // Kindelement des neuen Knotens bearbeiten\r\n    newListItem.getElementsByClassName('airportId')[0].innerText = id;\r\n    newListItem.getElementsByClassName('airportCode')[0].innerText = code;\r\n    newListItem.getElementsByClassName('airportName')[0].innerText = city;\r\n    newListItem.getElementsByClassName('airportLat')[0].innerText = lat;\r\n    newListItem.getElementsByClassName('airportLon')[0].innerText = lon;\r\n\r\n    document.getElementById('airportList').appendChild(newListItem);\r\n\r\n}\r\n\r\nfunction mapAirportCodeToName(code) {\r\n    code = code + \"\";\r\n    var result = \"\";\r\n\r\n    var airportCodes = document.getElementsByClassName('airportCode');\r\n    var airportNames = document.getElementsByClassName('airportName');\r\n\r\n    for (var i = 1; i < airportCodes.length; i++) {\r\n        if (airportCodes[i].innerText == code) {\r\n            result = airportNames[i].innerText;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction mapAirportCodeToId(code) {\r\n    code = code + \"\";\r\n    var result = null;\r\n\r\n    var airportCodes = document.getElementsByClassName('airportCode');\r\n    var airportId = document.getElementsByClassName('airportId');\r\n\r\n    for (var i = 1; i < airportCodes.length; i++) {\r\n        if (airportCodes[i].innerText == code) {\r\n            result = airportId[i].innerText;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction mapAirportCodeToLon(code) {\r\n    code = code + \"\";\r\n    var result = null;\r\n\r\n    var airportCodes = document.getElementsByClassName('airportCode');\r\n    var airportLon = document.getElementsByClassName('airportLon');\r\n\r\n    for (var i = 1; i < airportCodes.length; i++) {\r\n        if (airportCodes[i].innerText == code) {\r\n            result = airportLon[i].innerText;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction mapAirportCodeToLat(code) {\r\n    code = code + \"\";\r\n    var result = null;\r\n\r\n    var airportCodes = document.getElementsByClassName('airportCode');\r\n    var airportLat = document.getElementsByClassName('airportLat');\r\n\r\n    for (var i = 1; i < airportCodes.length; i++) {\r\n        if (airportCodes[i].innerText == code) {\r\n            result = airportLat[i].innerText;\r\n        }\r\n    }\r\n    return result;\r\n}"]}